<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="genmpi__distr_8f90" kind="file" language="Fortran">
    <compoundname>genmpi_distr.f90</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">call<sp/>MPI_Comm_size(comm,<sp/>sz,<sp/>ier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">call<sp/>MPI_Comm_rank(comm,<sp/>ra,<sp/>ier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>/=<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>print<sp/>*,</highlight><highlight class="stringliteral">&apos;Error<sp/>in<sp/>matrix_distr_real8:<sp/>root<sp/>must<sp/>be<sp/>0,<sp/>but<sp/>is:&apos;</highlight><highlight class="normal">,root</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">mpi_abort(mpi_comm_world,1,ier)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordflow">endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(recvtypes(sz))<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(sendtypes(sz))</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(recvcounts(sz))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(sendcounts(sz))</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(sdispls(sz))</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(rdispls(sz))</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">sdispls<sp/><sp/><sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="20"><highlight class="normal">rdispls<sp/><sp/><sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="21"><highlight class="normal">recvtypes<sp/><sp/>=<sp/>mpi_character</highlight></codeline>
<codeline lineno="22"><highlight class="normal">sendtypes<sp/><sp/>=<sp/>mpi_character</highlight></codeline>
<codeline lineno="23"><highlight class="normal">recvcounts<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="24"><highlight class="normal">sendcounts<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">!<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">!<sp/>Create<sp/>MPI<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">!<sp/>MPI_TYPE_CREATE_SUBARRAY(NDIMS,<sp/>ARRAY_OF_SIZES,<sp/>ARRAY_OF_SUBSIZES,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>ARRAY_OF_STARTS,<sp/>ORDER,<sp/>OLDTYPE,<sp/>NEWTYPE,<sp/>IERROR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>INTEGER<sp/><sp/><sp/><sp/>NDIMS,<sp/>ARRAY_OF_SIZES(*),<sp/>ARRAY_OF_SUBSIZES(*),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/><sp/>ARRAY_OF_STARTS(*),<sp/>ORDER,<sp/>OLDTYPE,<sp/>NEWTYPE,<sp/>IERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">!<sp/>determine<sp/>mpi_types<sp/>for<sp/>the<sp/>receive<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">!<sp/>every<sp/>process<sp/>receives<sp/>from<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">!<sp/>all<sp/>processes<sp/>will<sp/>receive<sp/>only<sp/>from<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">sizes<sp/><sp/><sp/><sp/><sp/>=<sp/>shape(b)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">subsizes<sp/><sp/>=<sp/>(/<sp/>lm(ra+1),<sp/>ln(ra+1)<sp/>/)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">starts<sp/><sp/><sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">call<sp/>MPI_Type_create_subarray(2,sizes,subsizes,starts,<sp/>&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>mpi_order_fortran,<sp/>basic_type,recvtypes(1),<sp/>ier)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">call<sp/>MPI_Type_commit(recvtypes(1),ier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">recvcounts(1)<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">!<sp/>determine<sp/>mpi<sp/>types<sp/>for<sp/>the<sp/>senders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">!<sp/>only<sp/>root<sp/>will<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ra<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,sz</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes<sp/><sp/><sp/><sp/>=<sp/>shape(a)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>subsizes<sp/>=<sp/>(/<sp/>lm(i)<sp/><sp/><sp/><sp/><sp/>,ln(i)<sp/><sp/><sp/><sp/><sp/>/)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>starts<sp/><sp/><sp/>=<sp/>(/<sp/>is(i)<sp/>-<sp/>1<sp/>,js(i)<sp/>-<sp/>1<sp/>/)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>sendcounts<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">mpi_type_create_subarray(2,sizes,subsizes,starts,<sp/><sp/>&amp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpi_order_fortran,<sp/>basic_type,sendtypes(i),ier)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">mpi_type_commit(sendtypes(i),ier)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordflow">endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">call<sp/>MPI_Alltoallw(a,sendcounts,sdispls,sendtypes,<sp/>&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>b,recvcounts,rdispls,recvtypes,comm,ier)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,sz</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendtypes(i)<sp/>/=<sp/>mpi_character)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">mpi_type_free(sendtypes(i),ier)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recvtypes(i)<sp/>/=<sp/>mpi_character)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">mpi_type_free(recvtypes(i),ier)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordflow">enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">!directions<sp/>for<sp/>vi<sp/>vim:<sp/>filetype=fortran<sp/>:<sp/>syntax=fortran</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/hoonhout/Checkouts/XBeach/trunk/src/xbeachlibrary/templates/genmpi_distr.f90"/>
  </compounddef>
</doxygen>
