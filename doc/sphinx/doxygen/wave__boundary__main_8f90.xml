<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="wave__boundary__main_8f90" kind="file" language="Fortran">
    <compoundname>wave_boundary_main.f90</compoundname>
    <innerclass refid="interfacewave__boundary__main__module_1_1create__incident__waves" prot="private">wave_boundary_main_module::create_incident_waves</innerclass>
    <innernamespace refid="namespacewave__boundary__main__module">wave_boundary_main_module</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacewave__boundary__main__module" refkind="compound"><highlight class="keyword">module</highlight><highlight class="normal"><sp/><ref refid="namespacewave__boundary__main__module" kindref="compound">wave_boundary_main_module</ref></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/><ref refid="interfacewave__boundary__main__module_1_1create__incident__waves" kindref="compound">create_incident_waves</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>module<sp/>is<sp/>the<sp/>main<sp/>entry<sp/>to<sp/>generating<sp/>wave<sp/>boundary<sp/>conditions<sp/>in<sp/>XBeach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>and<sp/>other<sp/>models.<sp/>This<sp/>module<sp/>is<sp/>accessed<sp/>by<sp/>wave_boundary_update_module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>The<sp/>interface<sp/>&apos;create_incident_wave&apos;,<sp/>which<sp/>returns<sp/>wave<sp/>boundary<sp/>conditions<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>correct<sp/>time<sp/>step<sp/>can<sp/>be<sp/>called<sp/>from<sp/>outside<sp/>the<sp/>module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>NOTE!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>&apos;wave_boundary&apos;<sp/>should<sp/>only<sp/>be<sp/>called<sp/>by<sp/>processes<sp/>with<sp/>a<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>for<sp/>which<sp/>wave<sp/>boundary<sp/>conditions<sp/>are<sp/>required<sp/>(in<sp/>XBeach<sp/>only<sp/>if<sp/>xmpi_istop).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Else<sp/>processes<sp/>will<sp/>waste<sp/>I/O<sp/>resources<sp/>and<sp/>computational<sp/>time<sp/>generating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>useless<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>TO<sp/>FIX:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>-<sp/>generate_wave_train_properties_per_offshore_point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>-<sp/>read<sp/>all<sp/>spectrum<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>-<sp/>continue<sp/>at<sp/>line<sp/>2117<sp/>wave_boundary_update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>generate<sp/>an<sp/>interface<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>pass<sp/>unnecessary<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>when<sp/>using<sp/>different<sp/>types<sp/>of<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERFACE<sp/>TO<sp/>OTHER<sp/>MODELS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="interfacewave__boundary__main__module_1_1create__incident__waves" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">interface</highlight><highlight class="normal"><sp/><ref refid="interfacewave__boundary__main__module_1_1create__incident__waves" kindref="compound">create_incident_waves</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">module<sp/>procedure</highlight><highlight class="normal"><sp/><ref refid="namespacewave__boundary__main__module_1a09e90be406b9d87c5d4759e7c43cbe14" kindref="member">create_incident_waves_surfbeat</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!module<sp/>procedure<sp/>generate_wave_boundary_nonhydrostatic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>end<sp/>interface<sp/></highlight><highlight class="normal"><ref refid="interfacewave__boundary__main__module_1_1create__incident__waves" kindref="compound">create_incident_waves</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUBROUTINES<sp/>CALLED<sp/>BY<sp/>INTERFACE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__main__module_1a09e90be406b9d87c5d4759e7c43cbe14" kindref="member">create_incident_waves_surfbeat</ref>(np,xb,yb,ntheta,dtheta,theta,t,<sp/>&amp;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>bctype,bcfile,<sp/>&amp;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>x0,y0,hboundary,<sp/>&amp;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>randomseed,<sp/>&amp;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>eebc,qsbc,qnbc,<sp/>&amp;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>hbc,tbc,dbc,isrecomputed,<sp/>&amp;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>nonhspectrum,<sp/>&amp;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>sprdthr,trepfac,nmax,fcutoff,rho,<sp/>&amp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>tm01switch,nspr)</highlight></codeline>
<codeline lineno="61" refid="namespacewave__boundary__main__module_1a09e90be406b9d87c5d4759e7c43cbe14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>subroutine<sp/>handles<sp/>all<sp/>calls<sp/>for<sp/>surf-beat<sp/>wave<sp/>boundary<sp/>conditions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>The<sp/>subroutine<sp/>automatically<sp/>initialises<sp/>all<sp/>variables<sp/>if<sp/>needed,<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>boundary<sp/>condition<sp/>information<sp/>at<sp/>all<sp/>offshore<sp/>points<sp/>at<sp/>the<sp/>required<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>in<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Input<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>np<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>number<sp/>of<sp/>offshore<sp/>grid<sp/>points<sp/>(-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>xb,yb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>vectors<sp/>of<sp/>x<sp/>and<sp/>y<sp/>coordinates<sp/>of<sp/>offshore<sp/>grid<sp/>points<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>ntheta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>number<sp/>of<sp/>computational<sp/>wave<sp/>bins<sp/>in<sp/>directional<sp/>space<sp/>(-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>dtheta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(constant)<sp/>grid<sp/>size<sp/>of<sp/>wave<sp/>direction<sp/>bins<sp/>(rad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>theta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>vector<sp/>of<sp/>centre<sp/>of<sp/>wave<sp/>direction<sp/>bins<sp/>(rad).<sp/>Angles<sp/>are<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cartesian<sp/>system<sp/>relative<sp/>to<sp/>the<sp/>coordinate<sp/>system<sp/>x<sp/>(UTM<sp/>East)<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>current<sp/>time<sp/>(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>bctype<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>integer<sp/>specifying<sp/>the<sp/>type<sp/>of<sp/>boundary<sp/>conditions<sp/>to<sp/>produce,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equal<sp/>to<sp/>par%instat<sp/>in<sp/>XBeach<sp/>(-),<sp/>see<sp/>paramsconst.F90<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>bcfile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name<sp/>of<sp/>main<sp/>wave<sp/>boundary<sp/>condition<sp/>file<sp/>to<sp/>read,<sp/>equal<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>par%bcfile<sp/>in<sp/>XBeach<sp/>(-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>x0,y0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>reference<sp/>point<sp/>coordinates<sp/>for<sp/>wave<sp/>conditions<sp/>(for<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/>of<sp/>model<sp/>grid).<sp/>Used<sp/>to<sp/>determine<sp/>phase<sp/>of<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components<sp/>in<sp/>boundary<sp/>conditions.<sp/>Must<sp/>be<sp/>identical<sp/>on<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processes<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>hboundary<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>average<sp/>water<sp/>depth<sp/>along<sp/>the<sp/>entire<sp/>offshore<sp/>boundary<sp/>(m).<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>should<sp/>be<sp/>constant,<sp/>or<sp/>not<sp/>vary<sp/>strongly,<sp/>across<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>randomseed<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>integer<sp/>containing<sp/>initial<sp/>random<sp/>seed<sp/>value<sp/>between<sp/>1<sp/>and<sp/>2^31-2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>should<sp/>have<sp/>an<sp/>identical<sp/>value<sp/>on<sp/>all<sp/>processes,<sp/>and<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>generate<sp/>identical<sp/>random<sp/>numbers<sp/>sequences<sp/>on<sp/>all<sp/>processors<sp/>(-).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>set<sp/>to<sp/>same<sp/>integer<sp/>throughout<sp/>simulation,<sp/>identical<sp/>random<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>generated.<sp/>Use<sp/>int(clocktime)<sp/>to<sp/>have<sp/>new<sp/>random<sp/>numbers<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>time<sp/>series<sp/>generation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Output<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>eebc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>array<sp/>of<sp/>size<sp/>(np,ntheta)<sp/>containing<sp/>wave<sp/>energy<sp/>density<sp/>per</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offshore<sp/>point<sp/>and<sp/>wave<sp/>direction<sp/>at<sp/>time=t<sp/>(J/m2/rad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>qsbc,qnbc<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>vector<sp/>of<sp/>size<sp/>(np)<sp/>containing<sp/>depth-avaraged<sp/>discharge<sp/>per<sp/>along-boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meter<sp/>in<sp/>the<sp/>s<sp/>(landward)<sp/>and<sp/>n<sp/>(longshore)<sp/>direction<sp/>per</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offshore<sp/>point<sp/>at<sp/>time=t<sp/>(m2/s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Hbc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Hm0<sp/>computed<sp/>for<sp/>the<sp/>entire<sp/>boundary<sp/>based<sp/>on<sp/>the<sp/>input<sp/>spectra,<sp/>valid<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>duration<sp/>of<sp/>the<sp/>entire<sp/>spectrum<sp/>(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Tbc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Trep<sp/>computed<sp/>for<sp/>the<sp/>entire<sp/>boundary<sp/>based<sp/>on<sp/>the<sp/>input<sp/>spectra,<sp/>valid<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>duration<sp/>of<sp/>the<sp/>entire<sp/>spectrum<sp/>(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Dbc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mean<sp/>wave<sp/>direction<sp/>computed<sp/>for<sp/>the<sp/>entire<sp/>boundary<sp/>based<sp/>on<sp/>the<sp/>input<sp/>spectra,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>for<sp/>the<sp/>duration<sp/>of<sp/>the<sp/>entire<sp/>spectrum<sp/>(rad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>isRecomputed<sp/><sp/><sp/><sp/>:<sp/>logical,<sp/>indicating<sp/>whether<sp/>a<sp/>new<sp/>spectrum<sp/>has<sp/>been<sp/>read<sp/>and<sp/>computed<sp/>and<sp/>therfore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showing<sp/>new<sp/>values<sp/>for<sp/>Hbc,<sp/>Tbc<sp/>and<sp/>Dbc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Optional<sp/>input<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>nonhspectrum<sp/><sp/><sp/><sp/>:<sp/>generate<sp/>a<sp/>non-hydrostatic<sp/>time<sp/>series<sp/>instead<sp/>of<sp/>a<sp/>surf-beat<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series.<sp/>Default<sp/>=<sp/>.false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>sprdthr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Threshold<sp/>ratio<sp/>to<sp/>maxval<sp/>of<sp/>S<sp/>above<sp/>which<sp/>spec<sp/>dens<sp/>are<sp/>read<sp/>in,<sp/>see<sp/>XBeach.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>=<sp/>0.08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>trepfac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Compute<sp/>mean<sp/>wave<sp/>period<sp/>over<sp/>energy<sp/>band:<sp/>par%trepfac*maxval(Sf);<sp/>converges<sp/>to<sp/>Tm01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>trepfac<sp/>=<sp/>0.0.<sp/>Default<sp/>=<sp/>0.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>nmax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>maximum<sp/>ratio<sp/>of<sp/>cg/c<sp/>fro<sp/>computing<sp/>long<sp/>wave<sp/>boundary<sp/>conditions.<sp/>Default<sp/>=<sp/>0.8d0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>fcutoff<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Low-frequency<sp/>cutoff<sp/>frequency<sp/>for<sp/>long-wave<sp/>interaction<sp/>components.<sp/>Default<sp/>=<sp/>0.d0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>rho<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Density<sp/>of<sp/>water<sp/>(kg/m3).<sp/>Default<sp/>=<sp/>1025.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Tm01switch<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Turn<sp/>on<sp/>Tm01<sp/>(1)<sp/>or<sp/>Tm-10<sp/>(0)<sp/>to<sp/>compute<sp/>Trep.<sp/>Default<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>nspr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/>nspr<sp/>=<sp/>1<sp/>long<sp/>wave<sp/>direction<sp/>forced<sp/>into<sp/>centres<sp/>of<sp/>short<sp/>wave<sp/>bins,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nspr<sp/>=<sp/>0<sp/>regular<sp/>long<sp/>wave<sp/>spreading.<sp/>Default<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module" kindref="compound">wave_boundary_update_module</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/><ref refid="namespacewave__boundary__update__module_1a16083edad0af8a520cc3eeabc046d00a" kindref="member">generate_wave_boundary_surfbeat</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Input<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>np,ntheta,bctype</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>t,x0,y0,hboundary,dtheta</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=*)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>bcfile</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(np)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>xb,yb</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(ntheta)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>::<sp/>theta</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>randomseed</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>output<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Hbc,Tbc,Dbc</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>isRecomputed</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(np)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>qsbc,qnbc</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(np,ntheta)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal">::<sp/>eebc</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Optional<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">optional</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>nonhspectrum</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">optional</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>sprdthr,trepfac,nmax,rho,fcutoff</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">optional</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Tm01switch</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,itheta,l,dummy</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>durationlength</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Check<sp/>function<sp/>input<sp/>arguments<sp/>and<sp/>set<sp/>defaults</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(nonhspectrum))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum<sp/>=<sp/>nonhspectrum</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(sprdthr))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%sprdthr<sp/>=<sp/>0.08d0</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%sprdthr<sp/>=<sp/>sprdthr</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(trepfac))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%trepfac<sp/>=<sp/>0.01d0</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%trepfac<sp/>=<sp/>trepfac</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(tm01switch))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%Tm01switch<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%Tm01switch<sp/>=<sp/>tm01switch</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(nspr))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nspr<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nspr<sp/>=<sp/>nspr</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(nmax))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nmax<sp/>=<sp/>0.8d0</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nmax<sp/>=<sp/>nmax</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(fcutoff))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%fcutoff<sp/>=<sp/>0.0d0</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%fcutoff<sp/>=<sp/>fcutoff</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(.not.</highlight><highlight class="keyword">present</highlight><highlight class="normal">(rho))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%rho<sp/>=<sp/>1025.d0</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%rho<sp/>=<sp/>rho</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Check<sp/>if<sp/>the<sp/>wave<sp/>boundary<sp/>conditions<sp/>have<sp/>been<sp/>initialised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%initialized)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>copies<sp/>of<sp/>main<sp/>grid<sp/>properties<sp/>in<sp/>this<sp/>module.<sp/>Note,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>may<sp/>be<sp/>possible<sp/>with<sp/>pointers<sp/>instead<sp/>of<sp/>allocated<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%masterFileName<sp/>=<sp/>bcfile</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%np<sp/>=<sp/>np</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%ntheta<sp/>=<sp/>ntheta</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%x0<sp/>=<sp/>x0</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%y0<sp/>=<sp/>y0</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%hboundary<sp/>=<sp/>hboundary</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Potentially,<sp/>initialized<sp/>can<sp/>be<sp/>set<sp/>outside<sp/>this<sp/>module,<sp/>so<sp/>ensure<sp/>all<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>arrays<sp/>are<sp/>deallocated<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%xb))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%xb)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%yb))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%yb)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Now<sp/>allocate<sp/>arrays<sp/>to<sp/>the<sp/>correct<sp/>size<sp/>and<sp/>set<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%xb(np))</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%yb(np))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta(ntheta))</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%xb<sp/>=<sp/>xb</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%yb<sp/>=<sp/>yb</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta<sp/>=<sp/>theta</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Ensure<sp/>all<sp/>theta<sp/>directions<sp/>are<sp/>between<sp/>0<sp/>and<sp/>2pi,<sp/>required<sp/>for<sp/>some<sp/>trig.<sp/>on<sp/>some<sp/>compilers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,ntheta</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta(itheta)<sp/>=<sp/>mod(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta(itheta),8.d0*atan(1.d0))</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>space<sp/>for<sp/>the<sp/>random<sp/>seed.<sp/>This<sp/>seed<sp/>is<sp/>set<sp/>to<sp/>40<sp/>integers<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>should<sp/>be<sp/>identical<sp/>on<sp/>all<sp/>processes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%randomseed))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%randomseed)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%randomseed<sp/>=<sp/>randomseed</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Start<sp/>initialization<sp/>subroutines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__main__module_1a8e7ddf8c51142c9c720d620aa90363b6" kindref="member">initialise_wave_spectrum_parameters</ref></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%initialized<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Set<sp/>time<sp/>to<sp/>recompute<sp/>new<sp/>boundary<sp/>condition<sp/>time<sp/>series<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>now<sp/>so<sp/>boundary<sp/>conditions<sp/>are<sp/>generated<sp/>in<sp/>first<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startComputeNewSeries<sp/>=<sp/>t</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Generate<sp/>or<sp/>interpolate<sp/>boundary<sp/>condition<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t&gt;=<ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startComputeNewSeries)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>The<sp/>start<sp/>of<sp/>the<sp/>current<sp/>boundary<sp/>condition<sp/>should<sp/>be<sp/>the<sp/>end<sp/>of<sp/>the<sp/>previous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>boundary<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startCurrentSeries<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startComputeNewSeries</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Call<sp/>subroutine<sp/>to<sp/>generate<sp/>wave<sp/>boundary<sp/>condition<sp/>time<sp/>series<sp/>from<sp/>spectral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a16083edad0af8a520cc3eeabc046d00a" kindref="member">generate_wave_boundary_surfbeat</ref>(durationlength)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Update<sp/>time<sp/>administration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startComputeNewSeries<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startComputeNewSeries<sp/>+<sp/>&amp;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>durationlength</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isrecomputed<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Interpolate<sp/>energy<sp/>and<sp/>discharge<sp/>at<sp/>all<sp/>locations<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/></highlight><highlight class="keyword">size</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,ntheta</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,np</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc,<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(i,itheta,:),l,&amp;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,eebc(i,itheta),dummy)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,np</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc,<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(i,:),l,&amp;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,qsbc(i),dummy)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc,<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct(i,:),l,&amp;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,qnbc(i),dummy)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Interpolate<sp/>time<sp/>series<sp/>in<sp/>other<sp/>models.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hbc<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Hbc</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tbc<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Tbc</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dbc<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Dbc</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__main__module_1a09e90be406b9d87c5d4759e7c43cbe14" kindref="member">create_incident_waves_surfbeat</ref></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__main__module_1a8e7ddf8c51142c9c720d620aa90363b6" kindref="member">initialise_wave_spectrum_parameters</ref></highlight></codeline>
<codeline lineno="281" refid="namespacewave__boundary__main__module_1a8e7ddf8c51142c9c720d620aa90363b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>subroutine<sp/>reads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacefilefunctions" kindref="compound">filefunctions</ref></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module" kindref="compound">xmpi_module</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fid,err</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,nspectra</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(1024)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>testline</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(1)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>testchar</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--------------------------------&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Initializing<sp/>spectral<sp/>wave<sp/>boundary<sp/>conditions<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Initialize<sp/>that<sp/>wave<sp/>boundary<sp/>conditions<sp/>need<sp/>to<sp/>be<sp/>calculated<sp/>(first<sp/>time<sp/>at<sp/>least)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Stored<sp/>and<sp/>defined<sp/>in<sp/>wave_boundary_main_module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%repeatwbc<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Initialize<sp/>the<sp/>number<sp/>of<sp/>times<sp/>wave<sp/>boundary<sp/>conditions<sp/>have<sp/>been<sp/>generated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Stored<sp/>and<sp/>defined<sp/>in<sp/>wave_boundary_main_module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bccount<sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Initialize<sp/>bcendtime<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Stored<sp/>and<sp/>defined<sp/>in<sp/>wave_boundary_main_module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%spectrumendtime<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Initialise<sp/>lastwaveheight<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Stored<sp/>and<sp/>defined<sp/>in<sp/>wave_boundary_main_module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%lastwaveelevation(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%np,&amp;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%ntheta))</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>open<sp/>location<sp/>list<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fid<sp/>=<sp/><ref refid="namespacefilefunctions_1ac1d555ba2ee4df77c53632cb4a9216ca" kindref="member">create_new_fid</ref>()</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">open</highlight><highlight class="normal">(fid,file=<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%masterFileName,status=</highlight><highlight class="stringliteral">&apos;old&apos;</highlight><highlight class="normal">,form=</highlight><highlight class="stringliteral">&apos;formatted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>check<sp/>for<sp/>LOCLIST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*)testline</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trim(testline)==</highlight><highlight class="stringliteral">&apos;LOCLIST&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>check<sp/>the<sp/>length<sp/>of<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(err==0)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i=i+1</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=err)testchar</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rewind(fid)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nspectra<sp/>=<sp/>i-1</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>store<sp/>this<sp/>information<sp/>in<sp/>the<sp/>main<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%nspectra<sp/>=<sp/>nspectra</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>at<sp/>least<sp/>1<sp/>spectrum<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nspectra&lt;1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ewls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Error<sp/>reading<sp/>file<sp/>&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trim(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%masterFileName))</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ewls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Ensure<sp/>that<sp/>if<sp/>LOCLIST<sp/>option<sp/>is<sp/>used,<sp/>&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;at<sp/>least<sp/>one<sp/>spectrum<sp/>location<sp/>is<sp/>specified&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>read<sp/>first<sp/>line<sp/>again<sp/>to<sp/>set<sp/>cursor<sp/>at<sp/>correct<sp/>point<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=err)testline</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Now<sp/>allocate<sp/>space<sp/>for<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bcfiles(nspectra))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%xspec(nspectra))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%yspec(nspectra))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,nspectra</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>read<sp/>x,y<sp/>and<sp/>file<sp/>name<sp/>per<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=err)<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%xspec(i),<sp/>&amp;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%yspec(i),<sp/>&amp;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bcfiles(i)%fname</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bcfiles(i)%listline<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>/=<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>something<sp/>has<sp/>gone<sp/>wrong<sp/>during<sp/>the<sp/>read<sp/>of<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ewls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,i0,a,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;error<sp/>reading<sp/>line<sp/>&apos;</highlight><highlight class="normal">,i+1,</highlight><highlight class="stringliteral">&apos;<sp/>of<sp/>file<sp/>&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trim(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%masterFileName))</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ewls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;check<sp/>file<sp/>for<sp/>format<sp/>errors&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nspectra<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bcfiles(nspectra))</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%xspec(nspectra))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%yspec(nspectra))</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bcfiles(1)%fname<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%masterFileName</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bcfiles(1)%listline<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%xspec<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%x0</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%yspec<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%y0</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">close</highlight><highlight class="normal">(fid)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="377"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--------------------------------&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="keyword"><sp/><sp/><sp/>end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__main__module_1a8e7ddf8c51142c9c720d620aa90363b6" kindref="member">initialise_wave_spectrum_parameters</ref></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>module<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__main__module" kindref="compound">wave_boundary_main_module</ref></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/hoonhout/Checkouts/XBeach/trunk/src/xbeachlibrary/wave_boundary_main.f90"/>
  </compounddef>
</doxygen>
