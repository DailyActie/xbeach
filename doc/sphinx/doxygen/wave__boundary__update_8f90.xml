<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="wave__boundary__update_8f90" kind="file" language="Fortran">
    <compoundname>wave_boundary_update.f90</compoundname>
    <innerclass refid="structwave__boundary__update__module_1_1spectrum" prot="private">wave_boundary_update_module::spectrum</innerclass>
    <innerclass refid="structwave__boundary__update__module_1_1shortspectrum" prot="private">wave_boundary_update_module::shortspectrum</innerclass>
    <innerclass refid="structwave__boundary__update__module_1_1waveparamsnew" prot="private">wave_boundary_update_module::waveparamsnew</innerclass>
    <innernamespace refid="namespacewave__boundary__update__module">wave_boundary_update_module</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacewave__boundary__update__module" refkind="compound"><highlight class="keyword">module</highlight><highlight class="normal"><sp/><ref refid="namespacewave__boundary__update__module" kindref="compound">wave_boundary_update_module</ref></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">save</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/><ref refid="namespacewave__boundary__update__module_1a16083edad0af8a520cc3eeabc046d00a" kindref="member">generate_wave_boundary_surfbeat</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="structwave__boundary__update__module_1_1spectrum" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal"><sp/><ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>These<sp/>are<sp/>related<sp/>to<sp/>input<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="structwave__boundary__update__module_1_1spectrum_1adea5fd2fb082fcb728ec7995c38147cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>2D<sp/>variance<sp/>density<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="structwave__boundary__update__module_1_1spectrum_1abf0eeb88328c0f7cc0dd54e02a230a0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>f,ang<sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>1D<sp/>frequency<sp/>and<sp/>direction<sp/>vectors<sp/>for<sp/>S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="structwave__boundary__update__module_1_1spectrum_1aa904a0dec801c1801c259d6287063b1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>sf<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>S<sp/>integrated<sp/>over<sp/>all<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="structwave__boundary__update__module_1_1spectrum_1a5adc057e240983678d497c53b0260643" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>nf,nang<sp/><sp/></highlight><highlight class="comment">!<sp/>number<sp/>of<sp/>frequencies<sp/>and<sp/>angles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="structwave__boundary__update__module_1_1spectrum_1a5a94f59f91c483ee462bdfdb7bb93680" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>df,dang<sp/><sp/></highlight><highlight class="comment">!<sp/>frequency<sp/>and<sp/>angle<sp/>step<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structwave__boundary__update__module_1_1spectrum_1aa66ed0ba3a23093dcb4246da8fdec659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>hm0,fp,dir0,scoeff<sp/><sp/></highlight><highlight class="comment">!<sp/>imposed<sp/>significant<sp/>wave<sp/>height,<sp/>peak<sp/>frequency,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>main<sp/>wave<sp/>angle<sp/>and<sp/>spreading<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structwave__boundary__update__module_1_1spectrum_1ab1d004a0d8d9d975a07532e3f4f864fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>trep,dirm<sp/></highlight><highlight class="comment">!<sp/>representative<sp/>period<sp/>and<sp/>mean<sp/>wave<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>endtype<sp/></highlight><highlight class="normal"><ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref></highlight></codeline>
<codeline lineno="19" refid="structwave__boundary__update__module_1_1shortspectrum" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal"><sp/><ref refid="structwave__boundary__update__module_1_1shortspectrum" kindref="compound">shortspectrum</ref></highlight></codeline>
<codeline lineno="20" refid="structwave__boundary__update__module_1_1shortspectrum_1a1a11c3878b0410bb090e498c976606b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>sf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>S<sp/>integrated<sp/>over<sp/>all<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>endtype<sp/></highlight><highlight class="normal"><ref refid="structwave__boundary__update__module_1_1shortspectrum" kindref="compound">shortspectrum</ref></highlight></codeline>
<codeline lineno="22" refid="structwave__boundary__update__module_1_1waveparamsnew" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">type</highlight><highlight class="normal"><sp/><ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>These<sp/>are<sp/>related<sp/>to<sp/>the<sp/>generated<sp/>bc<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structwave__boundary__update__module_1_1waveparamsnew_1a9181df924150df364ca4a13a10d63d18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>h0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>average<sp/>water<sp/>depth<sp/>on<sp/>offshore<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structwave__boundary__update__module_1_1waveparamsnew_1a4f69d7d6f5c7d35233c2e79adcdb827e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>k<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>number<sp/>of<sp/>wave<sp/>train<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structwave__boundary__update__module_1_1waveparamsnew_1adf6a1a61061208e7fad6ad3fba49be5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>rtbc,dtbc<sp/><sp/></highlight><highlight class="comment">!<sp/>duration<sp/>and<sp/>time<sp/>step<sp/>to<sp/>be<sp/>written<sp/>to<sp/>boundary<sp/>condition<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structwave__boundary__update__module_1_1waveparamsnew_1a7902953dd96e48d8bed41627c885cfaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>rtin,dtin<sp/><sp/></highlight><highlight class="comment">!<sp/>duration<sp/>and<sp/>time<sp/>step<sp/>for<sp/>the<sp/>internal<sp/>time<sp/>axis,<sp/>based<sp/>on<sp/>Fourier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>limitations<sp/>and<sp/>the<sp/>number<sp/>of<sp/>wave<sp/>train<sp/>components<sp/>(wp%K)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structwave__boundary__update__module_1_1waveparamsnew_1af392e7310f68363b508c2c1e62c8cdbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>tin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal<sp/>time<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structwave__boundary__update__module_1_1waveparamsnew_1aea85473b170a0615288cb0e07c40994e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>taperf,taperw<sp/><sp/></highlight><highlight class="comment">!<sp/>internal<sp/>taper<sp/>function<sp/>for<sp/>flow<sp/>and<sp/>waves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structwave__boundary__update__module_1_1waveparamsnew_1ae5ca7d10618df4b4f163eed89fad6ad1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>tslen<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal<sp/>time<sp/>axis<sp/>length<sp/>(is<sp/>always<sp/>even,<sp/>not<sp/>odd)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structwave__boundary__update__module_1_1waveparamsnew_1a6649b691e592a2adbe01c96d824e1095" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>tslenbc<sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>time<sp/>axis<sp/>length<sp/>for<sp/>boundary<sp/>condition<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structwave__boundary__update__module_1_1waveparamsnew_1a5576e128d4c40fcced0f9555b16df759" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>dtchanged<sp/><sp/></highlight><highlight class="comment">!<sp/>quick<sp/>check<sp/>to<sp/>see<sp/>if<sp/>dtin<sp/>==<sp/>dtbc<sp/>(useful<sp/>for<sp/>interpolation<sp/>purpose)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structwave__boundary__update__module_1_1waveparamsnew_1a6929ee43316a82157e7a5ec9d5868242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fgen,thetagen,phigen,kgen,wgen<sp/></highlight><highlight class="comment">!<sp/>frequency,<sp/>angle,<sp/>phase,<sp/>wave<sp/>number,<sp/>radian<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>of<sp/>wavetrain<sp/>components<sp/>for<sp/>boundary<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structwave__boundary__update__module_1_1waveparamsnew_1aa0c5c9e33488d4d6c67c818ad790b769" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>dfgen<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>frequency<sp/>grid<sp/>size<sp/>in<sp/>the<sp/>generated<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structwave__boundary__update__module_1_1waveparamsnew_1aef9fd561130b271a847890d86a30ed5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1shortspectrum" kindref="compound">shortspectrum</ref>),</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/>::<sp/>vargen<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>is<sp/>where<sp/>the<sp/>variance<sp/>for<sp/>each<sp/>wave<sp/>train<sp/>at<sp/>each<sp/>spectrum<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>is<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structwave__boundary__update__module_1_1waveparamsnew_1a8df21d39b262951800324fded377555c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1shortspectrum" kindref="compound">shortspectrum</ref>),</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/>::<sp/>vargenq<sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>is<sp/>where<sp/>the<sp/>variance<sp/>for<sp/>each<sp/>wave<sp/>train<sp/>at<sp/>each<sp/>spectrum<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>is<sp/>stored,<sp/>which<sp/>is<sp/>not<sp/>scaled<sp/>and<sp/>is<sp/>used<sp/>for<sp/>the<sp/>generation<sp/>of<sp/>bound<sp/>waves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structwave__boundary__update__module_1_1waveparamsnew_1abf25cc28ce5504d9526401236df17b64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Amplitude,<sp/>per<sp/>wave<sp/>train<sp/>component,<sp/>per<sp/>offshore<sp/>grid<sp/>point<sp/>A(ny+1,K)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structwave__boundary__update__module_1_1waveparamsnew_1a24fd0993c8836f39864d3bb690d83cf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>sfinterp<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>S<sp/>integrated<sp/>over<sp/>all<sp/>directions<sp/>at<sp/>frequency<sp/>locations<sp/>of<sp/>fgen,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>per<sp/>offshore<sp/>grid<sp/>point<sp/>Sfinterp(ny+1,K)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structwave__boundary__update__module_1_1waveparamsnew_1a8aa5fe8aaa294efe619aa1cac1fc0859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>sfinterpq<sp/><sp/></highlight><highlight class="comment">!<sp/>S<sp/>integrated<sp/>over<sp/>all<sp/>directions<sp/>at<sp/>frequency<sp/>locations<sp/>of<sp/>fgen,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>per<sp/>offshore<sp/>grid<sp/>point<sp/>Sfinterpq(ny+1,K),<sp/>uncorrected<sp/>for<sp/>generation<sp/>of<sp/>bound<sp/>waves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structwave__boundary__update__module_1_1waveparamsnew_1abcd0a8c6fea2925fae2f4f917edca2bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>hm0interp<sp/><sp/></highlight><highlight class="comment">!<sp/>Hm0<sp/>per<sp/>offshore<sp/>point,<sp/>based<sp/>on<sp/>intergration<sp/>of<sp/>Sfinterp<sp/>and<sp/>used<sp/>to<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>final<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structwave__boundary__update__module_1_1waveparamsnew_1a154bd6b98c1caf3e6297d9473bad2b4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>findex<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Index<sp/>of<sp/>wave<sp/>train<sp/>component<sp/>locations<sp/>on<sp/>frequency/Fourier<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structwave__boundary__update__module_1_1waveparamsnew_1a460197bbed064832b85aae408855096d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wdindex<sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Index<sp/>of<sp/>wave<sp/>train<sp/>component<sp/>locations<sp/>on<sp/>wave<sp/>directional<sp/>bin<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structwave__boundary__update__module_1_1waveparamsnew_1a60064ebdb6d030e18651d99773a56847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double<sp/>complex</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/>::<sp/>compfn<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Fourier<sp/>components<sp/>of<sp/>the<sp/>wave<sp/>trains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structwave__boundary__update__module_1_1waveparamsnew_1a7c959ec692a63957a4e5ed17052f695c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(1024)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>efilename,qfilename,nhfilename</highlight></codeline>
<codeline lineno="51" refid="structwave__boundary__update__module_1_1waveparamsnew_1aa0c0183c5d2a01e0f03b03546d448161" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>zsits<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>time<sp/>series<sp/>of<sp/>total<sp/>surface<sp/>elevation<sp/>for<sp/>nonhspectrum==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structwave__boundary__update__module_1_1waveparamsnew_1adc7e5480ea964cd8734b3e76bc6e9eeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>uits<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>time<sp/>series<sp/>of<sp/>depth-averaged<sp/>horizontal<sp/>velocity<sp/>nonhspectrum==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structwave__boundary__update__module_1_1waveparamsnew_1a0c5ab25143b0cf589b00f4dc3a89669b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">pointer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wits<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>time<sp/>series<sp/>of<sp/>depth-averaged<sp/>vertical<sp/>velocity<sp/>for<sp/>nonhspectrum==1<sp/><sp/>??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>endtype<sp/></highlight><highlight class="normal"><ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>These<sp/>parameters<sp/>control<sp/>a<sp/>lot<sp/>how<sp/>the<sp/>spectra<sp/>are<sp/>handled.<sp/>They<sp/>could<sp/>be<sp/>put<sp/>in<sp/>params.txt,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>but<sp/>most<sp/>users<sp/>will<sp/>want<sp/>to<sp/>keep<sp/>these<sp/>at<sp/>their<sp/>default<sp/>values<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref><sp/>=<sp/>801<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>size<sp/>of<sp/>standard<sp/>2D<sp/>spectrum<sp/>in<sp/>frequency<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref><sp/>=<sp/>401<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>size<sp/>of<sp/>standard<sp/>2D<sp/>spectrum<sp/>in<sp/>angular<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespacewave__boundary__update__module_1a198ece17c81b168c9159a9ac7d104be9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a198ece17c81b168c9159a9ac7d104be9" kindref="member">kmin</ref><sp/><sp/>=<sp/>200<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>minimum<sp/>number<sp/>of<sp/>wave<sp/>train<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespacewave__boundary__update__module_1a63ca71e8f24c6a188d2eacdb73654798" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a63ca71e8f24c6a188d2eacdb73654798" kindref="member">wdmax</ref><sp/>=<sp/>5.d0<sp/><sp/></highlight><highlight class="comment">!<sp/>maximum<sp/>depth*reliable<sp/>angular<sp/>wave<sp/>frequency<sp/>that<sp/>can<sp/>be<sp/>resolved<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>nonhydrostatic<sp/>wave<sp/>model.<sp/>All<sp/>frequencies<sp/>above<sp/>this<sp/>are<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>from<sp/>nonhspectrum<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Shortcut<sp/>pointers<sp/>to<sp/>commonly<sp/>used<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref>,<ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="66" refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Physical<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref><sp/>=<sp/>4.d0*atan(1.d0)</highlight></codeline>
<codeline lineno="69" refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref><sp/><sp/>=<sp/>9.81d0</highlight></codeline>
<codeline lineno="70" refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">complex(kind(0.0d0))</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/><ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref><sp/>=<sp/>(0.0d0,1.0d0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword"><sp/><sp/><sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a16083edad0af8a520cc3eeabc046d00a" kindref="member">generate_wave_boundary_surfbeat</ref>(durationlength)</highlight></codeline>
<codeline lineno="74" refid="namespacewave__boundary__update__module_1a16083edad0af8a520cc3eeabc046d00a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Input<sp/>and<sp/>output<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>durationlength</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>specin,specinterp</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>combspec</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Most<sp/>will<sp/>be<sp/>deallocated,<sp/>but<sp/>some<sp/>variables<sp/>useful<sp/>to<sp/>keep?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>iloc</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>iostat</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>spectrumendtimeold,fmax</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Shortcuts,<sp/>could<sp/>be<sp/>pointers?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref><sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%nspectra</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref><sp/><sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%bccount</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Offshore<sp/>water<sp/>depth,<sp/>which<sp/>is<sp/>used<sp/>in<sp/>various<sp/>computations<sp/>in<sp/>this<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref><sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%hboundary</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref><sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%np</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Start<sp/>Wave<sp/>boundary<sp/>condition<sp/>time<sp/>series<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%repeatwbc)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Return<sp/>wave<sp/>boundary<sp/>conditions<sp/>that<sp/>have<sp/>already<sp/>been<sp/>computed<sp/>in<sp/>a<sp/>previous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>call<sp/>to<sp/>this<sp/>subroutine.<sp/>Modify<sp/>time<sp/>axis<sp/>to<sp/>reflect<sp/>shift<sp/>in<sp/>time<sp/>since<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>previous<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc<sp/>=<sp/>min(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc,<sp/>&amp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>huge(0.d0)-<ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startComputeNewSeries)<sp/>+<sp/>&amp;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startComputeNewSeries</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--------------------------------&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Calculating<sp/>spectral<sp/>wave<sp/>boundary<sp/>conditions<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--------------------------------&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>allocate<sp/>temporary<sp/>input<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<sp/></highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(specin))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin(<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref>))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specinterp(<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref>))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>through<sp/>input<sp/>spectra<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmax<sp/>=<sp/>1.d0<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>assume<sp/>1Hz<sp/>as<sp/>maximum<sp/>frequency.<sp/>Increase<sp/>in<sp/>loop<sp/>below<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iloc<sp/>=<sp/>1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,i0)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Reading<sp/>spectrum<sp/>at<sp/>location<sp/>&apos;</highlight><highlight class="normal">,iloc)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a1f7e35abd0d9c4c0b187696002c1a4c6" kindref="member">read_spectrum_input</ref>(wp,<ref refid="namespacespectral__wave__bc__module_1a621db5e24669eb828b47320c3a4a6d72" kindref="member">bcfiles</ref>(iloc),specin(iloc))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmax<sp/>=<sp/>max(fmax,maxval(specin(iloc)%f))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iloc<sp/>=<sp/>1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,i0)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Interpreting<sp/>spectrum<sp/>at<sp/>location<sp/>&apos;</highlight><highlight class="normal">,iloc)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Interpolate<sp/>input<sp/>2D<sp/>spectrum<sp/>to<sp/>standard<sp/>2D<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ae2d9744d91d10c8ab02ec7e4255c8425" kindref="member">interpolate_spectrum</ref>(specin(iloc),specinterp(iloc),par,fmax)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Values<sp/>calculated<sp/>from<sp/>interpolated<sp/>spectrum:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.2,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Hm0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&apos;</highlight><highlight class="normal">,specinterp(iloc)%hm0,</highlight><highlight class="stringliteral">&apos;<sp/>m&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.2,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Trep<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&apos;</highlight><highlight class="normal">,specinterp(iloc)%trep,</highlight><highlight class="stringliteral">&apos;<sp/>s&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.2,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Mean<sp/>dir<sp/><sp/>=<sp/>&apos;</highlight><highlight class="normal">,specinterp(iloc)%dirm,</highlight><highlight class="stringliteral">&apos;<sp/>degN&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>whether<sp/>all<sp/>the<sp/>spectra<sp/>are<sp/>to<sp/>be<sp/>reused,<sp/>which<sp/>implies<sp/>that<sp/>the<sp/>global<sp/>repeatwbc<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>set<sp/>to<sp/>true<sp/>(no<sp/>further<sp/>computations<sp/>required<sp/>in<sp/>future<sp/>calls)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abd084d6776d32cef09b3bee71c5cb0a7" kindref="member">set_repeatwbc</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>calculate<sp/>the<sp/>mean<sp/>combined<sp/>spectra<sp/>(used<sp/>for<sp/>combined<sp/>Trep,<sp/>determination<sp/>of<sp/>wave<sp/>components,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>now<sp/>still<sp/>uses<sp/>simple<sp/>averaging,<sp/>but<sp/>could<sp/>be<sp/>improved<sp/>to<sp/>use<sp/>weighting<sp/>for<sp/>distance<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1aaeef560ab591f6dbba9bd20ae846d629" kindref="member">generate_combined_spectrum</ref>(specinterp,combspec)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Store<sp/>these<sp/>data<sp/>in<sp/>wave<sp/>administration<sp/>for<sp/>exchange<sp/>with<sp/>outer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>XBeach<sp/>or<sp/>D3D/FM<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Hbc<sp/>=<sp/>combspec%hm0</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Tbc<sp/>=<sp/>combspec%trep</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Dbc<sp/>=<sp/>combspec%dirm</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.2,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Overall<sp/>Trep<sp/>from<sp/>all<sp/>spectra<sp/>calculated:<sp/>&apos;</highlight><highlight class="normal">,&amp;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Tbc,</highlight><highlight class="stringliteral">&apos;<sp/>s&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Wave<sp/>trains<sp/>that<sp/>are<sp/>used<sp/>by<sp/>XBeach.<sp/>The<sp/>number<sp/>of<sp/>wave<sp/>trains,<sp/>their<sp/>frequencies<sp/>and<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>are<sp/>based<sp/>on<sp/>the<sp/>combined<sp/>spectra<sp/>of<sp/>all<sp/>the<sp/>locations<sp/>to<sp/>ensure<sp/>all<sp/>wave<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>represented<sp/>in<sp/>the<sp/>XBeach<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ae4957a7ad9dc3602eb0f2995bc525e26" kindref="member">generate_wavetrain_components</ref>(combspec,wp)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>can<sp/>now<sp/>apply<sp/>a<sp/>correction<sp/>to<sp/>the<sp/>wave<sp/>train<sp/>components<sp/>if<sp/>necessary.<sp/>This<sp/>section<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>improved<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref>==1<sp/>.and.<sp/>specin(1)%scoeff&gt;1000.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>can<sp/>be<sp/>used<sp/>both<sp/>for<sp/>Jonswap<sp/>and<sp/>vardens<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%thetagen<sp/>=<sp/>mod(specin(1)%dir0,2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Set<sp/>up<sp/>time<sp/>axis,<sp/>including<sp/>the<sp/>time<sp/>axis<sp/>for<sp/>output<sp/>to<sp/>boundary<sp/>condition<sp/>files<sp/>and<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal<sp/>time<sp/>axis,<sp/>which<sp/>may<sp/>differ<sp/>in<sp/>length<sp/>to<sp/>the<sp/>output<sp/>time<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ab59aa2224e1035323d13e3c933e4f665" kindref="member">generate_wave_time_axis</ref>(wp)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>the<sp/>variance<sp/>for<sp/>each<sp/>wave<sp/>train<sp/>component,<sp/>at<sp/>every<sp/>spectrum<sp/>location<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abfca894c2cf81454e1b7e6407b8dfde2" kindref="member">generate_wave_train_variance</ref>(wp,specinterp)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>the<sp/>amplitude<sp/>of<sp/>each<sp/>wave<sp/>train<sp/>component,<sp/>at<sp/>every<sp/>point<sp/>along<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>offshore<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a858c0cdca5cc0cb6d3b1a6c1a673860b" kindref="member">generate_wave_train_properties_per_offshore_point</ref>(wp,s)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Generate<sp/>Fourier<sp/>components<sp/>for<sp/>all<sp/>wave<sp/>train<sp/>component,<sp/>at<sp/>every<sp/>point<sp/>along</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>offshore<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a236e07915aa89d0ab73758ccd9421c86" kindref="member">generate_wave_train_fourier</ref>(wp)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Time<sp/>series<sp/>of<sp/>short<sp/>wave<sp/>energy<sp/>or<sp/>surface<sp/>elevation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Distribute<sp/>all<sp/>wave<sp/>train<sp/>components<sp/>among<sp/>the<sp/>wave<sp/>direction<sp/>bins.<sp/>Also<sp/>rearrage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>randomly<sp/>drawn<sp/>wave<sp/>directions<sp/>to<sp/>match<sp/>the<sp/>centres<sp/>of<sp/>the<sp/>wave<sp/>bins<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>user-defined<sp/>nspr<sp/>is<sp/>set<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a779e12da663ad9c5df6ab9c505424878" kindref="member">distribute_wave_train_directions</ref>(wp,<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nspr)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>the<sp/>wave<sp/>energy<sp/>envelope<sp/>per<sp/>offshore<sp/>grid<sp/>point<sp/>and<sp/>write<sp/>to<sp/>output<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abf4ffa23c6ce2aa451960820a63f7225" kindref="member">generate_ebcf</ref>(wp)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Generate<sp/>time<sp/>series<sp/>of<sp/>surface<sp/>elevation,<sp/>horizontal<sp/>velocity<sp/>and<sp/>vertical<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abce2d0758a1fbc8c700f1018d80545b4" kindref="member">generate_swts</ref>(wp,s)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>the<sp/>bound<sp/>long<sp/>wave<sp/>from<sp/>the<sp/>wave<sp/>train<sp/>components<sp/>and<sp/>write<sp/>to<sp/>output<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a178b2db870cbd999305ed8e4b1db0fb3" kindref="member">generate_qbcf</ref>(wp)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Write<sp/>non-hydrostatic<sp/>time<sp/>series<sp/>of<sp/>combined<sp/>short<sp/>and<sp/>long<sp/>waves<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a873d77631d27553e2b70d4d4e8528b35" kindref="member">generate_nhtimeseries_file</ref>(wp)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Deallocate<sp/>a<sp/>lot<sp/>of<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(specin,specinterp)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%tin,wp%taperf,wp%taperw)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%fgen,wp%thetagen,wp%phigen,wp%kgen,wp%wgen)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%vargen)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%vargenq)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%Sfinterp)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%Sfinterpq)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%Hm0interp)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%A)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%Findex)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%CompFn)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%zsits)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%uits)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(wp%WDindex)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Send<sp/>message<sp/>to<sp/>screen<sp/>and<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--------------------------------&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Spectral<sp/>wave<sp/>boundary<sp/>conditions<sp/>complete<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--------------------------------&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>repeatwbc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Return<sp/>the<sp/>duration<sp/>length<sp/>of<sp/>the<sp/>current<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>durantionlength<sp/>=<sp/>wp%rtbc</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Update<sp/>the<sp/>number<sp/>of<sp/>boundary<sp/>conditions<sp/>generated<sp/>by<sp/>this<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref><sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>+1</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">endsubroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a16083edad0af8a520cc3eeabc046d00a" kindref="member">generate_wave_boundary_surfbeat</ref></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">!<sp/>----------------<sp/>Read<sp/>input<sp/>spectra<sp/>files<sp/>--------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a1f7e35abd0d9c4c0b187696002c1a4c6" kindref="member">read_spectrum_input</ref>(wp,fn,specin)</highlight></codeline>
<codeline lineno="248" refid="namespacewave__boundary__update__module_1a1f7e35abd0d9c4c0b187696002c1a4c6" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacefilefunctions" kindref="compound">filefunctions</ref></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structspectral__wave__bc__module_1_1filenames" kindref="compound">filenames</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/>::<sp/>fn</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/>::<sp/>specin</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fid</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(8)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>testline</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(1024)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>readfile</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>filelist</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ier</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>check<sp/>the<sp/>first<sp/>line<sp/>of<sp/>the<sp/>boundary<sp/>condition<sp/>file<sp/>for<sp/>FILELIST<sp/>keyword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>fid<sp/>=<sp/><ref refid="namespacefilefunctions_1ac1d555ba2ee4df77c53632cb4a9216ca" kindref="member">create_new_fid</ref>()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">open</highlight><highlight class="normal">(fid,file=fn%fname,status=</highlight><highlight class="stringliteral">&apos;old&apos;</highlight><highlight class="normal">,form=</highlight><highlight class="stringliteral">&apos;formatted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)testline</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(fn%fname)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trim(testline)==</highlight><highlight class="stringliteral">&apos;FILELIST&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filelist<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>move<sp/>listline<sp/>off<sp/>its<sp/>default<sp/>position<sp/>of<sp/>zero<sp/>to<sp/>the<sp/>first<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fn%listline==0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn%listline<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fn%repeat<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filelist<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(par%instat<sp/>/=<sp/><ref refid="namespaceparamsconst_1a981e337f1c029bbff1783bfaf93fd883" kindref="member">instat_jons_table</ref>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn%repeat<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn%repeat<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">close</highlight><highlight class="normal">(fid)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>If<sp/>file<sp/>has<sp/>list<sp/>of<sp/>spectra,<sp/>read<sp/>through<sp/>the<sp/>lines<sp/>to<sp/>find<sp/>the<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>spectrum<sp/>file<sp/>name<sp/>and<sp/>rtbc<sp/>and<sp/>dtbc.<sp/>Else<sp/>the<sp/>filename<sp/>and<sp/>rtbc,<sp/>dtbc<sp/>are<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>params.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filelist)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fid<sp/>=<sp/><ref refid="namespacefilefunctions_1ac1d555ba2ee4df77c53632cb4a9216ca" kindref="member">create_new_fid</ref>()</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">open</highlight><highlight class="normal">(fid,file=fn%fname,status=</highlight><highlight class="stringliteral">&apos;old&apos;</highlight><highlight class="normal">,form=</highlight><highlight class="stringliteral">&apos;formatted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,fn%listline</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*)testline<sp/><sp/></highlight><highlight class="comment">!<sp/>old<sp/>stuff,<sp/>not<sp/>needed<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)wp%rtbc,wp%dtbc,readfile<sp/><sp/></highlight><highlight class="comment">!<sp/>new<sp/>boundary<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(fn%fname)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>we<sp/>have<sp/>to<sp/>adjust<sp/>this<sp/>to<sp/>morphological<sp/>time,<sp/>as<sp/>done<sp/>in<sp/>params.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(par%morfacopt==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%rtbc<sp/>=<sp/>wp%rtbc/max(par%morfac,1.d0)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fn%listline<sp/>=<sp/>fn%listline<sp/>+<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>move<sp/>one<sp/>on<sp/>from<sp/>the<sp/>last<sp/>time<sp/>we<sp/>opened<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">close</highlight><highlight class="normal">(fid)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%rtbc<sp/>=<sp/>par%rt<sp/><sp/></highlight><highlight class="comment">!<sp/>already<sp/>set<sp/>to<sp/>morphological<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%dtbc<sp/>=<sp/>par%dtbc</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readfile<sp/>=<sp/>fn%fname</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>based<sp/>on<sp/>the<sp/>value<sp/>of<sp/>instat,<sp/>we<sp/>need<sp/>to<sp/>read<sp/>either<sp/>Jonswap,<sp/>Swan<sp/>or<sp/>vardens<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>note:<sp/>jons_table<sp/>is<sp/>also<sp/>handeled<sp/>by<sp/>read_jonswap_file<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!select<sp/>case<sp/>(par%instat(1:4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">select<sp/>case</highlight><highlight class="normal">(par%instat)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!case<sp/>(&apos;jons&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(<ref refid="namespaceparamsconst_1aa454711761ea36662270d544d8863390" kindref="member">instat_jons</ref>,<sp/><ref refid="namespaceparamsconst_1a981e337f1c029bbff1783bfaf93fd883" kindref="member">instat_jons_table</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>wp<sp/>type<sp/>sent<sp/>in<sp/>to<sp/>receive<sp/>rtbc<sp/>and<sp/>dtbc<sp/>from<sp/>jons_table<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>fn%listline<sp/>sent<sp/>in<sp/>to<sp/>find<sp/>correct<sp/>row<sp/>in<sp/>jons_table<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>pfff..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a682ee87f23d9e0e4e5619f60c436a3f2" kindref="member">read_jonswap_file</ref>(par,wp,readfile,fn%listline,specin)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!case<sp/>(&apos;swan&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(<ref refid="namespaceparamsconst_1ad67de2193bbb61648cf57414d54a0851" kindref="member">instat_swan</ref>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ab5b5100ab2b89fd4f982d7552b22857a" kindref="member">read_swan_file</ref>(par,readfile,specin)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!case<sp/>(&apos;vard&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(<ref refid="namespaceparamsconst_1a4cc2c3f8bf6f7028995477a73d1df08d" kindref="member">instat_vardens</ref>)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a3de9d3cb05e0a95231de57375718a601" kindref="member">read_vardens_file</ref>(par,readfile,specin)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endselect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">endsubroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a1f7e35abd0d9c4c0b187696002c1a4c6" kindref="member">read_spectrum_input</ref></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-------------------<sp/>Read<sp/>JONSWAP<sp/>files<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a682ee87f23d9e0e4e5619f60c436a3f2" kindref="member">read_jonswap_file</ref>(par,wp,readfile,listline,specin)</highlight></codeline>
<codeline lineno="336" refid="namespacewave__boundary__update__module_1a682ee87f23d9e0e4e5619f60c436a3f2" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacereadkey__module" kindref="compound">readkey_module</ref></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceparams" kindref="compound">params</ref></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacefilefunctions" kindref="compound">filefunctions</ref></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Input<sp/>/<sp/>output<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structparams_1_1parameters" kindref="compound">parameters</ref>),<sp/></highlight><highlight class="keywordtype">INTENT(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>par</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=*)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>readfile</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(INOUT)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>listline</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>specin</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ii,ier,ip,ind</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>nmodal</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fid</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>forcepartition</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(2)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>indvec</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>x,<sp/>y,<sp/>Dd,<sp/>tempdir</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Hm0,fp,gam,mainang,scoeff</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>dfj,<sp/>fnyq</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Tp</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=80)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>dummystring</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/>::<sp/>multinomalspec,scaledspec</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>cont</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>scalefac1,scalefac2,tempmax,avgscale</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>oldvariance,newvariance</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>newconv,oldconv</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>First<sp/>part:<sp/>read<sp/>JONSWAP<sp/>parameter<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Check<sp/>whether<sp/>spectrum<sp/>characteristics<sp/>or<sp/>table<sp/>should<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(par%instat<sp/>/=<sp/><ref refid="namespaceparamsconst_1a981e337f1c029bbff1783bfaf93fd883" kindref="member">instat_jons_table</ref>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Use<sp/>spectrum<sp/>characteristics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;waveparams:<sp/>Reading<sp/>from<sp/>&apos;</highlight><highlight class="normal">,trim(readfile),</highlight><highlight class="stringliteral">&apos;<sp/>...&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>First<sp/>read<sp/>if<sp/>the<sp/>spectrum<sp/>is<sp/>multinodal,<sp/>and<sp/>how<sp/>many<sp/>peaks<sp/>there<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nmodal<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacereadkey__module_1a8ac4eaa5728da46203d191b5ac95ce1d" kindref="member">readkey_int</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;nmodal&apos;</highlight><highlight class="normal">,<sp/><sp/>1,<sp/><sp/>1,<sp/>4,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nmodal&lt;1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lswe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Error:<sp/>number<sp/>of<sp/>spectral<sp/>partions<sp/>may<sp/>not<sp/>be<sp/>less<sp/>than<sp/>1<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>space<sp/>for<sp/>all<sp/>spectral<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(hm0(nmodal))</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(fp(nmodal))</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(gam(nmodal))</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(mainang(nmodal))</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(scoeff(nmodal))</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>the<sp/>spectral<sp/>parameters<sp/>for<sp/>all<sp/>spectrum<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Wave<sp/>height<sp/>(required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hm0<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;Hm0&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>0.0d0,<sp/>0.0d0,<sp/>5.0d0,<sp/>bcast=.false.,required=.true.<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Wave<sp/>period<sp/>(required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>allow<sp/>both<sp/>Tp<sp/>and<sp/>fp<sp/>specification<sp/>to<sp/>bring<sp/>in<sp/>line<sp/>with<sp/>params.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;Tp&apos;</highlight><highlight class="normal">,bcast=.false.)<sp/>.and.<sp/>.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;fp&apos;</highlight><highlight class="normal">,bcast=.false.))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/><sp/><sp/><sp/><sp/>=<sp/>1.d0/<ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;Tp&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>12.5d0,<sp/>2.5d0,<sp/>20.0d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(<ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;fp&apos;</highlight><highlight class="normal">,bcast=.false.)<sp/>.and.<sp/>.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;Tp&apos;</highlight><highlight class="normal">,bcast=.false.))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;fp&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>0.08d0,0.0625d0,<sp/><sp/><sp/>0.4d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;fp&apos;</highlight><highlight class="normal">,bcast=.false.)<sp/>.and.<sp/>.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;Tp&apos;</highlight><highlight class="normal">,bcast=.false.))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lswe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Error:<sp/>missing<sp/>required<sp/>value<sp/>for<sp/>parameter<sp/>&apos;</highlight><highlight class="stringliteral">&apos;Tp&apos;</highlight><highlight class="stringliteral">&apos;<sp/>or<sp/>&apos;</highlight><highlight class="stringliteral">&apos;fp&apos;</highlight><highlight class="stringliteral">&apos;<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/><sp/><sp/><sp/><sp/>=<sp/>1.d0/<ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;Tp&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>12.5d0,<sp/>2.5d0,<sp/>20.0d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Warning:<sp/>selecting<sp/>to<sp/>read<sp/>peak<sp/>period<sp/>(Tp)<sp/>instead<sp/>of<sp/>frequency<sp/>(fp)<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Wave<sp/>spreading<sp/>in<sp/>frequency<sp/>domain<sp/>(peakedness)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gam<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;gammajsp&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>3.3d0,<sp/>1.0d0,<sp/>5.0d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Wave<sp/>spreading<sp/>in<sp/>directional<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scoeff<sp/>=<sp/><ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;s&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>10.0d0,<sp/>1.0d0,<sp/>1000.0d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Main<sp/>wave<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>allow<sp/>both<sp/>mainang<sp/>and<sp/>dir0<sp/>specification<sp/>to<sp/>bring<sp/>in<sp/>line<sp/>with<sp/>params.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;mainang&apos;</highlight><highlight class="normal">,bcast=.false.)<sp/>.and.<sp/>&amp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;dir0&apos;</highlight><highlight class="normal">,bcast=.false.))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainang<sp/>=<sp/><ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;mainang&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>&amp;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>270.0d0,<sp/>0.0d0,<sp/>360.0d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(<ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;dir0&apos;</highlight><highlight class="normal">,bcast=.false.)<sp/>.and.<sp/>&amp;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;mainang&apos;</highlight><highlight class="normal">,bcast=.false.))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainang<sp/>=<sp/><ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;dir0&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>&amp;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>270.0d0,<sp/>0.0d0,<sp/>360.0d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;dir0&apos;</highlight><highlight class="normal">,bcast=.false.)<sp/>.and.<sp/>&amp;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.not.<sp/><ref refid="namespacereadkey__module_1a892b1d8a88bfa24c0fdf5b4a231120e2" kindref="member">issetparameter</ref>(readfile,</highlight><highlight class="stringliteral">&apos;mainang&apos;</highlight><highlight class="normal">,bcast=.false.))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainang<sp/>=<sp/>270.d0</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainang<sp/>=<sp/><ref refid="namespacereadkey__module_1aa3365f087437c983f8ad1a0b0542948e" kindref="member">readkey_dblvec</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;mainang&apos;</highlight><highlight class="normal">,nmodal,nmodal,<sp/>270.0d0,<sp/>0.0d0,<sp/>360.0d0,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Warning:<sp/>selecting<sp/>to<sp/>read<sp/>&apos;</highlight><highlight class="stringliteral">&apos;mainang&apos;</highlight><highlight class="stringliteral">&apos;<sp/>instead<sp/>of<sp/>&apos;</highlight><highlight class="stringliteral">&apos;dir0&apos;</highlight><highlight class="stringliteral">&apos;<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Nyquist<sp/>parameters<sp/>used<sp/>only<sp/>in<sp/>this<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>are<sp/>not<sp/>read<sp/>individually<sp/>for<sp/>each<sp/>spectrum<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(par%oldnyq==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fnyq<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacereadkey__module_1a19cf207a8498165d4da7c56fe7819b31" kindref="member">readkey_dbl</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;fnyq&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3d0,<sp/><sp/><sp/><sp/>0.2d0,<sp/><sp/><sp/><sp/><sp/><sp/>1.0d0,<sp/><sp/><sp/><sp/><sp/><sp/>bcast=.false.<sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fnyq<sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacereadkey__module_1a19cf207a8498165d4da7c56fe7819b31" kindref="member">readkey_dbl</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;fnyq&apos;</highlight><highlight class="normal">,max(0.3d0,3.d0*maxval(fp)),<sp/>0.2d0,<sp/>1.0d0,<sp/>bcast=.false.<sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dfj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacereadkey__module_1a19cf207a8498165d4da7c56fe7819b31" kindref="member">readkey_dbl</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;dfj&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>fnyq/200,<sp/><sp/><sp/>fnyq/1000,<sp/><sp/>fnyq/20,<sp/><sp/><sp/><sp/>bcast=.false.<sp/>)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Finally<sp/>check<sp/>if<sp/>XBeach<sp/>should<sp/>accept<sp/>even<sp/>the<sp/>most<sp/>stupid<sp/>partioning<sp/>(sets<sp/>error<sp/>level<sp/>to<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>level<sp/>when<sp/>computing<sp/>partition<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nmodal&gt;1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forcepartition<sp/>=<sp/><ref refid="namespacereadkey__module_1a8ac4eaa5728da46203d191b5ac95ce1d" kindref="member">readkey_int</ref>(readfile,<sp/></highlight><highlight class="stringliteral">&apos;forcepartition&apos;</highlight><highlight class="normal">,<sp/><sp/>0,<sp/><sp/>0,<sp/>1,<sp/>bcast=.false.)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>check<sp/>for<sp/>other<sp/>strange<sp/>values<sp/>in<sp/>this<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacereadkey__module_1a6626be4d1e2a2f7520d92ae2b5128092" kindref="member">readkey</ref>(readfile,</highlight><highlight class="stringliteral">&apos;checkparams&apos;</highlight><highlight class="normal">,dummystring)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nmodal<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(hm0(nmodal))</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(fp(nmodal))</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(gam(nmodal))</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(mainang(nmodal))</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(scoeff(nmodal))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Use<sp/>spectrum<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fid<sp/>=<sp/><ref refid="namespacefilefunctions_1ac1d555ba2ee4df77c53632cb4a9216ca" kindref="member">create_new_fid</ref>()</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;waveparams:<sp/>Reading<sp/>from<sp/>table<sp/>&apos;</highlight><highlight class="normal">,trim(readfile),</highlight><highlight class="stringliteral">&apos;<sp/>...&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">open</highlight><highlight class="normal">(fid,file=readfile,status=</highlight><highlight class="stringliteral">&apos;old&apos;</highlight><highlight class="normal">,form=</highlight><highlight class="stringliteral">&apos;formatted&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>read<sp/>junk<sp/>up<sp/>to<sp/>the<sp/>correct<sp/>line<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,listline</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)dummystring</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)hm0(1),tp,mainang(1),gam(1),scoeff(1),wp%rtbc,wp%dtbc</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lswe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Error<sp/>reading<sp/>file<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">close</highlight><highlight class="normal">(fid)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>move<sp/>the<sp/>line<sp/>pointer<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listline<sp/>=<sp/>listline+1</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>convert<sp/>to<sp/>morphological<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(par%morfacopt==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%rtbc<sp/>=<sp/>wp%rtbc/max(par%morfac,1.d0)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fp(1)=1.d0/tp</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fnyq=3.d0*fp(1)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dfj=fp(1)/50</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">close</highlight><highlight class="normal">(fid)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Second<sp/>part:<sp/>generate<sp/>2D<sp/>spectrum<sp/>from<sp/>input<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Define<sp/>number<sp/>of<sp/>frequency<sp/>bins<sp/>by<sp/>defining<sp/>an<sp/>array<sp/>of<sp/>the<sp/>necessary<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>using<sp/>the<sp/>Nyquist<sp/>frequency<sp/>and<sp/>frequency<sp/>step<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>specin%nf<sp/>=<sp/>ceiling((fnyq-dfj)/dfj)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>specin%df<sp/>=<sp/>dfj</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Define<sp/>array<sp/>with<sp/>actual<sp/>eqidistant<sp/>frequency<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%f(specin%nf))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%f(i)=i*dfj</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>we<sp/>need<sp/>a<sp/>normalised<sp/>frequency<sp/>and<sp/>variance<sp/>vector<sp/>for<sp/>JONSWAP<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(x(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(specin%f)))</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(y(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(specin%f)))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Define<sp/>200<sp/>directions<sp/>relative<sp/>to<sp/>main<sp/>angle<sp/>running<sp/>from<sp/>0<sp/>to<sp/>2*pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>we<sp/>also<sp/>need<sp/>a<sp/>temporary<sp/>vector<sp/>for<sp/>direction<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>specin%nang<sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempdir(specin%nang))</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(dd(specin%nang))</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%ang(specin%nang))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>specin%dang<sp/>=<sp/>2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>/(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>-1)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang(i)=(i-1)*specin%dang</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Generate<sp/>density<sp/>spectrum<sp/>for<sp/>each<sp/>spectrum<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(multinomalspec(nmodal))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>relative<sp/>frequenct<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x=specin%f/fp(ip)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>unscaled<sp/>and<sp/>non-directional<sp/>JONSWAP<sp/>spectrum<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>peak-enhancement<sp/>factor<sp/>and<sp/>pre-determined<sp/>frequency<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a5bc7d87300fd79711879398f94cd8d46" kindref="member">jonswapgk</ref>(x,gam(ip),y)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>scaled<sp/>and<sp/>non-directional<sp/>JONSWAP<sp/>spectrum<sp/>using<sp/>the<sp/>JONSWAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>characteristics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y=(hm0(ip)/(4.d0*sqrt(sum(y)*dfj)))**2*y</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>main<sp/>angle<sp/>from<sp/>degrees<sp/>to<sp/>radians<sp/>and<sp/>from<sp/>nautical<sp/>convention<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mainang(ip)=(1.5d0*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)-mainang(ip)*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>/180</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Make<sp/>sure<sp/>the<sp/>main<sp/>angle<sp/>is<sp/>defined<sp/>between<sp/>0<sp/>and<sp/>2*pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mainang(ip)&gt;2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref><sp/>.or.<sp/>mainang(ip)&lt;0.d0)<sp/></highlight><highlight class="comment">!Robert<sp/>en<sp/>Ap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mainang(ip)&gt;2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainang(ip)=mainang(ip)-2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(mainang(ip)&lt;0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainang(ip)=mainang(ip)+2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>200<sp/>directions<sp/>relative<sp/>to<sp/>main<sp/>angle<sp/>to<sp/>directions<sp/>relative<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Bas:<sp/>apparently<sp/>division<sp/>by<sp/>2<sp/>for<sp/>cosine<sp/>law<sp/>happens<sp/>already<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempdir<sp/>=<sp/>(specin%ang-mainang(ip))/2</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Make<sp/>sure<sp/>all<sp/>directions<sp/>around<sp/>the<sp/>main<sp/>angle<sp/>are<sp/>defined<sp/>between<sp/>0<sp/>and<sp/>2*pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(any(tempdir&gt;2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)<sp/>.or.<sp/>any(tempdir&lt;0.d0))</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(tempdir&gt;2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempdir=tempdir-2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elsewhere</highlight><highlight class="normal"><sp/>(tempdir&lt;0.d0)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempdir=tempdir+2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endwhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>directional<sp/>spreading<sp/>based<sp/>on<sp/>cosine<sp/>law</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>=<sp/>dcos(tempdir)**(2*nint(scoeff(ip)))<sp/><sp/></highlight><highlight class="comment">!<sp/>Robert:<sp/>apparently<sp/>nint<sp/>is<sp/>needed<sp/>here,<sp/>else<sp/>MATH<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Scale<sp/>directional<sp/>spreading<sp/>to<sp/>have<sp/>a<sp/>surface<sp/>of<sp/>unity<sp/>by<sp/>dividing<sp/>by<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>own<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dd<sp/>=<sp/>dd<sp/>/<sp/>(sum(dd)*specin%dang)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Define<sp/>two-dimensional<sp/>variance<sp/>density<sp/>spectrum<sp/>array<sp/>and<sp/>distribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>variance<sp/>density<sp/>for<sp/>each<sp/>frequency<sp/>over<sp/>directional<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(multinomalspec(ip)%S(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,specin%nf</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multinomalspec(ip)%S(ii,i)=y(ii)*dd(i)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/>1,nmodal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)</highlight><highlight class="stringliteral">&apos;Hm0<sp/>=<sp/>&apos;</highlight><highlight class="normal">,4*sqrt(sum(multinomalspec(ip)%S)*specin%dang*specin%df)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Combine<sp/>spectrum<sp/>partitions<sp/>so<sp/>that<sp/>the<sp/>total<sp/>spectrum<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nmodal==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Set<sp/>all<sp/>the<sp/>useful<sp/>parameters<sp/>and<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%Hm0<sp/>=<sp/>hm0(1)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%fp<sp/>=<sp/>fp(1)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%dir0<sp/>=<sp/>mainang(1)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%scoeff<sp/>=<sp/>scoeff(1)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%S(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S<sp/>=<sp/>multinomalspec(1)%S</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%Hm0<sp/>=<sp/>sqrt(sum(hm0**2))<sp/><sp/></highlight><highlight class="comment">!<sp/>total<sp/>wave<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>maxval(maxloc(hm0))<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>spectrum<sp/>that<sp/>is<sp/>largest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%fp<sp/>=<sp/>fp(ind)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>not<sp/>really<sp/>used<sp/>in<sp/>further<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%dir0<sp/>=<sp/>mainang(ind)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>again<sp/>not<sp/>really<sp/>used<sp/>in<sp/>further<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>if<sp/>all<sp/>scoeff&gt;1000<sp/>then<sp/>all<sp/>waves<sp/>should<sp/>be<sp/>in<sp/>the<sp/>same<sp/>direction<sp/>exactly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all(scoeff&gt;=1024.d0)<sp/>.and.<sp/>all(mainang==mainang(ind)))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%scoeff<sp/>=<sp/>1024.d0</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%scoeff<sp/>=<sp/>min(scoeff(ind),999.d0)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Now<sp/>we<sp/>have<sp/>to<sp/>loop<sp/>over<sp/>all<sp/>partitioned<sp/>spectra.<sp/>Where<sp/>two<sp/>or<sp/>more<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>overlap,<sp/>only<sp/>the<sp/>largest<sp/>is<sp/>counted,<sp/>and<sp/>all<sp/>others<sp/>are<sp/>set<sp/>to<sp/>zero.<sp/>Afterwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>all<sp/>spectra<sp/>are<sp/>scaled<sp/>so<sp/>that<sp/>the<sp/>total<sp/>energy<sp/>is<sp/>maintained.<sp/>Since<sp/>the<sp/>scaling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>affects<sp/>where<sp/>spectra<sp/>overlap,<sp/>this<sp/>loop<sp/>is<sp/>repeated<sp/>until<sp/>only<sp/>minor<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>in<sp/>the<sp/>scaling<sp/>occur.<sp/>Warnings<sp/>or<sp/>errors<sp/>are<sp/>given<sp/>if<sp/>the<sp/>spectrum<sp/>is<sp/>scaled<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>much,<sp/>i.e.<sp/>spectra<sp/>overlap<sp/>too<sp/>much.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(scaledspec(nmodal))<sp/></highlight><highlight class="comment">!<sp/>used<sp/>to<sp/>store<sp/>scaled<sp/>density<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(scaledspec(ip)%S(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledspec(ip)%S<sp/>=<sp/>multinomalspec(ip)%S</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(scalefac1(nmodal))<sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>is<sp/>the<sp/>scaling<sp/>factor<sp/>required<sp/>to<sp/>maintain<sp/>Hm0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>including<sp/>that<sp/>parts<sp/>of<sp/>the<sp/>spectrum<sp/>are<sp/>set<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scalefac1<sp/>=<sp/>1.d0</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(scalefac2(nmodal))<sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>is<sp/>the<sp/>scaling<sp/>factor<sp/>required<sp/>to<sp/>maintain<sp/>Hm0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>in<sp/>the<sp/>previous<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scalefac2<sp/>=<sp/>1.d0</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(avgscale(nmodal))</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avgscale<sp/>=<sp/>1.d0</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>these<sp/>are<sp/>convergence<sp/>criteria</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newconv<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldconv<sp/>=<sp/>huge(0.d0)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cont<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempmax(nmodal))<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>used<sp/>to<sp/>store<sp/>maximum<sp/>value<sp/>in<sp/>f,theta<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(oldvariance(nmodal))<sp/></highlight><highlight class="comment">!<sp/>used<sp/>to<sp/>store<sp/>the<sp/>sum<sp/>of<sp/>variance<sp/>in<sp/>the<sp/>original<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldvariance(ip)<sp/>=<sp/>sum(multinomalspec(ip)%S)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(newvariance(nmodal))<sp/></highlight><highlight class="comment">!<sp/>used<sp/>to<sp/>store<sp/>the<sp/>sum<sp/>of<sp/>variance<sp/>in<sp/>the<sp/>new<sp/>partitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Start<sp/>convergence<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cont)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avgscale<sp/>=<sp/>(avgscale+scalefac1)/2</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>First<sp/>scale<sp/>the<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>scale<sp/>the<sp/>spectrum<sp/>using<sp/>less<sp/>than<sp/>half<sp/>the<sp/>additional<sp/>scale<sp/>factor,<sp/>this<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>ensure<sp/>the<sp/>method<sp/>does<sp/>not<sp/>become<sp/>unstable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>scaledspec(ip)%S<sp/>=<sp/>multinomalspec(ip)%S*(0.51d0+scalefac1(ip)*0.49d0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>scaledspec(ip)%S<sp/>=<sp/>multinomalspec(ip)%S*(scalefac1(ip)+scalefac2(ip))/2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledspec(ip)%S<sp/>=<sp/>multinomalspec(ip)%S*avgscale(ip)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,specin%nf</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>vector<sp/>of<sp/>variance<sp/>densities<sp/>at<sp/>this<sp/>point<sp/>in<sp/>f,theta<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempmax(ip)<sp/>=<sp/>scaledspec(ip)%S(ii,i)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>All<sp/>spectra<sp/>other<sp/>than<sp/>the<sp/>one<sp/>that<sp/>is<sp/>greatest<sp/>in<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>is<sp/>set<sp/>to<sp/>zero.<sp/>In<sp/>case<sp/>multiple<sp/>spectra<sp/>are<sp/>equal<sp/>largest,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>first<sp/>spectrum<sp/>in<sp/>the<sp/>list<sp/>is<sp/>chosen<sp/>(minval(maxloc))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>minval(maxloc(tempmax))</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip/=ind)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledspec(ip)%S(ii,i)<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Now<sp/>rescale<sp/>adjusted<sp/>partition<sp/>spectra<sp/>so<sp/>that<sp/>they<sp/>match<sp/>the<sp/>incident<sp/>Hm0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalefac2<sp/>=<sp/>scalefac1<sp/><sp/></highlight><highlight class="comment">!<sp/>keep<sp/>previous<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newvariance(ip)<sp/>=<sp/>sum(scaledspec(ip)%S)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newvariance(ip)&gt;0.01d0*oldvariance(ip))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalefac1(ip)<sp/>=<sp/>oldvariance(ip)/newvariance(ip)<sp/></highlight><highlight class="comment">!<sp/>want<sp/>to<sp/>maximise<sp/>to<sp/>a<sp/>factor<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>else<sp/>can<sp/>generate<sp/>rediculous<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalefac1(ip)<sp/>=<sp/>0.d0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>completely<sp/>remove<sp/>this<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>check<sp/>convergence<sp/>criteria<sp/>(if<sp/>error<sp/>is<sp/>increasing,<sp/>we<sp/>have<sp/>passed<sp/>best<sp/>fit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newconv<sp/>=<sp/>maxval(abs(scalefac2-scalefac1)/scalefac1)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newconv&lt;0.0001d0<sp/>.or.<sp/>abs(newconv-oldconv)&lt;0.0001d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cont<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldconv<sp/>=<sp/>newconv</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Ensure<sp/>full<sp/>energy<sp/>conservation<sp/>by<sp/>scaling<sp/>now<sp/>according<sp/>to<sp/>full<sp/>scalefac,<sp/>not<sp/>just<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>half<sp/>used<sp/>in<sp/>the<sp/>iteration<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaledspec(ip)%S<sp/>=<sp/>multinomalspec(ip)%S*scalefac1(ip)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Now<sp/>check<sp/>the<sp/>total<sp/>scaling<sp/>that<sp/>has<sp/>taken<sp/>place<sp/>across<sp/>the<sp/>spectrum,<sp/>also<sp/>accounting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>for<sp/>the<sp/>fact<sp/>that<sp/>some<sp/>parts<sp/>of<sp/>the<sp/>spectra<sp/>are<sp/>set<sp/>to<sp/>zero.<sp/>This<sp/>differs<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>scalefac1<sp/>and<sp/>scalefac2<sp/>vectors<sp/>in<sp/>the<sp/>loop<sp/>that<sp/>only<sp/>adjust<sp/>the<sp/>part<sp/>of<sp/>the<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>that<sp/>is<sp/>not<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(*,*)</highlight><highlight class="stringliteral">&apos;Hm0m<sp/>=<sp/>&apos;</highlight><highlight class="normal">,4*sqrt(sum(scaledspec(ip)%S)*specin%dang*specin%df)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indvec<sp/>=<sp/>maxloc(scaledspec(ip)%S)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalefac1(ip)<sp/>=<sp/>scaledspec(ip)%S(indvec(1),indvec(2))<sp/>/<sp/>&amp;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multinomalspec(ip)%S(indvec(1),indvec(2))-1.d0</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Warning<sp/>and/or<sp/>error<sp/>criteria<sp/>here<sp/>if<sp/>spectra<sp/>overlap<sp/>each<sp/>other<sp/>too<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scalefac1(ip)&gt;0.5d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(forcepartition==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.0,a,i0,a,a,a)&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Warning:<sp/>&apos;</highlight><highlight class="normal">,scalefac1(ip)*100,</highlight><highlight class="stringliteral">&apos;%<sp/>of<sp/>energy<sp/>in<sp/>spectrum<sp/>partition<sp/>&apos;</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,ip,<sp/>&amp;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="stringliteral">&apos;<sp/>in<sp/><sp/>&apos;</highlight><highlight class="normal">,<sp/>trim(readfile),</highlight><highlight class="stringliteral">&apos;<sp/>is<sp/>overlapped<sp/>by<sp/>other<sp/>partitions&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>Check<sp/>spectral<sp/>partitioning<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lswe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.0,a,i0,a,a,a)&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Error:<sp/>&apos;</highlight><highlight class="normal">,scalefac1(ip)*100,</highlight><highlight class="stringliteral">&apos;%<sp/>of<sp/>energy<sp/>in<sp/>spectrum<sp/>partition<sp/>&apos;</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,ip,<sp/>&amp;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="stringliteral">&apos;<sp/>in<sp/><sp/>&apos;</highlight><highlight class="normal">,<sp/>trim(readfile),</highlight><highlight class="stringliteral">&apos;<sp/>is<sp/>overlapped<sp/>by<sp/>other<sp/>partitions&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lswe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;This<sp/>spectrum<sp/>overlaps<sp/>too<sp/>much<sp/>with<sp/>another<sp/>spectrum<sp/>partition.&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>Check<sp/>spectral<sp/>partitioning<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lswe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;If<sp/>the<sp/>partitioning<sp/>should<sp/>be<sp/>carried<sp/>out<sp/>regardles<sp/>of<sp/>energy<sp/>loss,<sp/>&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;set<sp/>&apos;</highlight><highlight class="stringliteral">&apos;forcepartition<sp/>=<sp/>1&apos;</highlight><highlight class="stringliteral">&apos;<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(scalefac1(ip)&gt;0.2d0<sp/>.and.<sp/>scalefac1(ip)&lt;=0.5d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.0,a,i0,a,a,a)&apos;</highlight><highlight class="normal">,<sp/>&amp;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Warning:<sp/>&apos;</highlight><highlight class="normal">,scalefac1(ip)*100,</highlight><highlight class="stringliteral">&apos;%<sp/>of<sp/>energy<sp/>in<sp/>spectrum<sp/>partition<sp/>&apos;</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,ip,<sp/>&amp;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="stringliteral">&apos;<sp/>in<sp/><sp/>&apos;</highlight><highlight class="normal">,<sp/>trim(readfile),</highlight><highlight class="stringliteral">&apos;<sp/>is<sp/>overlapped<sp/>by<sp/>other<sp/>partitions&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>Check<sp/>spectral<sp/>partitioning<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(scalefac1(ip)&lt;0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,i0,a,a,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Warning:<sp/>spectrum<sp/>partition<sp/>&apos;</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,ip,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="stringliteral">&apos;<sp/>in<sp/><sp/>&apos;</highlight><highlight class="normal">,trim(readfile),<sp/>&amp;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>has<sp/>been<sp/>removed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;This<sp/>spectrum<sp/>is<sp/>entirely<sp/>overlapped<sp/>by<sp/>another<sp/>spectrum<sp/>partition.&apos;</highlight><highlight class="normal">,&amp;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>Check<sp/>spectral<sp/>partitioning<sp/>in<sp/>&apos;</highlight><highlight class="normal">,trim(readfile))</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Now<sp/>set<sp/>total<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%S(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%S<sp/>=<sp/>specin%S+scaledspec(ip)%S</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(scaledspec)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempmax)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(scalefac1,scalefac2)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(newvariance,oldvariance)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>frequency<sp/>spectrum<sp/>to<sp/>ensure<sp/>Sf<sp/>remains<sp/>correct<sp/>between<sp/>interpoloation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>routines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%Sf(specin%nf))</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/>specin%Sf=0.d0</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,specin%nang</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ii==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(2)-specin%ang(1))</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(ii==specin%nang)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(ii)-specin%ang(ii-1))</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(ii+1)-specin%ang(ii-1))/2</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal"><sp/>(dd)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(hm0,fp,gam,mainang,scoeff)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal"><sp/>(x,y)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempdir)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>TODO<sp/>dereference<sp/>pointers<sp/>first....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ip=1,nmodal</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(multinomalspec(ip)%S)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(multinomalspec)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a682ee87f23d9e0e4e5619f60c436a3f2" kindref="member">read_jonswap_file</ref></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">!<sp/>---------<sp/>JONSWAP<sp/><sp/>unscaled<sp/>JONSWAP<sp/>spectrum<sp/>--------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-------------(used<sp/>by<sp/>read_jonswap_files)------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a5bc7d87300fd79711879398f94cd8d46" kindref="member">jonswapgk</ref>(x,gam,y)</highlight></codeline>
<codeline lineno="770" refid="namespacewave__boundary__update__module_1a5bc7d87300fd79711879398f94cd8d46" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Required<sp/>input:<sp/>-<sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nondimensional<sp/>frequency,<sp/>divided<sp/>by<sp/>the<sp/>peak<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>gam<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>peak<sp/>enhancement<sp/>factor,<sp/>optional<sp/>parameter<sp/>(DEFAULT<sp/>3.3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>y<sp/>is<sp/>output<sp/>:<sp/>nondimensional<sp/>relative<sp/>spectral<sp/>density,<sp/>equal<sp/>to<sp/>one<sp/>at<sp/>the<sp/>peak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>gam</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">INTENT(INOUT)</highlight><highlight class="normal"><sp/><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(size(x))</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>xa,<sp/>sigma,<sp/>fac1,<sp/>fac2,<sp/>fac3,<sp/>temp</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/>xa=abs(x)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(xa==0)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xa=1e-20</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/>sigma=xa</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(sigma&lt;1.)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigma=0.07</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(sigma&gt;=1.)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sigma=0.09</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/>temp=0*xa+1</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>fac1=xa**(-5)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/>fac2=exp(-1.25*(xa**(-4)))</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/>fac3=(gam*temp)**(exp(-((xa-1)**2)/(2*(sigma**2))))</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/>y=fac1*fac2*fac3</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/>y=y/maxval(y)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a5bc7d87300fd79711879398f94cd8d46" kindref="member">jonswapgk</ref></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">!<sp/>----------------------Read<sp/>SWAN<sp/>files<sp/>------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ab5b5100ab2b89fd4f982d7552b22857a" kindref="member">read_swan_file</ref>(par,readfile,specin)</highlight></codeline>
<codeline lineno="817" refid="namespacewave__boundary__update__module_1ab5b5100ab2b89fd4f982d7552b22857a" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceparams" kindref="compound">params</ref></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacefilefunctions" kindref="compound">filefunctions</ref></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module" kindref="compound">xmpi_module</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools" kindref="compound">math_tools</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/><ref refid="namespacemath__tools_1a96828338fa9a363dfc5173dfc8edebd1" kindref="member">flipv</ref>,<ref refid="namespacemath__tools_1a62c62feebd4db49040c4838594eabb4d" kindref="member">flipa</ref></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Input<sp/>/<sp/>output<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structparams_1_1parameters" kindref="compound">parameters</ref>),<sp/></highlight><highlight class="keywordtype">INTENT(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>par</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=*)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>readfile</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>specin</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(6)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>rtext</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>factor,exc</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fid,switch</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ii,ier,ier2,ier3</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>flipped</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>nt,Ashift</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>temp</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>tempA</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>flipped<sp/>=.false.</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/>switch<sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Reading<sp/>from<sp/>SWAN<sp/>file<sp/>&apos;</highlight><highlight class="normal">,trim(readfile),</highlight><highlight class="stringliteral">&apos;<sp/>...&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/>fid<sp/>=<sp/><ref refid="namespacefilefunctions_1ac1d555ba2ee4df77c53632cb4a9216ca" kindref="member">create_new_fid</ref>()</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">open</highlight><highlight class="normal">(fid,file=readfile,form=</highlight><highlight class="stringliteral">&apos;formatted&apos;</highlight><highlight class="normal">,status=</highlight><highlight class="stringliteral">&apos;old&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>file<sp/>until<sp/>RFREQ<sp/>or<sp/>AFREQ<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(switch==0)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,</highlight><highlight class="stringliteral">&apos;(a)&apos;</highlight><highlight class="normal">,iostat=ier)rtext</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;RFREQ<sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;AFREQ<sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>nfreq<sp/>and<sp/>f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Note<sp/>f<sp/>is<sp/>not<sp/>monotonically<sp/>increasing<sp/>in<sp/>most<sp/>simulations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%nf</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%f(specin%nf))</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%f(i)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>to<sp/>absolute<sp/>frequencies:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>STILL<sp/>TO<sp/>BE<sp/>DONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(switch<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%f<sp/>=<sp/>specin%f</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%f<sp/>=<sp/>specin%f</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>CDIR<sp/>or<sp/>NDIR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,</highlight><highlight class="stringliteral">&apos;(a)&apos;</highlight><highlight class="normal">,iostat=ier)rtext</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;NDIR<sp/><sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;CDIR<sp/><sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ewls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;SWAN<sp/>directional<sp/>bins<sp/>keyword<sp/>not<sp/>found&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>ndir,<sp/>theta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%nang</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%ang(specin%nang))</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%ang(i)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>angles<sp/>to<sp/>cartesian<sp/>degrees<sp/>relative<sp/>to<sp/>East</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(switch<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>nautical<sp/>to<sp/>cartesian<sp/>East</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang<sp/>=<sp/>270.d0-specin%ang</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>cartesian<sp/>to<sp/>cartesian<sp/>East</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang<sp/>=<sp/>specin%ang-par%dthetaS_XB</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>dthetaS_XB<sp/>is<sp/>the<sp/>(counter-clockwise)<sp/>angle<sp/>in<sp/>the<sp/>degrees<sp/>to<sp/>rotate<sp/>from<sp/>the<sp/>x-axis<sp/>in<sp/>SWAN<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>x-axis<sp/>pointing<sp/>East</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Ensure<sp/>angles<sp/>are<sp/>increasing<sp/>instead<sp/>of<sp/>decreasing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specin%ang(2)&lt;specin%ang(1))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools_1a96828338fa9a363dfc5173dfc8edebd1" kindref="member">flipv</ref>(specin%ang,</highlight><highlight class="keyword">size</highlight><highlight class="normal">(specin%ang))</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flipped=.true.</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/>nt<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/>ashift<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Make<sp/>sure<sp/>that<sp/>all<sp/>angles<sp/>are<sp/>in<sp/>range<sp/>of<sp/>0<sp/>to<sp/>360<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(minval(specin%ang)&lt;0.d0)</highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal"><sp/>(temp(specin%nang))</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ashift=-1</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp=0.d0</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specin%ang(i)&lt;0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang(i)=specin%ang(i)+360.0d0</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nt<sp/>=<sp/>nt+1</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(1:specin%nang-nt)=specin%ang(nt+1:specin%nang)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(specin%nang-nt+1:specin%nang)=specin%ang(1:nt)</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang=temp</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(temp)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal">(maxval(specin%ang)&gt;360.0d0)</highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal"><sp/>(temp(specin%nang))</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ashift=1</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp=0.d0</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specin%ang(i)&gt;360.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang(i)=specin%ang(i)-360.0d0</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nt<sp/>=<sp/>nt+1</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(nt+1:specin%nang)=specin%ang(1:specin%nang-nt)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(1:nt)=specin%ang(specin%nang-nt+1:specin%nang)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang=temp</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(temp)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>convert<sp/>to<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/>specin%ang=specin%ang*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>/180</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/>specin%dang=specin%ang(2)-specin%ang(1)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Skip<sp/>Quant,<sp/>next<sp/>line,<sp/>read<sp/>VaDens<sp/>or<sp/>EnDens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,</highlight><highlight class="stringliteral">&apos;(a)&apos;</highlight><highlight class="normal">,iostat=ier)rtext</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,</highlight><highlight class="stringliteral">&apos;(a)&apos;</highlight><highlight class="normal">,iostat=ier2)rtext</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,</highlight><highlight class="stringliteral">&apos;(a)&apos;</highlight><highlight class="normal">,iostat=ier3)rtext</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier+ier2+ier3<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;VaDens&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;EnDens&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;slwe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;SWAN<sp/>VaDens/EnDens<sp/>keyword<sp/>not<sp/>found&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,</highlight><highlight class="stringliteral">&apos;(a)&apos;</highlight><highlight class="normal">,iostat=ier)rtext</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier2)exc</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier+ier2<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/>i=0</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Find<sp/>FACTOR<sp/>keyword</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i==0)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,</highlight><highlight class="stringliteral">&apos;(a)&apos;</highlight><highlight class="normal">,iostat=ier)rtext</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;FACTOR&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i=1</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ZERO<sp/><sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lswe&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Zero<sp/>energy<sp/>density<sp/>input<sp/>for<sp/>this<sp/>point&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(rtext<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;NODATA&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lwse&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;SWAN<sp/>file<sp/>has<sp/>no<sp/>data<sp/>for<sp/>this<sp/>point&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)factor</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>2D<sp/>S<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%S(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)(specin%S(i,ii),ii=1,specin%nang)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Finished<sp/>reading<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">close</highlight><highlight class="normal">(fid)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Replace<sp/>exception<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(specin%S<sp/>==<sp/>exc)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endwhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>If<sp/>angles<sp/>were<sp/>decreasing,<sp/>flip<sp/>S_array<sp/>as<sp/>also<sp/>dir<sp/>is<sp/>flipped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flipped)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools_1a62c62feebd4db49040c4838594eabb4d" kindref="member">flipa</ref>(specin%S,specin%nf,specin%nang,2)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>If<sp/>the<sp/>order<sp/>of<sp/>the<sp/>angles<sp/>in<sp/>specin%ang<sp/>was<sp/>reordered,<sp/>so<sp/>the<sp/>same<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>specin%S<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ashift==-1)</highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempa(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa=0</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,1:specin%nang-nt)=specin%S(:,nt+1:specin%nang)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,specin%nang-nt+1:specin%nang)=specin%S(:,1:nt)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S=tempa</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempa)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(ashift==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempa(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa=0</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,nt+1:specin%nang)=specin%S(:,1:specin%nang-nt)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,1:nt)=specin%S(:,specin%nang-nt+1:specin%nang)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S=tempa</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempa)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>multiply<sp/>by<sp/>SWAN<sp/>output<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/>specin%S=specin%S*factor</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>from<sp/>energy<sp/>density<sp/>to<sp/>variance<sp/>density</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(switch<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S=specin%S/(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%rho*<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>to<sp/>m2/Hz/rad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/>specin%S=specin%S*180/<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>a<sp/>value<sp/>for<sp/>spreading.<sp/>The<sp/>assumption<sp/>is<sp/>that<sp/>it<sp/>is<sp/>less<sp/>than<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>way,<sp/>wp%fgen<sp/>will<sp/>not<sp/>be<sp/>set<sp/>to<sp/>just<sp/>one<sp/>angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/>specin%scoeff<sp/>=<sp/>-1.d0</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>to<sp/>know<sp/>if<sp/>hm0<sp/>was<sp/>set<sp/>explicitly,<sp/>not<sp/>the<sp/>case<sp/>for<sp/>Swan<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/>specin%hm0<sp/>=<sp/>-1.d0</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>frequency<sp/>spectrum<sp/>to<sp/>ensure<sp/>Sf<sp/>remains<sp/>correct<sp/>between<sp/>interpoloation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>routines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%Sf(specin%nf))</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/>specin%Sf=0.d0</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,specin%nang</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ii==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(2)-specin%ang(1))</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(ii==specin%nang)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(ii)-specin%ang(ii-1))</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(ii+1)-specin%ang(ii-1))/2</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ab5b5100ab2b89fd4f982d7552b22857a" kindref="member">read_swan_file</ref></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------------Read<sp/>variance<sp/>density<sp/>files<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a3de9d3cb05e0a95231de57375718a601" kindref="member">read_vardens_file</ref>(par,readfile,specin)</highlight></codeline>
<codeline lineno="1087" refid="namespacewave__boundary__update__module_1a3de9d3cb05e0a95231de57375718a601" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceparams" kindref="compound">params</ref></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacefilefunctions" kindref="compound">filefunctions</ref></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacexmpi__module" kindref="compound">xmpi_module</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/><ref refid="namespacexmpi__module_1a5406ad4cd4b3c61bf18b86fe6dcd9936" kindref="member">halt_program</ref></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools" kindref="compound">math_tools</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/><ref refid="namespacemath__tools_1a96828338fa9a363dfc5173dfc8edebd1" kindref="member">flipv</ref>,<ref refid="namespacemath__tools_1a62c62feebd4db49040c4838594eabb4d" kindref="member">flipa</ref></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Input<sp/>/<sp/>output<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structparams_1_1parameters" kindref="compound">parameters</ref>),<sp/></highlight><highlight class="keywordtype">INTENT(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>par</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=*)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(IN)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>readfile</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>specin</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fid,i,ii,nnz,ier,nt,Ashift</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Sd,temp</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>tempA</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Open<sp/>file<sp/>to<sp/>start<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Reading<sp/>from<sp/>vardens<sp/>file<sp/>&apos;</highlight><highlight class="normal">,trim(readfile),</highlight><highlight class="stringliteral">&apos;<sp/>...&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/>fid<sp/>=<sp/><ref refid="namespacefilefunctions_1ac1d555ba2ee4df77c53632cb4a9216ca" kindref="member">create_new_fid</ref>()</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">open</highlight><highlight class="normal">(fid,file=readfile,form=</highlight><highlight class="stringliteral">&apos;formatted&apos;</highlight><highlight class="normal">,status=</highlight><highlight class="stringliteral">&apos;old&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>number<sp/>of<sp/>frequencies<sp/>and<sp/>frequency<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%nf</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%f(specin%nf))</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%f(i)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>number<sp/>of<sp/>angles<sp/>and<sp/>angles<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%nang</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%ang(specin%nang))</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)specin%ang(i)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Directions<sp/>should<sp/>span<sp/>0-360<sp/>degrees,<sp/>not<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/>nt<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/>ashift<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Make<sp/>sure<sp/>that<sp/>all<sp/>angles<sp/>are<sp/>in<sp/>range<sp/>of<sp/>0<sp/>to<sp/>360<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(minval(specin%ang)&lt;0.d0)</highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal"><sp/>(temp(specin%nang))</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ashift=-1</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp=0.d0</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specin%ang(i)&lt;0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang(i)=specin%ang(i)+360.0d0</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nt<sp/>=<sp/>nt+1</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(1:specin%nang-nt)=specin%ang(nt+1:specin%nang)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(specin%nang-nt+1:specin%nang)=specin%ang(1:nt)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang=temp</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(temp)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal">(maxval(specin%ang)&gt;360.0d0)</highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal"><sp/>(temp(specin%nang))</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ashift=1</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp=0.d0</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nang</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specin%ang(i)&gt;360.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang(i)=specin%ang(i)-360.0d0</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nt<sp/>=<sp/>nt+1</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(nt+1:specin%nang)=specin%ang(1:specin%nang-nt)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp(1:nt)=specin%ang(specin%nang-nt+1:specin%nang)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%ang=temp</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(temp)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>from<sp/>degrees<sp/>to<sp/>rad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/>specin%ang=specin%ang*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>/180</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/>specin%dang=specin%ang(2)-specin%ang(1)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Read<sp/>2D<sp/>S<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%S(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">read</highlight><highlight class="normal">(fid,*,iostat=ier)(specin%S(i,ii),ii=1,specin%nang)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ier<sp/>.ne.<sp/>0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1ae7b8d1c55379954818a0b7b4576be077" kindref="member">report_file_read_error</ref>(readfile)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>If<sp/>the<sp/>order<sp/>of<sp/>the<sp/>angles<sp/>in<sp/>specin%ang<sp/>was<sp/>reordered,<sp/>so<sp/>the<sp/>same<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>specin%S<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ashift==-1)</highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempa(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa=0</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,1:specin%nang-nt)=specin%S(:,nt+1:specin%nang)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,specin%nang-nt+1:specin%nang)=specin%S(:,1:nt)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S=tempa</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempa)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(ashift==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempa(specin%nf,specin%nang))</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa=0</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,nt+1:specin%nang)=specin%S(:,1:specin%nang-nt)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempa(:,1:nt)=specin%S(:,specin%nang-nt+1:specin%nang)</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%S=tempa</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempa)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Finished<sp/>reading<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">close</highlight><highlight class="normal">(fid)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Convert<sp/>to<sp/>m2/Hz/rad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/>specin%S=specin%S*180/<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>a<sp/>value<sp/>for<sp/>spreading.<sp/>The<sp/>assumption<sp/>is<sp/>that<sp/>it<sp/>is<sp/>less<sp/>than<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>if<sp/>more<sp/>than<sp/>one<sp/>direction<sp/>column<sp/>has<sp/>variance.<sp/>If<sp/>only<sp/>one<sp/>column<sp/>has<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>we<sp/>assume<sp/>the<sp/>model<sp/>requires<sp/>long<sp/>crested<sp/>waves,<sp/>and<sp/>wp%thetagen<sp/>should<sp/>be<sp/>exactly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>equal<sp/>to<sp/>the<sp/>input<sp/>direction.<sp/>We<sp/>then<sp/>also<sp/>need<sp/>to<sp/>find<sp/>the<sp/>dominant<sp/>angle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>First<sp/>flatten<sp/>spectrum<sp/>to<sp/>direction<sp/>only,<sp/>then<sp/>determine<sp/>if<sp/>all<sp/>but<sp/>one<sp/>are<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>use<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>non-zero<sp/>as<sp/>the<sp/>main<sp/>wave<sp/>direction,<sp/>set<sp/>spreading<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>a<sp/>high<sp/>value<sp/>(greater<sp/>than<sp/>1000).<sp/>Else<sp/>set<sp/>spreading<sp/>to<sp/>a<sp/>negative<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(sd(specin%nang))</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/>sd<sp/>=<sp/>sum(specin%S,dim<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/>nnz<sp/>=<sp/>count(sd&gt;0.d0)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nnz<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%scoeff<sp/>=<sp/>1024.d0</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%dir0<sp/>=<sp/>specin%ang(minval(maxloc(sd)))</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specin%scoeff<sp/>=<sp/>-1.d0</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>frequency<sp/>spectrum<sp/>to<sp/>ensure<sp/>Sf<sp/>remains<sp/>correct<sp/>between<sp/>interpoloation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>routines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specin%Sf(specin%nf))</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/>specin%Sf=0.d0</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,specin%nang</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ii==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(2)-specin%ang(1))</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(ii==specin%nang)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(ii)-specin%ang(ii-1))</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specin%Sf(i)<sp/>=<sp/>specin%Sf(i)+specin%S(i,ii)*abs(specin%ang(ii+1)-specin%ang(ii-1))/2</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>need<sp/>to<sp/>know<sp/>if<sp/>hm0<sp/>was<sp/>set<sp/>explicitly,<sp/>not<sp/>the<sp/>case<sp/>for<sp/>vardens<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/>specin%hm0<sp/>=<sp/>-1.d0</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(sd)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a3de9d3cb05e0a95231de57375718a601" kindref="member">read_vardens_file</ref></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-------------<sp/>Interpolate<sp/>to<sp/>standard<sp/>spectrum<sp/>---------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ae2d9744d91d10c8ab02ec7e4255c8425" kindref="member">interpolate_spectrum</ref>(specin,specinterp,par,fmax)</highlight></codeline>
<codeline lineno="1253" refid="namespacewave__boundary__update__module_1ae2d9744d91d10c8ab02ec7e4255c8425" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceparams" kindref="compound">params</ref></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">IMPLICIT<sp/>NONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>specin</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>specinterp</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structparams_1_1parameters" kindref="compound">parameters</ref>),</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>par</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fmax</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,j,dummy</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>m0,df,dang</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(naint)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Sd</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>hm0pre,hm0post,Sfnow,factor,tempt0</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>allocate<sp/>size<sp/>of<sp/>f,ang,Sf<sp/>and<sp/>S<sp/>arrays<sp/>in<sp/>specinterp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specinterp%f(<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>))</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specinterp%ang(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>))</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specinterp%Sf(<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>))</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(specinterp%S(<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>,<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>))</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>fill<sp/>f<sp/>and<sp/>ang<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/>specinterp%nf<sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/>specinterp%df<sp/>=<sp/>fmax/(<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>-1)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>usually<sp/>gives<sp/>a<sp/>range<sp/>of<sp/>0-1Hz,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>with<sp/>1/800Hz<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%f(i)=(i-1)*specinterp%df</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/>specinterp%nang<sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/>specinterp%dang<sp/>=<sp/>2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>/(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>-1)<sp/></highlight><highlight class="comment">!<sp/>this<sp/>is<sp/>exactly<sp/>the<sp/>same<sp/>as<sp/>in<sp/>the<sp/>JONSWAP<sp/>construction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specinterp%nang</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%ang(i)=(i-1)*specinterp%dang</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>If<sp/>hm0<sp/>was<sp/>set<sp/>explicitly,<sp/>then<sp/>use<sp/>that,<sp/>else<sp/>calculate<sp/>hm0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specin%hm0&gt;0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hm0pre<sp/>=<sp/>specin%hm0</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>pre-interpolation<sp/>hm0<sp/>value<sp/>(can<sp/>be<sp/>on<sp/>a<sp/>non-monotonic<sp/>f,ang<sp/>grid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m0<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,specin%nang</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,specin%nf</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>specin%f(max(2,i))-specin%f(max(1,i-1))</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dang<sp/>=<sp/>specin%ang(max(2,j))-specin%ang(max(1,j-1))</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0<sp/>=<sp/>m0<sp/>+<sp/>specin%S(i,j)*df*dang</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hm0pre<sp/>=<sp/>4*sqrt(m0)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolation<sp/>(no<sp/>extrapolation)<sp/>of<sp/>input<sp/>2D<sp/>spectrum<sp/>to<sp/>standard<sp/>2D<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a9948cdaf83dc1dc94923c375df5f696d" kindref="member">linear_interp_2d</ref>(specin%f,specin%nf,specin%ang,specin%nang,specin%S,<sp/>&amp;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%f(i),specinterp%ang(j),specinterp%S(i,j),</highlight><highlight class="stringliteral">&apos;interp&apos;</highlight><highlight class="normal">,0.d0)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>hm0<sp/>post<sp/>(is<sp/>always<sp/>on<sp/>a<sp/>monotonic<sp/>f,ang<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/>m0<sp/>=<sp/>sum(specinterp%S)*specinterp%df*specinterp%dang</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/>hm0post<sp/>=<sp/>4*sqrt(m0)</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>correct<sp/>the<sp/>wave<sp/>energy<sp/>to<sp/>ensure<sp/>hm0post<sp/>==<sp/>hm0pre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>specinterp%S<sp/>=<sp/>(hm0pre/hm0post)**2*specinterp%S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>is<sp/>done<sp/>later<sp/>using<sp/>Sf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>calculate<sp/>1D<sp/>spectrum,<sp/>summed<sp/>over<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/>specinterp%Sf<sp/>=<sp/>sum(specinterp%S,<sp/>dim<sp/>=<sp/>2)*specinterp%dang</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>correct<sp/>the<sp/>wave<sp/>energy<sp/>by<sp/>setting<sp/>Sfpost<sp/>==<sp/>Sfpre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specinterp%f(i)&gt;=minval(specin%f)<sp/>.and.<sp/>specinterp%f(i)&lt;=maxval(specin%f))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(specin%f,specin%Sf,specin%nf,specinterp%f(i),sfnow,dummy)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(specinterp%Sf(i)&gt;0.d0<sp/>.and.<sp/>sfnow&gt;0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>sfnow/specinterp%Sf(i)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%Sf(i)<sp/><sp/>=<sp/>specinterp%Sf(i)*factor</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%S(i,:)<sp/>=<sp/>specinterp%S(i,:)*factor</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(sfnow==0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%Sf(i)<sp/><sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%S(i,:)<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%Sf(i)<sp/><sp/>=<sp/>sfnow</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy<sp/>=<sp/>maxval(maxloc(specin%S(i,:)))</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempt0<sp/>=<sp/>specin%ang(dummy)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummy<sp/>=<sp/>maxval(minloc(abs(specinterp%ang-tempt0)))</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp%S(i,dummy)<sp/>=<sp/>sfnow/specinterp%dang</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>calculate<sp/>other<sp/>wave<sp/>statistics<sp/>from<sp/>interpolated<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/>m0<sp/>=<sp/>sum(specinterp%Sf)*specinterp%df</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/>specinterp%hm0<sp/>=<sp/>4*sqrt(m0)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/>sd<sp/>=<sp/>sum(specinterp%S,<sp/>dim<sp/>=<sp/>1)*specinterp%df</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/>i<sp/><sp/>=<sp/>maxval(maxloc(sd))</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/>specinterp%dir0<sp/>=<sp/>270.d0<sp/>-<sp/>specinterp%ang(i)*180/<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref><sp/><sp/></highlight><highlight class="comment">!<sp/>converted<sp/>back<sp/>into<sp/>nautical<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/>i<sp/><sp/>=<sp/>maxval(maxloc(specinterp%Sf))</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/>specinterp%fp<sp/>=<sp/>specinterp%f(i)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a4e15ef71e18241d85282b778c4a89dc3" kindref="member">tpdcalc</ref>(specinterp%Sf,specinterp%f,specinterp%trep,par%trepfac,par%Tm01switch)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/>specinterp%dirm<sp/>=<sp/>270.d0-180.d0/<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>*atan2(<sp/>sum(sin(specinterp%ang)*sd)/sum(sd),&amp;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/>sum(cos(specinterp%ang)*sd)/sum(sd)<sp/>)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ae2d9744d91d10c8ab02ec7e4255c8425" kindref="member">interpolate_spectrum</ref></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------<sp/>Small<sp/>subroutine<sp/>to<sp/>determine<sp/>if<sp/>the<sp/><sp/>------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">!<sp/>----------<sp/>global<sp/>repeatwbc<sp/>should<sp/>be<sp/>true<sp/>or<sp/>false<sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abd084d6776d32cef09b3bee71c5cb0a7" kindref="member">set_repeatwbc</ref></highlight></codeline>
<codeline lineno="1362" refid="namespacewave__boundary__update__module_1abd084d6776d32cef09b3bee71c5cb0a7" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>set<sp/>default<sp/>to<sp/>repeat<sp/>all<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%repeatwbc<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>find<sp/>any<sp/>spectrum<sp/>that<sp/>cannot<sp/>be<sp/>repeated,<sp/>then<sp/>change<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>repeatwbc<sp/>to<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<sp/><ref refid="namespacespectral__wave__bc__module_1a621db5e24669eb828b47320c3a4a6d72" kindref="member">bcfiles</ref>(i)%repeat)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%repeatwbc<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abd084d6776d32cef09b3bee71c5cb0a7" kindref="member">set_repeatwbc</ref></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------<sp/>Small<sp/>subroutine<sp/>to<sp/>set<sp/>the<sp/>filenames<sp/>------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------<sp/>of<sp/>the<sp/>boundary<sp/>condition<sp/>output<sp/>files<sp/>-----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a7733ddcad14f14bc8d8e11a2601583ec" kindref="member">set_bcfilenames</ref>(wp)</highlight></codeline>
<codeline lineno="1383" refid="namespacewave__boundary__update__module_1a7733ddcad14f14bc8d8e11a2601583ec" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i1,i2,i3,i4,i5</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%repeatwbc)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%Efilename<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;E_reuse.bcf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%qfilename<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;q_reuse.bcf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%nhfilename<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;nh_reuse.bcf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i1=floor(</highlight><highlight class="keywordtype">real</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>)/10000)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i2=floor(</highlight><highlight class="keywordtype">real</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>-i1*10000)/1000)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i3=floor(</highlight><highlight class="keywordtype">real</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>-i1*10000-i2*1000)/100)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i4=floor(</highlight><highlight class="keywordtype">real</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>-i1*10000-i2*1000-i3*100)/10)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i5=<ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>-i1*10000-i2*1000-i3*100-i4*10</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%Efilename=</highlight><highlight class="stringliteral">&apos;E_series&apos;</highlight><highlight class="normal">//char(48+i1)//char(48+i2)//char(48+i3)//char(48+i4)//char(48+i5)//</highlight><highlight class="stringliteral">&apos;.bcf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%qfilename=</highlight><highlight class="stringliteral">&apos;q_series&apos;</highlight><highlight class="normal">//char(48+i1)//char(48+i2)//char(48+i3)//char(48+i4)//char(48+i5)//</highlight><highlight class="stringliteral">&apos;.bcf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%nhfilename=</highlight><highlight class="stringliteral">&apos;nh_series&apos;</highlight><highlight class="normal">//char(48+i1)//char(48+i2)//char(48+i3)//char(48+i4)//char(48+i5)//</highlight><highlight class="stringliteral">&apos;.bcf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a7733ddcad14f14bc8d8e11a2601583ec" kindref="member">set_bcfilenames</ref></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------<sp/>Merge<sp/>all<sp/>separate<sp/>spectra<sp/>into<sp/>one<sp/>--------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------<sp/>average<sp/>spectrum<sp/>for<sp/>other<sp/>use<sp/>----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1aaeef560ab591f6dbba9bd20ae846d629" kindref="member">generate_combined_spectrum</ref>(specinterp,combspec)</highlight></codeline>
<codeline lineno="1411" refid="namespacewave__boundary__update__module_1aaeef560ab591f6dbba9bd20ae846d629" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">dimension(nspectra)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/>::<sp/>specinterp</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>combspec</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>iloc</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(naint)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Sd</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(3)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>peakSd,peakang</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>tempSf</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(combspec%f(<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>))</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(combspec%Sf(<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>))</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(combspec%ang(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>))</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(combspec%S(<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>,<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>))</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/>combspec%f=specinterp(1)%f</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/>combspec%nf=<ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/>combspec%df=specinterp(1)%df</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/>combspec%ang=specinterp(1)%ang</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/>combspec%nang=<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/>combspec%dang=specinterp(1)%dang</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/>combspec%trep<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/>combspec%S=0.d0</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/>combspec%Sf=0.d0</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/>combspec%hm0=0.d0</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iloc<sp/>=<sp/>1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>combspec%S<sp/><sp/><sp/><sp/>=<sp/>combspec%S<sp/><sp/><sp/>+specinterp(iloc)%S<sp/><sp/><sp/>/<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>combspec%Sf<sp/><sp/><sp/>=<sp/>combspec%Sf<sp/><sp/>+specinterp(iloc)%Sf<sp/><sp/>/<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>peak<sp/>wave<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>frequency<sp/>integrated<sp/>variance<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/>sd<sp/>=<sp/>sum(combspec%S,dim=1)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>peak<sp/>location<sp/>of<sp/>f-int<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/>iloc<sp/>=<sp/>maxval(maxloc(sd))</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>pick<sp/>two<sp/>neighbouring<sp/>directional<sp/>bins,<sp/>including<sp/>effect<sp/>of<sp/>closing<sp/>circle<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>0<sp/>and<sp/>2pi<sp/>rad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iloc&gt;1<sp/>.and.<sp/>iloc&lt;<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peaksd<sp/>=<sp/>(/sd(iloc-1),sd(iloc),sd(iloc+1)/)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peakang<sp/>=<sp/>(/combspec%ang(iloc-1),combspec%ang(iloc),combspec%ang(iloc+1)/)</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(iloc==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peaksd<sp/>=<sp/>(/sd(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>),sd(1),sd(2)/)</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peakang<sp/>=<sp/>(/combspec%ang(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>)-2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>,combspec%ang(1),combspec%ang(2)/)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(iloc==<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peaksd<sp/>=<sp/>(/sd(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>-1),sd(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>),sd(1)/)</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peakang<sp/>=<sp/>(/combspec%ang(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>-1),combspec%ang(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>),combspec%ang(1)+2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>/)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>dir0<sp/>calculated<sp/>as<sp/>mean<sp/>over<sp/>peak<sp/>and<sp/>two<sp/>neighbouring<sp/>cells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/>combspec%dir0<sp/>=<sp/>sum(peaksd*peakang)/sum(peaksd)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>return<sp/>to<sp/>0&lt;=dir0&lt;=2*par_pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(combspec%dir0&gt;2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>combspec%dir0<sp/>=<sp/>combspec%dir0-2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal"><sp/>(combspec%dir0&lt;0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>combspec%dir0<sp/>=<sp/>combspec%dir0+2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Compute<sp/>peak<sp/>wave<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempsf(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(combspec%Sf)))</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/>tempsf=0*combspec%Sf</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>find<sp/>frequency<sp/>range<sp/>of<sp/>95%<sp/>wave<sp/>energy<sp/>around<sp/>peak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(combspec%Sf&gt;0.95d0*maxval(combspec%Sf))</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempsf=combspec%Sf</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>smoothed<sp/>peak<sp/>is<sp/>weighted<sp/>mean<sp/>frequency<sp/>of<sp/>95%<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/>combspec%fp<sp/>=<sp/>sum(tempsf*combspec%f)/sum(tempsf)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Compute<sp/>representative<sp/>wave<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a4e15ef71e18241d85282b778c4a89dc3" kindref="member">tpdcalc</ref>(combspec%Sf,combspec%f,combspec%trep,par%trepfac,par%Tm01switch)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Compute<sp/>combined<sp/>wave<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iloc<sp/>=<sp/>1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>combspec%hm0<sp/>=<sp/>combspec%hm0+specinterp(iloc)%hm0**2/<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/>combspec%hm0<sp/>=<sp/>sqrt(combspec%hm0)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1aaeef560ab591f6dbba9bd20ae846d629" kindref="member">generate_combined_spectrum</ref></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------<sp/>Choose<sp/>wave<sp/>train<sp/>components<sp/>based<sp/>on<sp/>------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="comment">!<sp/>---------------------<sp/>combined<sp/>spectrum<sp/>----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ae4957a7ad9dc3602eb0f2995bc525e26" kindref="member">generate_wavetrain_components</ref>(combspec,wp)</highlight></codeline>
<codeline lineno="1495" refid="namespacewave__boundary__update__module_1ae4957a7ad9dc3602eb0f2995bc525e26" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1497"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__functions__module" kindref="compound">wave_functions_module</ref></highlight><highlight class="keywordtype">,<sp/>only</highlight><highlight class="normal">:<sp/><ref refid="namespacewave__functions__module_1a15eb614d222e8d8d6d04d00aaacc059a" kindref="member">iteratedispersion</ref></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1501"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools" kindref="compound">math_tools</ref></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>combspec</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ii</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>ind1,ind2,dummy</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>randnums,pdflocal,cdflocal</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>L0,L,kmax,fmax,dummy_real</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>If<sp/>we<sp/>are<sp/>running<sp/>non-hydrostatic<sp/>boundary<sp/>conditions,<sp/>we<sp/>want<sp/>to<sp/>remove</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>very<sp/>high<sp/>frequency<sp/>components,<sp/>as<sp/>these<sp/>will<sp/>not<sp/>be<sp/>computed<sp/>well<sp/>anyway</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kmax<sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1a63ca71e8f24c6a188d2eacdb73654798" kindref="member">wdmax</ref>/<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmax<sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>*kmax*tanh(kmax*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)/2/<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>is<sp/>really<sp/>already<sp/>taken<sp/>into<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>by<sp/>specifying<sp/>waveBoundaryParameters%sprdthr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fmax<sp/>=<sp/>2*maxval(combspec%f)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>frequencies<sp/>around<sp/>peak<sp/>frequency<sp/>of<sp/>one-dimensional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>non-directional<sp/>variance<sp/>density<sp/>spectrum,<sp/>based<sp/>on<sp/>factor<sp/>sprdthr,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>should<sp/>be<sp/>included<sp/>in<sp/>the<sp/>determination<sp/>of<sp/>the<sp/>wave<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a632d04aed24044a1cbf540896e0aef61" kindref="member">frange</ref>(combspec%f,combspec%Sf,fmax,ind1,ind2)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>number<sp/>of<sp/>wave<sp/>components<sp/>to<sp/>be<sp/>included<sp/>in<sp/>determination<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>wave<sp/>boundary<sp/>conditions<sp/>based<sp/>on<sp/>the<sp/>wave<sp/>record<sp/>length<sp/>and<sp/>width<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>wave<sp/>frequency<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/>wp%K<sp/>=<sp/>ceiling(wp%rtbc*(combspec%f(ind2)-combspec%f(ind1))+1)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>also<sp/>include<sp/>minimum<sp/>number<sp/>of<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>wp%K<sp/>=<sp/>max(wp%K,<ref refid="namespacewave__boundary__update__module_1a198ece17c81b168c9159a9ac7d104be9" kindref="member">kmin</ref>)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>space<sp/>in<sp/>waveparams<sp/>for<sp/>all<sp/>wave<sp/>train<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%fgen(wp%K))</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%thetagen(wp%K))</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%phigen(wp%K))</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%kgen(wp%K))</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%wgen(wp%K))</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Select<sp/>equidistant<sp/>wave<sp/>components<sp/>between<sp/>the<sp/>earlier<sp/>selected<sp/>range<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>frequencies<sp/>around<sp/>the<sp/>peak<sp/>frequency<sp/>in<sp/>the<sp/>frange<sp/>subfunction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/>wp%dfgen<sp/>=<sp/>(combspec%f(ind2)-combspec%f(ind1))/(wp%K-1)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%fgen(i)=combspec%f(ind1)+(i-1)*wp%dfgen</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>subroutine<sp/>needs<sp/>to<sp/>generate<sp/>random<sp/>phase<sp/>/<sp/>directions<sp/>for<sp/>the<sp/>individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>wave<sp/>trains.<sp/>Due<sp/>to<sp/>some<sp/>strange<sp/>Fortran<sp/>properties,<sp/>it<sp/>is<sp/>better<sp/>to<sp/>select</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>one<sp/>long<sp/>vector<sp/>with<sp/>random<sp/>numbers<sp/>for<sp/>both<sp/>the<sp/>phase<sp/>and<sp/>the<sp/>direction,<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>one<sp/>vector<sp/>for<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Update<sp/>random<sp/>seed,<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(randnums(2*wp%K))</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Spin<sp/>up<sp/>random<sp/>number<sp/>generator,<sp/>else<sp/>all<sp/>low<sp/>seed<sp/>numbers<sp/>mean<sp/>random<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>start<sp/>at<sp/>~0.<sp/>Don&apos;t<sp/>know<sp/>how<sp/>much<sp/>spin<sp/>up<sp/>is<sp/>required<sp/>(strictly<sp/>no<sp/>spin-up<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>if<sp/>random<sp/>integer<sp/>given<sp/>as<sp/>seed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/>dummy_real<sp/>=<sp/><ref refid="namespacemath__tools_1a1b0f90130baacf1d04a9a058da8073ce" kindref="member">random</ref>(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%randomseed)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,10</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dummy_real<sp/>=<sp/><ref refid="namespacemath__tools_1a1b0f90130baacf1d04a9a058da8073ce" kindref="member">random</ref>(0)</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,2*wp%K</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>randnums(i)<sp/>=<sp/><ref refid="namespacemath__tools_1a1b0f90130baacf1d04a9a058da8073ce" kindref="member">random</ref>(0)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>a<sp/>random<sp/>phase<sp/>for<sp/>each<sp/>wave<sp/>train<sp/>component<sp/>between<sp/>0<sp/>and<sp/>2pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/>wp%phigen=randnums(1:wp%K)*2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>random<sp/>directions<sp/>for<sp/>each<sp/>wave<sp/>train<sp/>component,<sp/>based<sp/>on<sp/>the<sp/>CDF<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>directional<sp/>spectrum.<sp/>For<sp/>each<sp/>wave<sp/>train<sp/>we<sp/>will<sp/>interpolate<sp/>the<sp/>directional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>distribution<sp/>at<sp/>that<sp/>frequency,<sp/>generate<sp/>a<sp/>CDF,<sp/>and<sp/>then<sp/>interpolate<sp/>the<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>train<sp/>direction<sp/>from<sp/>a<sp/>random<sp/>number<sp/>draw<sp/>and<sp/>the<sp/>CDF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(pdflocal(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>))</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(cdflocal(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>))</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolate<sp/>spectrum<sp/>at<sp/>this<sp/>frequency<sp/>per<sp/>angle<sp/>in<sp/>the<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1582"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(combspec%f,combspec%S(:,ii),combspec%nf,<sp/>wp%fgen(i),pdflocal(ii),dummy)</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1584"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolate<sp/>in<sp/>other<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1586"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>convert<sp/>to<sp/>pdf<sp/>by<sp/>ensuring<sp/>total<sp/>integral<sp/>==<sp/>1,<sp/>assuming<sp/>constant<sp/>directional<sp/>bin<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pdflocal<sp/>=<sp/>pdflocal/sum(pdflocal)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>convert<sp/>to<sp/>cdf<sp/>by<sp/>trapezoidal<sp/>integration,<sp/>which<sp/>is<sp/>not<sp/>biased<sp/>for<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Boundary<sp/>condition,<sp/>which<sp/>may<sp/>be<sp/>nonzero:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cdflocal(1)<sp/>=<sp/>pdflocal(1)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=2,<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdflocal(ii)<sp/>=<sp/>cdflocal(ii-1)<sp/>+<sp/>(pdflocal(ii)+pdflocal(ii-1))/2</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Note:<sp/>this<sp/>only<sp/>works<sp/>if<sp/>the<sp/>directional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>bins<sp/>are<sp/>constant<sp/>in<sp/>size.<sp/>Assumed<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>by<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolate<sp/>random<sp/>number<sp/>draw<sp/>across<sp/>the<sp/>cdf.<sp/>Note<sp/>that<sp/>cdf(1)<sp/>is<sp/>not<sp/>assumed<sp/>to<sp/>be<sp/>zero<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>there<sp/>is<sp/>a<sp/>posibility<sp/>of<sp/>drawing<sp/>less<sp/>than<sp/>cdf(1).<sp/>Therefore,<sp/>if<sp/>the<sp/>random<sp/>number<sp/>is<sp/>.lt.<sp/>cdf(1),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolation<sp/>should<sp/>take<sp/>place<sp/>across<sp/>the<sp/>back<sp/>of<sp/>the<sp/>angle<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>(i.e.,<sp/>from<sp/>theta(end)-2pi<sp/>:<sp/>theta(1)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Note<sp/>that<sp/>we<sp/>are<sp/>using<sp/>the<sp/>second<sp/>half<sp/>of<sp/>randnums<sp/>now<sp/>(K+1:end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(randnums(wp%K+i)&gt;=cdflocal(1))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1606"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(cdflocal,combspec%ang,<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>,randnums(wp%K+i),<sp/>wp%thetagen(i),dummy)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1608"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolate<sp/>in<sp/>other<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1610"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1612"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>((/0.d0,cdflocal(1)/),(/combspec%ang(<ref refid="namespacewave__boundary__update__module_1ac9e62f819b53121045439337b2edc3d3" kindref="member">naint</ref>)-2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>,combspec%ang(1)/),<sp/>&amp;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,randnums(wp%K+i),wp%thetagen(i),dummy)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1615"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolate<sp/>in<sp/>other<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1617"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>ensure<sp/>wave<sp/>direction<sp/>0&lt;=theta&lt;2pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%thetagen(i)<sp/>=<sp/>mod(wp%thetagen(i),2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>determine<sp/>wave<sp/>number<sp/>for<sp/>each<sp/>wave<sp/>train<sp/>component,<sp/>using<sp/>standard<sp/>dispersion<sp/>relation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>solver<sp/>from<sp/>wave_functions<sp/>module.<sp/>This<sp/>function<sp/>returns<sp/>a<sp/>negative<sp/>wave<sp/>length<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>solver<sp/>did<sp/>not<sp/>converge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1626"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l0<sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>*(1/wp%fgen(i))**2/2/<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>deep<sp/>water<sp/>wave<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="namespacewave__functions__module_1a15eb614d222e8d8d6d04d00aaacc059a" kindref="member">iteratedispersion</ref>(l0,l0,<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>,<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l&lt;0.d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;No<sp/>dispersion<sp/>convergence<sp/>found<sp/>for<sp/>wave<sp/>train<sp/>&apos;</highlight><highlight class="normal">,i,<sp/>&amp;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;<sp/>in<sp/>boundary<sp/>condition<sp/>generation&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>-l</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%kgen(i)<sp/>=<sp/>2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>/l</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1637"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>do<sp/>dispersion<sp/>relation<sp/>in<sp/>other<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1639"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Angular<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/>wp%wgen<sp/>=<sp/>2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>*wp%fgen</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(pdflocal,cdflocal,randnums)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ae4957a7ad9dc3602eb0f2995bc525e26" kindref="member">generate_wavetrain_components</ref></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------<sp/>Small<sp/>subroutine<sp/>to<sp/>determine<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="comment">!<sp/>------------<sp/>representative<sp/>wave<sp/>period<sp/>-------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a4e15ef71e18241d85282b778c4a89dc3" kindref="member">tpdcalc</ref>(Sf,f,Trep,trepfac,switch)</highlight></codeline>
<codeline lineno="1652" refid="namespacewave__boundary__update__module_1a4e15ef71e18241d85282b778c4a89dc3" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Sf,<sp/>f</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Trep</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>trepfac</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>switch</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>temp</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(temp(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(sf)))</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/>temp=0.d0</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(sf&gt;=trepfac*maxval(sf))</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp=1.d0</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(switch<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trep=sum(temp*sf)/sum(temp*sf*f)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Tm01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trep<sp/>=<sp/>sum(temp*sf/max(f,0.001d0))/sum(temp*sf)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Tm-1,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(temp)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a4e15ef71e18241d85282b778c4a89dc3" kindref="member">tpdcalc</ref></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="comment">!<sp/>----<sp/>Small<sp/>subroutine<sp/>to<sp/>determine<sp/>f-range<sp/>round<sp/>peak<sp/>-----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a632d04aed24044a1cbf540896e0aef61" kindref="member">frange</ref>(f,Sf,fmax,firstp,lastp,findlineout)</highlight></codeline>
<codeline lineno="1683" refid="namespacewave__boundary__update__module_1a632d04aed24044a1cbf540896e0aef61" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>f,Sf</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>fmax</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>firstp,<sp/>lastp</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">intent(out)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">optional</highlight><highlight class="normal"><sp/><sp/>::<sp/>findlineout</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>temp,<sp/>findline</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>find<sp/>frequency<sp/>range<sp/>around<sp/>peak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(findline(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(sf)))</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/>findline=0*sf</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(sf&gt;<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%sprdthr*maxval(sf))</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>findline=1</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>find<sp/>frequency<sp/>range<sp/>below<sp/>fmax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal">(f&gt;fmax)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>findline<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endwhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/>firstp=maxval(maxloc(findline))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Picks<sp/>the<sp/>first<sp/>&quot;1&quot;<sp/>in<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal"><sp/>(temp(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(findline)))</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/>temp=(/(i,i=1,</highlight><highlight class="keyword">size</highlight><highlight class="normal">(findline))/)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/>lastp=maxval(maxloc(temp*findline))<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Picks<sp/>the<sp/>last<sp/>&quot;1&quot;<sp/>in<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">present</highlight><highlight class="normal">(findlineout))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(findlineout(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(sf)))</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>findlineout=findline</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(temp,<sp/>findline)</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a632d04aed24044a1cbf540896e0aef61" kindref="member">frange</ref></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="comment">!<sp/>----------------<sp/>Setup<sp/>time<sp/>axis<sp/>for<sp/>waves<sp/>-------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ab59aa2224e1035323d13e3c933e4f665" kindref="member">generate_wave_time_axis</ref>(wp)</highlight></codeline>
<codeline lineno="1728" refid="namespacewave__boundary__update__module_1ab59aa2224e1035323d13e3c933e4f665" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>ntaper,<sp/>indend</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>First<sp/>assume<sp/>that<sp/>internal<sp/>and<sp/>bc-writing<sp/>time<sp/>step<sp/>is<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/>wp%dtin<sp/>=<sp/>wp%dtbc</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/>wp%dtchanged<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/>wp%tslenbc<sp/>=<sp/>nint(wp%rtbc/wp%dtbc)+1</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Check<sp/>whether<sp/>the<sp/>internal<sp/>frequency<sp/>is<sp/>high<sp/>enough<sp/>to<sp/>describe<sp/>the<sp/>highest<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>wave<sp/>train<sp/>returned<sp/>from<sp/>frange<sp/>(which<sp/>can<sp/>be<sp/>used<sp/>in<sp/>the<sp/>boundary<sp/>conditions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp%dtin&gt;0.5d0/wp%fgen(wp%K))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%dtin<sp/>=<sp/>0.5d0/wp%fgen(wp%K)</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%dtchanged<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp%dtin&gt;0.1d0/wp%fgen(wp%K))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%dtin<sp/>=<sp/>0.1d0/wp%fgen(wp%K)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%dtchanged<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>The<sp/>length<sp/>of<sp/>the<sp/>internal<sp/>time<sp/>axis<sp/>should<sp/>be<sp/>even<sp/>(for<sp/>Fourier<sp/>transform)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>depends<sp/>on<sp/>the<sp/>internal<sp/>time<sp/>step<sp/>needed<sp/>and<sp/>the<sp/>internal<sp/>duration<sp/>(~1/dfgen):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/>wp%tslen<sp/>=<sp/>ceiling(1/wp%dfgen/wp%dtin)+1</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mod(wp%tslen,2)/=0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%tslen<sp/>=<sp/>wp%tslen<sp/>+1</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Now<sp/>we<sp/>can<sp/>make<sp/>the<sp/>internal<sp/>time<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/>wp%rtin<sp/>=<sp/>wp%tslen<sp/>*<sp/>wp%dtin</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%tin(wp%tslen))</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%tslen</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%tin(i)<sp/>=<sp/>(i-1)*wp%dtin</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Make<sp/>a<sp/>taper<sp/>function<sp/>to<sp/>slowly<sp/>increase<sp/>and<sp/>decrease<sp/>the<sp/>boundary<sp/>condition<sp/>forcing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>at<sp/>the<sp/>start<sp/>and<sp/>the<sp/>end<sp/>of<sp/>the<sp/>boundary<sp/>condition<sp/>file<sp/>(including<sp/>any<sp/>time<sp/>beyond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>external<sp/>rtbc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%taperf(wp%tslen))</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%taperw(wp%tslen))</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>fill<sp/>majority<sp/>with<sp/>unity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/>wp%taperf<sp/>=<sp/>1.d0</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/>wp%taperw<sp/>=<sp/>1.d0</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>begin<sp/>taper<sp/>by<sp/>building<sp/>up<sp/>the<sp/>wave<sp/>conditions<sp/>over<sp/>2<sp/>wave<sp/>periods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ntaper<sp/>=<sp/>nint((2.0d0*<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Tbc)/wp%dtin)</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ntaper<sp/>=<sp/>nint((5.d0*<ref refid="namespacewave__boundary__datastore_1a8baeb32ff8dd50720c48ca2305a10cb6" kindref="member">wavespectrumadministration</ref>%Tbc)/wp%dtin)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,min(ntaper,</highlight><highlight class="keyword">size</highlight><highlight class="normal">(wp%taperf))</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%taperf(i)<sp/>=<sp/>tanh(5.d0*i/ntaper)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>multiplied<sp/>by<sp/>five<sp/>because<sp/>tanh(5)=~1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%taperw(i)<sp/>=<sp/>tanh(5.d0*i/ntaper)</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>do<sp/>not<sp/>want<sp/>to<sp/>taperw<sp/>the<sp/>end<sp/>anymore.<sp/>Instead<sp/>we<sp/>pass<sp/>the<sp/>wave<sp/>height<sp/>at<sp/>the<sp/>end<sp/>of<sp/>rtbc<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>next<sp/>wave<sp/>generation<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>end<sp/>taper<sp/>by<sp/>finding<sp/>where<sp/>tin=rtbc,<sp/>taper<sp/>before<sp/>that<sp/>and<sp/>set<sp/>everything<sp/>to<sp/>zero<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp%tin(wp%tslen)&gt;wp%rtbc)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indend<sp/>=<sp/>minval(minloc(wp%tin,mask<sp/>=<sp/>wp%tin&gt;=wp%rtbc))</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indend<sp/>=<sp/>wp%tslen</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,min(ntaper,indend)</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%taperf(indend+1-i)<sp/>=<sp/>min(wp%taperf(indend+1-i),tanh(5.d0*i/ntaper))</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/>wp%taperf(indend:wp%tslen)<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacespectral__wave__bc__module_1a68b6219bef2cb0691999de72884dfbf7" kindref="member">ind_end_taper</ref><sp/>=<sp/>indend</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1ab59aa2224e1035323d13e3c933e4f665" kindref="member">generate_wave_time_axis</ref></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------<sp/>Calculate<sp/>variance<sp/>at<sp/>each<sp/>spectrum<sp/>location<sp/>--------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abfca894c2cf81454e1b7e6407b8dfde2" kindref="member">generate_wave_train_variance</ref>(wp,specinterp)</highlight></codeline>
<codeline lineno="1812" refid="namespacewave__boundary__update__module_1abfca894c2cf81454e1b7e6407b8dfde2" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1814"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1816"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1spectrum" kindref="compound">spectrum</ref>),</highlight><highlight class="keywordtype">dimension(nspectra)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal">::<sp/>specinterp</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ii,<sp/>dummy</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>hm0post</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>allocate<sp/>space<sp/>for<sp/>the<sp/>variance<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%vargen(<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref>))</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%vargenq(<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref>))</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>variance<sp/>at<sp/>each<sp/>spectrum<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%vargen(i)%Sf(wp%K))</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%vargenq(i)%Sf(wp%K))</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,wp%K</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>In<sp/>order<sp/>to<sp/>maintain<sp/>energy<sp/>density<sp/>per<sp/>frequency,<sp/>an<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>is<sp/>carried<sp/>out<sp/>on<sp/>the<sp/>input<sp/>directional<sp/>variance<sp/>density<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>at<sp/>the<sp/>frequency<sp/>and<sp/>direction<sp/>locations<sp/>in<sp/>fgen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(specinterp(i)%f,<sp/>&amp;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specinterp(i)%Sf,<sp/>&amp;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__update__module_1a630fa777235fa48eb36e8c1b3de1710c" kindref="member">nfint</ref>,<sp/>&amp;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%fgen(ii),<sp/>&amp;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%vargen(i)%Sf(ii),dummy)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Correct<sp/>variance<sp/>to<sp/>ensure<sp/>the<sp/>total<sp/>variance<sp/>remains<sp/>the<sp/>same<sp/>as<sp/>the<sp/>total<sp/>variance<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>(interpolated)<sp/>input<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hm0post<sp/>=<sp/>4*sqrt(sum(wp%vargen(i)%Sf)*wp%dfgen)</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%vargen(i)%Sf<sp/><sp/><sp/>=<sp/>(specinterp(i)%hm0/hm0post)**2*wp%vargen(i)%Sf</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>For<sp/>the<sp/>generation<sp/>of<sp/>long<sp/>waves<sp/>we<sp/>cannot<sp/>use<sp/>wp%vargen%Sf,<sp/>because<sp/>it<sp/>contains<sp/>an<sp/>overestimation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>of<sp/>energy<sp/>in<sp/>the<sp/>peak<sp/>frequencies.<sp/>We<sp/>can<sp/>also<sp/>not<sp/>use<sp/>the<sp/>standard<sp/>directionally-integrated<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>because<sp/>this<sp/>stores<sp/>all<sp/>energy<sp/>at<sp/>fgen(K),<sp/>where<sp/>it<sp/>is<sp/>possible<sp/>that<sp/>for<sp/>this<sp/>current<sp/>spectrum,<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>is<sp/>no<sp/>energy<sp/>at<sp/>S(f(K),theta(K0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>The<sp/>current<sp/>solution<sp/>is<sp/>to<sp/>take<sp/>the<sp/>minimum<sp/>of<sp/>both<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,wp%K</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Map<sp/>Sf<sp/>input<sp/>to<sp/>fgen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(specinterp(i)%f,specinterp(i)%Sf,specinterp(i)%nf,wp%fgen(ii),wp%vargenq(i)%Sf(ii),dummy)</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%vargenq(i)%Sf<sp/>=<sp/>min(wp%vargen(i)%Sf,wp%vargenq(i)%Sf)</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abfca894c2cf81454e1b7e6407b8dfde2" kindref="member">generate_wave_train_variance</ref></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="comment">!<sp/>------<sp/>Calculate<sp/>amplitudes<sp/>at<sp/>each<sp/>spectrum<sp/>location<sp/>--------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="comment">!<sp/>------------<sp/>for<sp/>every<sp/>wave<sp/>train<sp/>component<sp/>------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a858c0cdca5cc0cb6d3b1a6c1a673860b" kindref="member">generate_wave_train_properties_per_offshore_point</ref>(wp,s)</highlight></codeline>
<codeline lineno="1865" refid="namespacewave__boundary__update__module_1a858c0cdca5cc0cb6d3b1a6c1a673860b" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacespaceparams" kindref="compound">spaceparams</ref></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structspaceparamsdef_1_1spacepars" kindref="compound">spacepars</ref>),</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>s</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ii,dummy</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(2)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>interpindex</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(2)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>positions,sf</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>interpcase</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>here,sfnow,sfimp</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(size(n_index_loc))</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>temp_index_loc</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>allocate<sp/>space<sp/>for<sp/>the<sp/>amplitude<sp/>array<sp/>and<sp/>representative<sp/>integration<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%A(s%ny+1,wp%K))</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/>allocate(wp%danggen(s%ny+1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%Sfinterp(s%ny+1,wp%K))</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%Sfinterpq(s%ny+1,wp%K))</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%Hm0interp(s%ny+1))</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>where<sp/>necessary,<sp/>interpolate<sp/>Sf<sp/>of<sp/>each<sp/>spectrum<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>to<sp/>the<sp/>current<sp/>grid<sp/>cell,<sp/>and<sp/>use<sp/>this<sp/>to<sp/>calculate<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,s%ny+1</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Four<sp/>possibilities:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>1:<sp/>this<sp/>exact<sp/>point<sp/>has<sp/>an<sp/>input<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>2:<sp/>this<sp/>point<sp/>lies<sp/>between<sp/>two<sp/>input<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>3:<sp/>this<sp/>point<sp/>lies<sp/>before<sp/>any<sp/>input<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>4:<sp/>this<sp/>point<sp/>lies<sp/>beyond<sp/>any<sp/>input<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(any(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>==i))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/>case<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpcase<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>(ii)==i)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpindex<sp/>=<sp/>ii</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal">(i&lt;minval(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>case<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpcase<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>(ii)==minval(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpindex<sp/>=<sp/>ii</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elseif</highlight><highlight class="normal">(i&gt;maxval(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>case<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpcase<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,<ref refid="namespacewave__boundary__update__module_1a017ec130d97607d2786d74fd7db58dac" kindref="member">nspectra</ref></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>(ii)==maxval(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpindex<sp/>=<sp/>ii</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>case<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpcase<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_index_loc<sp/>=<sp/><ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal">(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>&gt;i)</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_index_loc<sp/>=<sp/>-huge(0)</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endwhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpindex(1)<sp/>=<sp/>minval(maxloc(temp_index_loc))</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_index_loc<sp/>=<sp/><ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal">(<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>&lt;i)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_index_loc<sp/>=<sp/>huge(0)</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endwhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpindex(2)<sp/>=<sp/>minval(minloc(temp_index_loc))</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interpolate<sp/>Sf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interpcase)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positions(1)<sp/>=<sp/>s%ndist(1,<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>(interpindex(1)))</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>positions(2)<sp/>=<sp/>s%ndist(1,<ref refid="namespacespectral__wave__bc__module_1afa4d71ea8e968509fffbdf9911996b03" kindref="member">n_index_loc</ref>(interpindex(2)))</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>here<sp/>=<sp/>s%ndist(1,i)</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,wp%K</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf(1)<sp/>=<sp/>wp%vargen(interpindex(1))%Sf(ii)</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf(2)<sp/>=<sp/>wp%vargen(interpindex(2))%Sf(ii)</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(positions,sf,2,here,wp%Sfinterp(i,ii),dummy)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf(1)<sp/>=<sp/>wp%vargenq(interpindex(1))%Sf(ii)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf(2)<sp/>=<sp/>wp%vargenq(interpindex(2))%Sf(ii)</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(positions,sf,2,here,wp%Sfinterpq(i,ii),dummy)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Ensure<sp/>that<sp/>the<sp/>total<sp/>amount<sp/>of<sp/>variance<sp/>has<sp/>not<sp/>been<sp/>reduced/increased</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>during<sp/>interpolation<sp/>for<sp/>short<sp/>wave<sp/>energy<sp/>only.<sp/>This<sp/>is<sp/>not<sp/>done<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Sf<sp/>for<sp/>bound<sp/>long<sp/>wave<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sfnow<sp/>=<sp/>sum(wp%Sfinterp(i,:))<sp/><sp/></highlight><highlight class="comment">!<sp/>integration<sp/>over<sp/>fixed<sp/>bin<sp/>df<sp/>size<sp/>unnecessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf(1)<sp/>=<sp/>sum(wp%vargen(interpindex(1))%Sf)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf(2)<sp/>=<sp/>sum(wp%vargen(interpindex(2))%Sf)</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(positions,sf,2,here,sfimp,dummy)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%Sfinterp(i,:)=wp%Sfinterp(i,:)*sfimp/sfnow</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%Sfinterp(i,:)<sp/>=<sp/>wp%vargen(interpindex(1))%Sf</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%Sfinterpq(i,:)<sp/>=<sp/>wp%vargenq(interpindex(1))%Sf</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%A(i,:)<sp/>=<sp/>sqrt(2*wp%Sfinterp(i,:)*wp%dfgen)</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%Hm0interp(i)<sp/>=<sp/>4*sqrt(sum(wp%Sfinterp(i,:))*wp%dfgen)</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>i=1,s%ny+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a858c0cdca5cc0cb6d3b1a6c1a673860b" kindref="member">generate_wave_train_properties_per_offshore_point</ref></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="comment">!<sp/>---------<sp/>Calculate<sp/>Fourier<sp/>componets<sp/>for<sp/>each<sp/>wave<sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="comment">!<sp/>----------<sp/>train<sp/>component<sp/>on<sp/>the<sp/>offshore<sp/>boundary<sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a236e07915aa89d0ab73758ccd9421c86" kindref="member">generate_wave_train_fourier</ref>(wp)</highlight></codeline>
<codeline lineno="1970" refid="namespacewave__boundary__update__module_1a236e07915aa89d0ab73758ccd9421c86" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1972"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1975"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools" kindref="compound">math_tools</ref></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ii,tempi</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">complex(fftkind)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>::<sp/>tempcmplx</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>indices<sp/>of<sp/>wave<sp/>train<sp/>components<sp/>in<sp/>frequency<sp/>axis<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Fourier<sp/>transform<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%Findex(wp%K))</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/>tempi<sp/>=<sp/>floor(wp%fgen(1)/wp%dfgen)</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%Findex(i)<sp/>=<sp/>tempi<sp/>+<sp/>i</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>Fourier<sp/>coefficients<sp/>for<sp/>each<sp/>y-position<sp/>at<sp/>the<sp/>offshore<sp/>boundary<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>each<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%CompFn(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen))</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/>wp%CompFn=0.d0</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempcmplx(wp%tslen/2-1))</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="1999"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Calculating<sp/>Fourier<sp/>components&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.true.,0.d0,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2002"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2004"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.false.,dble(i)/wp%K*100,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2006"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ii=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>first<sp/>half<sp/>of<sp/>complex<sp/>Fourier<sp/>coefficients<sp/>of<sp/>wave<sp/>train</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>components<sp/>using<sp/>random<sp/>phase<sp/>and<sp/>amplitudes<sp/>from<sp/>sampled<sp/>spectrum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>until<sp/>Nyquist<sp/>frequency.<sp/>The<sp/>amplitudes<sp/>are<sp/>represented<sp/>in<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>two-sided<sp/>spectrum,<sp/>which<sp/>results<sp/>in<sp/>the<sp/>factor<sp/>1/2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Unroll<sp/>Fourier<sp/>components<sp/>along<sp/>offshore<sp/>boundary,<sp/>assuming<sp/>all<sp/>wave<sp/>trains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>start<sp/>at<sp/>x(1,1),<sp/>y(1,1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%CompFn(ii,wp%Findex(i))<sp/>=<sp/>wp%A(ii,i)/2*exp(<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref>*wp%phigen(i))*<sp/>&amp;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Bas:<sp/>wp%Findex<sp/>used<sp/>in<sp/>time<sp/>dimension<sp/>because<sp/>t=j*dt<sp/>in<sp/>frequency<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(-<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref>*wp%kgen(i)*<sp/>&amp;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dsin(wp%thetagen(i))*(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%yb(ii)-<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%y0)<sp/>&amp;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+dcos(wp%thetagen(i))*(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%xb(ii)-<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%x0))<sp/>)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>Fourier<sp/>coefficients<sp/>beyond<sp/>Nyquist<sp/>frequency<sp/>(equal<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>coefficients<sp/>at<sp/>negative<sp/>frequency<sp/>axis)<sp/>of<sp/>relevant<sp/>wave<sp/>components<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>first<sp/>y-coordinate<sp/>by<sp/>mirroring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcmplx<sp/>=<sp/>conjg(wp%CompFn(ii,2:wp%tslen/2))</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcmplx<sp/>=<sp/><ref refid="namespacemath__tools_1a886b8427f30299b372917272a337331d" kindref="member">flipiv</ref>(tempcmplx,</highlight><highlight class="keyword">size</highlight><highlight class="normal">(tempcmplx))</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%CompFn(ii,wp%tslen/2+2:wp%tslen)=tempcmplx</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempcmplx)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a236e07915aa89d0ab73758ccd9421c86" kindref="member">generate_wave_train_fourier</ref></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight><highlight class="comment">!<sp/>---------<sp/>Calculate<sp/>in<sp/>which<sp/>computational<sp/>wave<sp/>bin<sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-------------<sp/>each<sp/>wave<sp/>train<sp/>component<sp/>belongs<sp/>--------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a779e12da663ad9c5df6ab9c505424878" kindref="member">distribute_wave_train_directions</ref>(wp,nspr)</highlight></codeline>
<codeline lineno="2036" refid="namespacewave__boundary__update__module_1a779e12da663ad9c5df6ab9c505424878" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2038"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2040"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>nspr</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>i,ii,itheta</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>binedges</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>toosmall,toolarge</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>lostvar,keptvar,perclost</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>lntheta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>local<sp/>copies<sp/>that<sp/>can<sp/>be<sp/>changed<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>ldtheta<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>damage<sp/>to<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>dang</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>the<sp/>bin<sp/>edges<sp/>of<sp/>all<sp/>the<sp/>computational<sp/>wave<sp/>bins<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>XBeach<sp/>model<sp/>(not<sp/>the<sp/>input<sp/>spectrum)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(binedges(lntheta,2))</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,lntheta</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binedges(itheta,1)<sp/>=<sp/>mod(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta(itheta)-ldtheta/2,2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binedges(itheta,2)<sp/>=<sp/>mod(<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta(itheta)+ldtheta/2,2*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>)</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>All<sp/>generated<sp/>wave<sp/>components<sp/>are<sp/>in<sp/>the<sp/>rang<sp/>0&lt;=theta&lt;2pi.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>link<sp/>wave<sp/>components<sp/>to<sp/>a<sp/>wave<sp/>direction<sp/>bin<sp/>if<sp/>the<sp/>direction<sp/>falls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>within<sp/>the<sp/>bin<sp/>boundaries.<sp/>Note<sp/>the<sp/>&gt;=<sp/>and<sp/>&lt;=,<sp/>ranther<sp/>than<sp/>&gt;=<sp/>and<sp/>&lt;.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>is<sp/>not<sp/>necessarily<sp/>a<sp/>problem,<sp/>but<sp/>solves<sp/>having<sp/>to<sp/>make<sp/>an<sp/>exception<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>highest<sp/>wave<sp/>direction<sp/>bin,<sp/>in<sp/>which<sp/>&gt;=<sp/>and<sp/>&lt;=<sp/>should<sp/>be<sp/>applicable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>In<sp/>the<sp/>case<sp/>of<sp/>a<sp/>central<sp/>bin<sp/>and<sp/>a<sp/>wave<sp/>direction<sp/>exactly<sp/>(!)<sp/>on<sp/>the<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>interface,<sp/>the<sp/>wave<sp/>will<sp/>be<sp/>linked<sp/>to<sp/>the<sp/>first<sp/>wave<sp/>bin<sp/>in<sp/>the<sp/>ordering,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>rather<sp/>than<sp/>the<sp/>higher<sp/>of<sp/>the<sp/>two<sp/>bins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Initially<sp/>set<sp/>WDindex<sp/>to<sp/>zero.<sp/>This<sp/>marks<sp/>a<sp/>wave<sp/>direction<sp/>outside<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>computational<sp/>wave<sp/>bins.<sp/>In<sp/>case<sp/>it<sp/>does<sp/>not<sp/>fit<sp/>in<sp/>a<sp/>directional<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>bin,<sp/>it<sp/>remains<sp/>zero<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>loops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Note:<sp/>this<sp/>does<sp/>not<sp/>ensure<sp/>all<sp/>energy<sp/>is<sp/>included<sp/>in<sp/>the<sp/>wave<sp/>bins,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>as<sp/>wave<sp/>energy<sp/>may<sp/>still<sp/>fall<sp/>outside<sp/>the<sp/>computational<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/>wp%WDindex<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,lntheta</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>special<sp/>case<sp/>if<sp/>this<sp/>bin<sp/>spans<sp/>0<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binedges(i,1)&gt;binedges(i,2))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Need<sp/>to<sp/>check<sp/>both<sp/>above<sp/>and<sp/>below<sp/>zero<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((wp%thetagen(i)&gt;=binedges(itheta,1)<sp/>.and.<sp/>wp%thetagen(i)&lt;=2*par_px)<sp/>.or.<sp/>&amp;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wp%thetagen(i)&gt;=0.d0<sp/>.and.<sp/>wp%thetagen(i)&lt;=binedges(itheta,2)<sp/><sp/><sp/><sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%WDindex(i)<sp/>=<sp/>itheta</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>now<sp/>have<sp/>the<sp/>correct<sp/>wave<sp/>bin,<sp/>move<sp/>to<sp/>next<sp/>wave<sp/>component<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wp%thetagen(i)&gt;=binedges(itheta,1)<sp/>.and.<sp/>wp%thetagen(i)&lt;=binedges(itheta,2))<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%WDindex(i)<sp/>=<sp/>itheta</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>We<sp/>now<sp/>have<sp/>the<sp/>correct<sp/>wave<sp/>bin,<sp/>move<sp/>to<sp/>next<sp/>wave<sp/>component<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>If<sp/>the<sp/>user<sp/>has<sp/>set<sp/>nspr<sp/>==<sp/>1<sp/>then<sp/>the<sp/>randomly<sp/>drawn<sp/>wave<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>should<sp/>be<sp/>set<sp/>to<sp/>the<sp/>centres<sp/>of<sp/>the<sp/>wave<sp/>directional<sp/>bins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Also<sp/>move<sp/>all<sp/>wave<sp/>energy<sp/>falling<sp/>outside<sp/>the<sp/>computational<sp/>bins,<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>computational<sp/>domain<sp/>(in<sp/>the<sp/>outer<sp/>wave<sp/>direction<sp/>bins)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nspr==1)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp%WDindex(i)&gt;0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>reset<sp/>the<sp/>direction<sp/>of<sp/>this<sp/>wave<sp/>train<sp/>to<sp/>the<sp/>centre<sp/>of<sp/>the<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%thetagen(i)=<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%theta(wp%WDindex(i))</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Check<sp/>the<sp/>amount<sp/>of<sp/>energy<sp/>lost<sp/>to<sp/>wave<sp/>trains<sp/>falling<sp/>outside<sp/>the<sp/>computational</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/>lostvar<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/>keptvar<sp/>=<sp/>0.d0</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>i=1,wp%K</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp%WDindex(i)==0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lostvar<sp/>=<sp/>lostvar<sp/>+<sp/>sum(wp%A(:,i)**2)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keptvar<sp/>=<sp/>keptvar<sp/>+<sp/>sum(wp%A(:,i)**2)</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/>perclost<sp/>=<sp/>100*(lostvar/(lostvar+keptvar))</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2126"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(perclost&gt;5.0d0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.1,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Large<sp/>amounts<sp/>of<sp/>energy<sp/>(&apos;</highlight><highlight class="normal">,perclost,<sp/>&amp;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;%)<sp/>fall<sp/>outside<sp/>computational<sp/>domain<sp/>at<sp/>the<sp/>offshore<sp/>boundary&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lsw&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Check<sp/>specification<sp/>of<sp/>input<sp/>wave<sp/>angles<sp/>and<sp/>wave<sp/>directional<sp/>grid&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,f0.1,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Wave<sp/>energy<sp/>outside<sp/>computational<sp/>domain<sp/>at<sp/>offshore<sp/>boundary:<sp/>&apos;</highlight><highlight class="normal">,perclost,</highlight><highlight class="stringliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2134"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(binedges)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a779e12da663ad9c5df6ab9c505424878" kindref="member">distribute_wave_train_directions</ref></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="comment">!<sp/>---------<sp/>Calculate<sp/>energy<sp/>envelope<sp/>time<sp/>series<sp/>from<sp/>---------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------<sp/>Fourier<sp/>components,<sp/>and<sp/>write<sp/>to<sp/>output<sp/>file<sp/>--------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abf4ffa23c6ce2aa451960820a63f7225" kindref="member">generate_ebcf</ref>(wp)</highlight></codeline>
<codeline lineno="2143" refid="namespacewave__boundary__update__module_1abf4ffa23c6ce2aa451960820a63f7225" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2146"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2149"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools" kindref="compound">math_tools</ref></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>itheta,iy,iwc,it,irec</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>index,status</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>reclen,fid</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>nwc</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:,:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>zeta,<sp/>Ampzeta,<sp/>E_tdir,<sp/>E_interp</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>eta,<sp/>Amp</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">complex(fftkind)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>::<sp/>Gn,<sp/>tempcmplx,tempcmplxhalf</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>tempindex,tempinclude</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>stdzeta,stdeta,etot,perc</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>variables<sp/>for<sp/>water<sp/>level<sp/>exitation<sp/>and<sp/>amplitude<sp/>with<sp/>and<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>directional<sp/>spreading<sp/>dependent<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(zeta(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen,ntheta))</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(ampzeta(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen,ntheta))</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/>zeta=0.d0</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/>ampzeta=0.d0</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(eta(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen))</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(amp(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen))</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/>eta=0.d0</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/>amp=0.d0</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>wave<sp/>energy<sp/>for<sp/>each<sp/>y-coordinate<sp/>along<sp/>seaside<sp/>boundary<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>current<sp/>computational<sp/>directional<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(nwc(ntheta))</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(gn(wp%tslen))</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempinclude(wp%K))</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempcmplx(wp%tslen))</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempcmplxhalf(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(gn(wp%tslen/2+2:wp%tslen))))</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,ntheta</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2188"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(A,I0,A,I0)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Calculating<sp/>short<sp/>wave<sp/>time<sp/>series<sp/>for<sp/>theta<sp/>bin<sp/>&apos;</highlight><highlight class="normal">,itheta,</highlight><highlight class="stringliteral">&apos;<sp/>of<sp/>&apos;</highlight><highlight class="normal">,s%ntheta)</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2190"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Select<sp/>wave<sp/>components<sp/>that<sp/>are<sp/>in<sp/>the<sp/>current<sp/>computational</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>directional<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempinclude=0</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal"><sp/>(wp%WDindex==itheta)</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempinclude=1</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>number<sp/>of<sp/>wave<sp/>components<sp/>that<sp/>are<sp/>in<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>computational<sp/>directional<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nwc(itheta)=sum(tempinclude)</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>for<sp/>each<sp/>wave<sp/>component<sp/>in<sp/>the<sp/>current<sp/>computational</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>directional<sp/>bin<sp/>its<sp/>index<sp/>in<sp/>the<sp/>Fourier<sp/>coefficients<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>ordered<sp/>from<sp/>high<sp/>to<sp/>low<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(tempindex(nwc(itheta)))</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempindex=0</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iwc=1,nwc(itheta)</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>find<sp/>highest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=maxval(maxloc(tempinclude))</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>reset<sp/>that<sp/>one<sp/>so<sp/>that<sp/>the<sp/>next<sp/>highest<sp/>in<sp/>found<sp/>in<sp/>next<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempinclude(index)=0</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempindex(iwc)=wp%Findex(index)</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Check<sp/>whether<sp/>any<sp/>wave<sp/>components<sp/>are<sp/>in<sp/>the<sp/>current<sp/>computational</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>directional<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nwc(itheta)&gt;0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iy=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn=0</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>Fourier<sp/>coefficients<sp/>of<sp/>all<sp/>wave<sp/>components<sp/>for<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>y-coordinate<sp/>in<sp/>the<sp/>current<sp/>computational<sp/>directional<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn(tempindex)=wp%CompFn(iy,tempindex)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcmplxhalf<sp/>=<sp/>conjg(gn(2:wp%tslen/2))</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools_1a886b8427f30299b372917272a337331d" kindref="member">flipiv</ref>(tempcmplxhalf,</highlight><highlight class="keyword">size</highlight><highlight class="normal">(tempcmplxhalf))</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn(wp%tslen/2+2:wp%tslen)=tempcmplxhalf</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Inverse<sp/>Discrete<sp/>Fourier<sp/>transformation<sp/>to<sp/>transform<sp/>back<sp/>to<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>domain<sp/>from<sp/>frequency<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcmplx=gn</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status=0</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcmplx=<ref refid="interfacemath__tools_1_1fft" kindref="compound">fft</ref>(tempcmplx,inv=.true.,stat=status)</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Scale<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempcmplx=tempcmplx/sqrt(dble(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(tempcmplx)))</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Superimpose<sp/>gradual<sp/>increase<sp/>and<sp/>decrease<sp/>of<sp/>energy<sp/>input<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>current<sp/>y-coordinate<sp/>and<sp/>computational<sp/>diretional<sp/>bin<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>instantaneous<sp/>water<sp/>level<sp/>excitation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Robert:<sp/>use<sp/>final<sp/>wave<sp/>elevation<sp/>from<sp/>last<sp/>iteration<sp/>to<sp/>startup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>boundary<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeta(iy,:,itheta)=dble(tempcmplx*wp%tslen)</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>The<sp/>first<sp/>time<sp/>this<sp/>function<sp/>is<sp/>called<sp/>in<sp/>a<sp/>simulation,<sp/>lastwaveelevation<sp/>is<sp/>unknown,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>so<sp/>would<sp/>be<sp/>set<sp/>to<sp/>zero.<sp/>However,<sp/>this<sp/>artificially<sp/>increases<sp/>the<sp/>taper<sp/>time,<sp/>and<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>not<sp/>useful<sp/>if<sp/>repeatwbc<sp/>=<sp/>.true.,<sp/>as<sp/>this<sp/>zero<sp/>level<sp/>is<sp/>repeated<sp/>every<sp/>boundary<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Instead,<sp/>we<sp/>select<sp/>zeta<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>first<sp/>boundary<sp/>condition<sp/>time<sp/>series<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>initialise<sp/>lastwaveelevation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacewave__boundary__update__module_1aa46f964a5cf334f6ecbc6b4fcb3e8c24" kindref="member">bccount</ref>==0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacespectral__wave__bc__module_1ad30c05f41d0a6e9a64100b9ae9e4d5b3" kindref="member">lastwaveelevation</ref>(:,itheta)<sp/>=<sp/>zeta(iy,<ref refid="namespacespectral__wave__bc__module_1a68b6219bef2cb0691999de72884dfbf7" kindref="member">ind_end_taper</ref>,itheta)</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zeta(iy,:,itheta)=zeta(iy,:,itheta)*wp%taperw+(1-wp%taperw)*<ref refid="namespacespectral__wave__bc__module_1ad30c05f41d0a6e9a64100b9ae9e4d5b3" kindref="member">lastwaveelevation</ref>(iy,itheta)</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>note<sp/>that<sp/>taperw<sp/>is<sp/>only<sp/>zero<sp/>at<sp/>the<sp/>start,<sp/>not<sp/>the<sp/>end<sp/>of<sp/>the<sp/>time<sp/>series,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>can<sp/>safely<sp/>copy<sp/>zeta<sp/>at<sp/>the<sp/>point<sp/>in<sp/>time<sp/>where<sp/>t=rtbc<sp/>to<sp/>lastwaveelevation<sp/>for<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>in<sp/>the<sp/>generation<sp/>of<sp/>the<sp/>next<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacespectral__wave__bc__module_1ad30c05f41d0a6e9a64100b9ae9e4d5b3" kindref="member">lastwaveelevation</ref>(:,itheta)<sp/>=<sp/>zeta(iy,<ref refid="namespacespectral__wave__bc__module_1a68b6219bef2cb0691999de72884dfbf7" kindref="member">ind_end_taper</ref>,itheta)</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>iy=1,ny+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/>nwc&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempindex)</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>itheta<sp/>=<sp/>1,ntheta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempinclude)</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(gn)</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempcmplxhalf)</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>energy<sp/>envelope<sp/>amplitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Robert:<sp/>note<sp/>oldwbc<sp/>has<sp/>been<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iy=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Integrate<sp/>instantaneous<sp/>water<sp/>level<sp/>excitation<sp/>of<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>components<sp/>over<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eta(iy,:)<sp/>=<sp/>sum(zeta(iy,:,:),2)</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempcmplx=eta(iy,:)</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Hilbert<sp/>transformation<sp/>to<sp/>determine<sp/>envelope<sp/>of<sp/>all<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>non-directional<sp/>wave<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools_1abc8cd176b4f95343f46d94bd6bebaf5f" kindref="member">hilbert</ref>(tempcmplx,</highlight><highlight class="keyword">size</highlight><highlight class="normal">(tempcmplx))</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>amplitude<sp/>of<sp/>water<sp/>level<sp/>envelope<sp/>by<sp/>calculating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>absolute<sp/>value<sp/>of<sp/>the<sp/>complex<sp/>wave<sp/>envelope<sp/>descriptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amp(iy,:)=abs(tempcmplx)</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>standard<sp/>deviation<sp/>of<sp/>non-directional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>instantaneous<sp/>water<sp/>level<sp/>excitation<sp/>of<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>wave<sp/>components<sp/>to<sp/>be<sp/>used<sp/>as<sp/>weighing<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stdeta<sp/>=<sp/>sqrt(sum(eta(iy,:)**2)/(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(eta(iy,:))-1))</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,ntheta</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nwc(itheta)&gt;0)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>standard<sp/>deviations<sp/>of<sp/>directional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>instantaneous<sp/>water<sp/>level<sp/>excitation<sp/>of<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>wave<sp/>components<sp/>to<sp/>be<sp/>used<sp/>as<sp/>weighing<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdzeta<sp/>=<sp/>sqrt(sum(zeta(iy,:,itheta)**2)/(</highlight><highlight class="keyword">size</highlight><highlight class="normal">(zeta(iy,:,itheta))-1))</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>amplitude<sp/>of<sp/>directional<sp/>wave<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampzeta(iy,:,itheta)=<sp/>amp(iy,:)*stdzeta/stdeta</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/>nwc==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Current<sp/>computational<sp/>directional<sp/>bin<sp/>does<sp/>not<sp/>contain<sp/>any<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ampzeta(iy,:,itheta)=0.d0</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/>nwc&gt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>1:ntheta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Print<sp/>status<sp/>message<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2303"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(A,I0,A,I0,A)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Y-point<sp/>&apos;</highlight><highlight class="normal">,iy,</highlight><highlight class="stringliteral">&apos;<sp/>of<sp/>&apos;</highlight><highlight class="normal">,s%ny+1,</highlight><highlight class="stringliteral">&apos;<sp/>done.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2305"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>end<sp/>do</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>1:ny+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(tempcmplx)</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(nwc)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>memory<sp/>for<sp/>energy<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(e_tdir(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen,ntheta))</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/>e_tdir=0.0d0</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/>e_tdir=0.5d0*<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%rho*<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>*ampzeta**2</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/>e_tdir=e_tdir/<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%dtheta</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Print<sp/>directional<sp/>energy<sp/>distribution<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/>etot<sp/>=<sp/>sum(e_tdir)</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,ntheta</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perc<sp/>=<sp/>sum(e_tdir(:,:,itheta))/etot*100</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2323"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(a,i0,a,f0.2,a)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Wave<sp/>bin<sp/>&apos;</highlight><highlight class="normal">,itheta,</highlight><highlight class="stringliteral">&apos;<sp/>contains<sp/>&apos;</highlight><highlight class="normal">,perc,</highlight><highlight class="stringliteral">&apos;%<sp/>of<sp/>total<sp/>energy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2325"><highlight class="preprocessor"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Store<sp/>time<sp/>series<sp/>in<sp/>internal<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>First<sp/>deallocate<sp/>arrays<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct)</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc)</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>in<sp/>the<sp/>correct<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslenbc+2,ntheta))</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc(wp%tslenbc+2))</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Store<sp/>time<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>it=2,wp%tslenbc+1</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc(2:wp%tslenbc+1)<sp/>=<sp/>(it-2)*wp%dtbc<sp/>+<sp/><ref refid="namespacewave__boundary__datastore_1a3cc0ff585dc90697ce990e1e9e42b3b6" kindref="member">waveboundaryadministration</ref>%startCurrentSeries</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>add<sp/>&apos;inifinite<sp/>ends<sp/>to<sp/>the<sp/>time<sp/>series<sp/>in<sp/>case<sp/>of<sp/>mismatch<sp/>at<sp/>the<sp/>end<sp/>or<sp/>start<sp/>of<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>series<sp/>generation<sp/>and<sp/>interpolation<sp/>at<sp/>each<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc(1)<sp/>=<sp/>-1.d0*huge(0.d0)</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%tbc(wp%tslenbc+2)<sp/>=<sp/>1.d0*huge(0.d0)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp%dtchanged)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Interpolate<sp/>from<sp/>internal<sp/>time<sp/>axis<sp/>to<sp/>output<sp/>time<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>itheta=1,ntheta</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>it=2,wp%tslenbc+1</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iy=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(wp%tin,e_tdir(iy,:,itheta),wp%tslen,<sp/>&amp;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-1)*wp%dtbc,<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(iy,it,itheta),status)</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>no<sp/>need<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(:,2:wp%tslenbc+1,:)<sp/>=<sp/>e_tdir</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>add<sp/>&apos;inifinite<sp/>ends<sp/>to<sp/>the<sp/>time<sp/>series<sp/>in<sp/>case<sp/>of<sp/>mismatch<sp/>at<sp/>the<sp/>end<sp/>or<sp/>start<sp/>of<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>series<sp/>generation<sp/>and<sp/>interpolation<sp/>at<sp/>each<sp/>time<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(:,1,:)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(:,2,:)</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(:,wp%tslenbc+2,:)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%eebct(:,wp%tslenbc+1,:)</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(zeta,ampzeta,e_tdir,<sp/>amp,<sp/>eta)</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abf4ffa23c6ce2aa451960820a63f7225" kindref="member">generate_ebcf</ref></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="comment">!<sp/>------<sp/>Calculate<sp/>time<sp/>series<sp/>of<sp/>short<sp/>wave<sp/>at<sp/>offshore<sp/>-------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight><highlight class="comment">!<sp/>---------------------------<sp/>boundary<sp/>-------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abce2d0758a1fbc8c700f1018d80545b4" kindref="member">generate_swts</ref>(wp)</highlight></codeline>
<codeline lineno="2377" refid="namespacewave__boundary__update__module_1abce2d0758a1fbc8c700f1018d80545b4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2378"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2380"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>j,it,ik</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(npb)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>distx,disty</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>allocate<sp/>memory<sp/>for<sp/>time<sp/>series<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%zsits(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen))</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(wp%uits(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen))</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/>wp%zsits=0.d0</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/>wp%uits=0.d0</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>distance<sp/>of<sp/>each<sp/>grid<sp/>point<sp/>to<sp/>reference<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distx(j)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%xb(j)-<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%x0</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>disty(j)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%yb(j)-<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%y0</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>total<sp/>surface<sp/>elevation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2403"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Calculating<sp/>short<sp/>wave<sp/>elevation<sp/>time<sp/>series&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.true.,0.d0,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2406"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>it=1,wp%tslen</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2408"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.false.,dble(it)/wp%tslen*100,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2410"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ik=1,wp%K</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%zsits(j,it)=wp%zsits(j,it)+wp%A(j,ik)*dsin(<sp/>&amp;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+wp%wgen(ik)*wp%tin(it)&amp;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-wp%kgen(ik)*(<sp/>dsin(wp%thetagen(ik))*disty(j)<sp/>&amp;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+dcos(wp%thetagen(ik))*distx(j)<sp/>&amp;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+wp%phigen(ik)<sp/>&amp;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>depth-averaged<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2424"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Calculating<sp/>short<sp/>wave<sp/>velocity<sp/>time<sp/>series&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.true.,0.d0,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2427"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>it=1,wp%tslen</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2429"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.false.,dble(it)/wp%tslen*100,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2431"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>ik=1,wp%K</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%uits(j,it)<sp/>=<sp/>wp%uits(j,it)<sp/>+<sp/>&amp;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.d0/<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>*wp%wgen(ik)*wp%A(j,ik)/sinh(wp%kgen(ik)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)<sp/>*<sp/>&amp;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dsin(<sp/>&amp;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+wp%wgen(ik)*wp%tin(it)&amp;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-wp%kgen(ik)*(<sp/>dsin(wp%thetagen(ik))*disty(j)<sp/>&amp;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+dcos(wp%thetagen(ik))*distx(j)<sp/>&amp;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+wp%phigen(ik)<sp/>&amp;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>*<sp/>&amp;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.d0/wp%kgen(ik)*sinh(wp%kgen(ik)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Apply<sp/>tapering<sp/>to<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%uits(j,:)=wp%uits(j,:)*wp%taperf</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wp%zsits(j,:)=wp%zsits(j,:)*wp%taperf</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1abce2d0758a1fbc8c700f1018d80545b4" kindref="member">generate_swts</ref></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight><highlight class="comment">!<sp/>-----------------------<sp/>Bound<sp/>long<sp/>wave<sp/>----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a178b2db870cbd999305ed8e4b1db0fb3" kindref="member">generate_qbcf</ref>(wp)</highlight></codeline>
<codeline lineno="2461" refid="namespacewave__boundary__update__module_1a178b2db870cbd999305ed8e4b1db0fb3" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2463"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp" kindref="compound">interp</ref></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2466"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools" kindref="compound">math_tools</ref></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>j,m,iq,irec,it<sp/><sp/></highlight><highlight class="comment">!<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>K<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>copy<sp/>of<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>halflen,reclen,fid,status</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">logical</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>firsttime<sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>used<sp/>for<sp/>output<sp/>message<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>deltaf<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>difference<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>term1,term2,term2new,dif,chk1,chk2</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(npb)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>distx,disty</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>Eforc,D,deltheta,KKx,KKy,dphi3,k3,cg3,theta3,Abnd</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">real*8</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>q,qinterp</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">complex(fftkind)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>::<sp/>Comptemp,Comptemp2,Gn</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">complex(fftkind)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(:,:,:)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">allocatable</highlight><highlight class="normal">::<sp/>Ftemp</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>This<sp/>function<sp/>has<sp/>changed<sp/>with<sp/>respect<sp/>to<sp/>previous<sp/>versions<sp/>of<sp/>XBeach,<sp/>in<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>the<sp/>bound<sp/>long<sp/>wave<sp/>has<sp/>to<sp/>be<sp/>calculated<sp/>separately<sp/>at<sp/>each<sp/>longshore<sp/>point,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>owing<sp/>to<sp/>longshore<sp/>varying<sp/>incident<sp/>wave<sp/>spectra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>shortcut<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/>k<sp/>=<sp/>wp%K</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Print<sp/>message<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2497"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Calculating<sp/>primary<sp/>wave<sp/>interaction&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2499"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>two-dimensional<sp/>variables<sp/>for<sp/>all<sp/>combinations<sp/>of<sp/>interacting<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>components<sp/>to<sp/>be<sp/>filled<sp/>triangular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(eforc(k-1,k))</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(d(k-1,k))</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(deltheta(k-1,k))</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(kkx(k-1,k))</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(kky(k-1,k))</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(dphi3(k-1,k))</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(k3(k-1,k))</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(cg3(k-1,k))</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(theta3(k-1,k))</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>variables<sp/>for<sp/>amplitude<sp/>and<sp/>Fourier<sp/>coefficients<sp/>of<sp/>bound<sp/>long<sp/>wave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(gn(wp%tslen))</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(abnd(k-1,k))</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(ftemp(k-1,k,3))<sp/></highlight><highlight class="comment">!<sp/>Jaap<sp/>qx,<sp/>qy,<sp/>zeta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Storage<sp/>for<sp/>output<sp/>discharge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(q(s%ny+1,wp%tslen,4))<sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>qx<sp/>qy<sp/>qtot,<sp/>zeta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Initialize<sp/>variables<sp/>as<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/>eforc<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/>d<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/>deltheta<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/>kkx<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/>kky<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/>dphi3<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/>k3<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/>cg3<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/>theta3<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/>gn<sp/>=<sp/>0*<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/>abnd<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/>ftemp<sp/>=<sp/>0*<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/>q<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>First<sp/>time<sp/>is<sp/>set<sp/>true<sp/>for<sp/>each<sp/>time<sp/>new<sp/>wave<sp/>bc<sp/>are<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/>firsttime<sp/>=<sp/>.true.</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>upper<sp/>half<sp/>of<sp/>frequency<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/>halflen<sp/>=<sp/>wp%tslen/2</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Run<sp/>loop<sp/>over<sp/>wave-wave<sp/>interaction<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2541"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.true.,0.d0,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2543"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>m=1,k-1</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2545"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module_1a3d872b241885f27df103f38b9cae3ee4" kindref="member">progress_indicator</ref>(.false.,dble(m)/(k-1)*100,5.d0,2.d0)</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2547"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(term1(k-m),term2(k-m),term2new(k-m),dif(k-m),chk1(k-m),chk2(k-m))</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>difference<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deltaf=m*wp%dfgen</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>difference<sp/>angles<sp/>(pi<sp/>already<sp/>added)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deltheta(m,1:k-m)<sp/>=<sp/>abs(wp%thetagen(m+1:k)-wp%thetagen(1:k-m))+<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>x-<sp/>and<sp/>y-components<sp/>of<sp/>wave<sp/>numbers<sp/>of<sp/>difference<sp/>waves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kky(m,1:k-m)=wp%kgen(m+1:k)*dsin(wp%thetagen(m+1:k))-wp%kgen(1:k-m)*dsin(wp%thetagen(1:k-m))</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kkx(m,1:k-m)=wp%kgen(m+1:k)*dcos(wp%thetagen(m+1:k))-wp%kgen(1:k-m)*dcos(wp%thetagen(1:k-m))</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>difference<sp/>wave<sp/>numbers<sp/>according<sp/>to<sp/>Van<sp/>Dongeren<sp/>et<sp/>al.<sp/>2003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>eq.<sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k3(m,1:k-m)<sp/>=sqrt(wp%kgen(1:k-m)**2+wp%kgen(m+1:k)**2+<sp/>&amp;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2*wp%kgen(1:k-m)*wp%kgen(m+1:k)*dcos(deltheta(m,1:k-m)))</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>group<sp/>velocity<sp/>of<sp/>difference<sp/>waves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cg3(m,1:k-m)=<sp/>2.d0*<ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>*deltaf/k3(m,1:k-m)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Modification<sp/>Robert<sp/>+<sp/>Jaap:<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>bound<sp/>long<sp/>wave<sp/>amplitude<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>explode<sp/>when<sp/>offshore<sp/>boundary<sp/>is<sp/>too<sp/>close<sp/>to<sp/>shore,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>limiting<sp/>the<sp/>interaction<sp/>group<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cg3(m,1:k-m)<sp/>=<sp/>min(cg3(m,1:k-m),<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nmax*sqrt(<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>/k3(m,1:k-m)*tanh(k3(m,1:k-m)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)))</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>difference-interaction<sp/>coefficient<sp/>according<sp/>to<sp/>Herbers<sp/>1994</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>eq.<sp/>A5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>term1<sp/>=<sp/>(-wp%wgen(1:k-m))*wp%wgen(m+1:k)</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>term2<sp/>=<sp/>(-wp%wgen(1:k-m))+wp%wgen(m+1:k)</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>term2new<sp/>=<sp/>cg3(m,1:k-m)*k3(m,1:k-m)</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dif<sp/>=<sp/>(abs(term2-term2new))</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(any(dif&gt;0.01*term2)<sp/>.and.<sp/>firsttime)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firsttime<sp/>=<sp/>.false.</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chk1<sp/><sp/>=<sp/>cosh(wp%kgen(1:k-m)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chk2<sp/><sp/>=<sp/>cosh(wp%kgen(m+1:k)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d(m,1:k-m)<sp/>=<sp/>-<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>*wp%kgen(1:k-m)*wp%kgen(m+1:k)*dcos(deltheta(m,1:k-m))/2.d0/term1+<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>*term2*(chk1*chk2)/<sp/>&amp;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>*k3(m,1:k-m)*tanh(k3(m,1:k-m)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)-(term2new)**2)*term1*cosh(k3(m,1:k-m)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>))*<sp/>&amp;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(term2*((term1)**2/<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref>/<ref refid="namespacewave__boundary__update__module_1a9dc3c07fa112a64bc1e75c06e4e9573f" kindref="member">par_g</ref><sp/>-<sp/>wp%kgen(1:k-m)*wp%kgen(m+1:k)*dcos(deltheta(m,1:k-m)))<sp/>&amp;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>0.50d0*((-wp%wgen(1:k-m))*wp%kgen(m+1:k)**2/(chk2**2)+wp%wgen(m+1:k)*wp%kgen(1:k-m)**2/(chk1**2)))</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Correct<sp/>for<sp/>surface<sp/>elevation<sp/>input<sp/>and<sp/>output<sp/>instead<sp/>of<sp/>bottom<sp/>pressure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>so<sp/>it<sp/>is<sp/>consistent<sp/>with<sp/>Van<sp/>Dongeren<sp/>et<sp/>al<sp/>2003<sp/>eq.<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d(m,1:k-m)<sp/>=<sp/>d(m,1:k-m)*cosh(k3(m,1:k-m)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)/(cosh(wp%kgen(1:k-m)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>)*cosh(wp%kgen(m+1:k)*<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref>))</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Exclude<sp/>interactions<sp/>with<sp/>components<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>component<sp/>according<sp/>to<sp/>lower<sp/>limit<sp/>Herbers<sp/>1994<sp/>eq.<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">where</highlight><highlight class="normal">(wp%fgen&lt;=deltaf)<sp/>d(m,:)=0.d0</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Exclude<sp/>interactions<sp/>with<sp/>components<sp/>that<sp/>are<sp/>cut-off<sp/>by<sp/>the<sp/>fcutoff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaf&lt;=<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%fcutoff)<sp/>d(m,:)=0.d0</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>phase<sp/>of<sp/>bound<sp/>long<sp/>wave<sp/>assuming<sp/>a<sp/>local<sp/>equilibrium<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>forcing<sp/>of<sp/>interacting<sp/>primary<sp/>waves<sp/>according<sp/>to<sp/>Van<sp/>Dongeren<sp/>et<sp/>al.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>2003<sp/>eq.<sp/>21<sp/>(the<sp/>angle<sp/>is<sp/>the<sp/>imaginary<sp/>part<sp/>of<sp/>the<sp/>natural<sp/>log<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>complex<sp/>number<sp/>as<sp/>long<sp/>as<sp/>the<sp/>complex<sp/>number<sp/>is<sp/>not<sp/>zero)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(comptemp(k-m),comptemp2(k-m))</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comptemp=conjg(wp%CompFn(1,wp%Findex(1)+m:wp%Findex(1)+k-1))</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comptemp2=conjg(wp%CompFn(1,wp%Findex(1):wp%Findex(1)+k-m-1))</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dphi3(m,1:k-m)<sp/>=<sp/><ref refid="namespacewave__boundary__update__module_1a8bb90d2022a5c261597ebdbf6a841aa5" kindref="member">par_pi</ref>+imag(log(comptemp))-imag(log(comptemp2))</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal"><sp/>(comptemp,comptemp2)</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>angle<sp/>of<sp/>bound<sp/>long<sp/>wave<sp/>according<sp/>to<sp/>Van<sp/>Dongeren<sp/>et<sp/>al.<sp/>2003<sp/>eq.<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theta3<sp/>=<sp/>atan2(kky,kkx)</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(term1,term2,term2new,dif,chk1,chk2)</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>m=1,K-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Output<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2621"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<sp/>firsttime)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;lws&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Warning:<sp/>shallow<sp/>water<sp/>so<sp/>long<sp/>wave<sp/>variance<sp/>is<sp/>reduced<sp/>using<sp/>par%nmax&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;sl&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Calculating<sp/>flux<sp/>at<sp/>boundary&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2626"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Allocate<sp/>temporary<sp/>arrays<sp/>for<sp/>upcoming<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(comptemp(halflen-1))</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(comptemp2(wp%tslen))</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>distance<sp/>of<sp/>each<sp/>grid<sp/>point<sp/>to<sp/>reference<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distx(j)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%xb(j)-<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%x0</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>disty(j)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%yb(j)-<ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%y0</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Run<sp/>a<sp/>loop<sp/>over<sp/>the<sp/>offshore<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>energy<sp/>of<sp/>bound<sp/>long<sp/>wave<sp/>according<sp/>to<sp/>Herbers<sp/>1994<sp/>eq.<sp/>1<sp/>based</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>on<sp/>difference-interaction<sp/>coefficient<sp/>and<sp/>energy<sp/>density<sp/>spectra<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>primary<sp/>waves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Robert:<sp/>E<sp/>=<sp/>2*D**2*S**2*dtheta**2*df<sp/>can<sp/>be<sp/>rewritten<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/>2*D**2*Sf**2*df</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eforc<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>m=1,k-1</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eforc(m,1:k-m)<sp/>=<sp/>2*d(m,1:k-m)**2*wp%Sfinterpq(j,1:k-m)*wp%Sfinterpq(j,m+1:k)*wp%dfgen</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Calculate<sp/>bound<sp/>wave<sp/>amplitude<sp/>for<sp/>this<sp/>offshore<sp/>grid<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abnd<sp/>=<sp/>sqrt(2*eforc*wp%dfgen)</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>complex<sp/>description<sp/>of<sp/>bound<sp/>long<sp/>wave<sp/>per<sp/>interaction<sp/>pair<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>primary<sp/>waves<sp/>for<sp/>first<sp/>y-coordinate<sp/>along<sp/>seaside<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftemp(:,:,1)<sp/>=<sp/>abnd/2*exp(-1*<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref>*dphi3)*cg3*dcos(theta3)<sp/></highlight><highlight class="comment">!<sp/>qx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftemp(:,:,2)<sp/>=<sp/>abnd/2*exp(-1*<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref>*dphi3)*cg3*dsin(theta3)<sp/></highlight><highlight class="comment">!<sp/>qy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!Ftemp(:,:,3)<sp/>=<sp/>Abnd/2*exp(-1*par_compi*dphi3)*cg3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<sp/>qtot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ftemp(:,:,3)<sp/>=<sp/>abnd/2*exp(-1*<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref>*dphi3)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>eta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>loop<sp/>over<sp/>qx,qy<sp/>and<sp/>qtot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>iq=1,3</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Unroll<sp/>wave<sp/>component<sp/>to<sp/>correct<sp/>place<sp/>along<sp/>the<sp/>offshore<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ftemp(:,:,iq)<sp/>=<sp/>ftemp(:,:,iq)*<sp/>&amp;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(-1*<ref refid="namespacewave__boundary__update__module_1a7c5f8775195f27f0e040a02965adde83" kindref="member">par_compi</ref>*(kky*disty+kkx*distx))</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>Fourier<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn(2:k)<sp/>=<sp/>sum(ftemp(:,:,iq),dim=2)</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comptemp<sp/>=<sp/>conjg(gn(2:halflen))</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespacemath__tools_1a886b8427f30299b372917272a337331d" kindref="member">flipiv</ref>(comptemp,halflen-1)</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gn(halflen+2:wp%tslen)<sp/>=<sp/>comptemp</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Print<sp/>status<sp/>message<sp/>to<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2673"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iq==3)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;(A,I0,A,I0)&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Flux<sp/>&apos;</highlight><highlight class="normal">,j,</highlight><highlight class="stringliteral">&apos;<sp/>of<sp/>&apos;</highlight><highlight class="normal">,s%ny+1)</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2677"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Inverse<sp/>Discrete<sp/>Fourier<sp/>transformation<sp/>to<sp/>transform<sp/>back<sp/>to<sp/>time<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>from<sp/>frequency<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comptemp2=<ref refid="interfacemath__tools_1_1fft" kindref="compound">fft</ref>(gn,inv=.true.)</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Determine<sp/>mass<sp/>flux<sp/>as<sp/>function<sp/>of<sp/>time<sp/>and<sp/>let<sp/>the<sp/>flux<sp/>gradually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>increase<sp/>and<sp/>decrease<sp/>in<sp/>and<sp/>out<sp/>the<sp/>wave<sp/>time<sp/>record<sp/>using<sp/>the<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>specified<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comptemp2=comptemp2/sqrt(dble(wp%tslen))</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q(j,:,iq)=dreal(comptemp2*wp%tslen)*wp%taperf</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>iq=1,3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>enddo</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>j=1,s%ny+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(comptemp,comptemp2,ftemp)</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(.not.<sp/><ref refid="namespacewave__boundary__datastore_1a196ddd0d638e885e802bf03e02428c1c" kindref="member">waveboundaryparameters</ref>%nonhspectrum)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct)</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct)</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,tslenbc+2))</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,tslenbc+2))</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wp%dtchanged)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Interpolate<sp/>from<sp/>internal<sp/>time<sp/>axis<sp/>to<sp/>output<sp/>time<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>it=2,wp%tslenbc+1</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(wp%tin,q(j,:,1),wp%tslen,<sp/>&amp;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-1)*wp%dtbc,<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(j,it),status)</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal"><ref refid="namespaceinterp_1a0a169735d9debaa040755b8d02360fe0" kindref="member">linear_interp</ref>(wp%tin,q(j,:,2),wp%tslen,<sp/>&amp;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it-1)*wp%dtbc,<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct(j,it),status)</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>no<sp/>need<sp/>for<sp/>interpolation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(:,2:wp%tslenbc+1)<sp/>=<sp/>q(:,:,1)</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct(:,2:wp%tslenbc+1)<sp/>=<sp/>q(:,:,2)</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(:,1)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(:,2)</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(:,wp%tslenbc+2)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qxbct(:,wp%tslenbc+1)</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct(:,1)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct(:,2)</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct(:,wp%tslenbc+2)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%qybct(:,wp%tslenbc+1)</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>j=1,<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>add<sp/>to<sp/>velocity<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%uits(j,:)=wp%uits(j,:)+q(j,:,1)/<ref refid="namespacewave__boundary__update__module_1a408dd34580fbaf98626d3f8a7291ba09" kindref="member">hb0</ref></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>add<sp/>to<sp/>surface<sp/>elevation<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wp%zsits(j,:)=wp%zsits(j,:)+q(j,:,3)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/><sp/><sp/><sp/>enddo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/><sp/>endif</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>par%nonhspectrum==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>Free<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(eforc,d,deltheta,kkx,kky,dphi3,k3,cg3,theta3,gn,abnd,q)</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a178b2db870cbd999305ed8e4b1db0fb3" kindref="member">generate_qbcf</ref></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="comment">!<sp/>--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight><highlight class="comment">!<sp/>---------------<sp/>Non-hydrostatic<sp/>wave<sp/>time<sp/>--------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight><highlight class="comment">!<sp/>----------------<sp/>series<sp/>file<sp/>generation<sp/>----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a873d77631d27553e2b70d4d4e8528b35" kindref="member">generate_nhtimeseries_file</ref>(wp)</highlight></codeline>
<codeline lineno="2736" refid="namespacewave__boundary__update__module_1a873d77631d27553e2b70d4d4e8528b35" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2738"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacelogging__module" kindref="compound">logging_module</ref></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2740"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__datastore" kindref="compound">wave_boundary_datastore</ref></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>input/output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(<ref refid="structwave__boundary__update__module_1_1waveparamsnew" kindref="compound">waveparamsnew</ref>),</highlight><highlight class="keywordtype">intent(inout)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::<sp/>wp</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">!<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILDXBEACH</highlight></codeline>
<codeline lineno="2749"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog(</highlight><highlight class="stringliteral">&apos;ls&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Writing<sp/>short<sp/>wave<sp/>time<sp/>series<sp/>to<sp/>&apos;</highlight><highlight class="normal">,wp%nhfilename)</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2751"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct)</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">allocated</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct))<sp/></highlight><highlight class="keyword">deallocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct)</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen+2))</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">allocate</highlight><highlight class="normal">(<ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct(<ref refid="namespacewave__boundary__update__module_1aaeb1205d5a35b3811c23b4a384328fe3" kindref="member">npb</ref>,wp%tslen+2))</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct(:,2:wp%tslen+1)<sp/>=<sp/>wp%zsits</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct(:,2:wp%tslen+1)<sp/>=<sp/>wp%uits</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct(:,1)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct(:,2)</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct(:,wp%tslen+2)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%zsbct(:,wp%tslen+1)</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct(:,1)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct(:,2)</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct(:,wp%tslen+2)<sp/>=<sp/><ref refid="namespacewave__boundary__datastore_1ad5b1eaf9de56fab12196b39543969cea" kindref="member">waveboundarytimeseries</ref>%ubct(:,wp%tslen+1)</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal"><ref refid="namespacewave__boundary__update__module_1a873d77631d27553e2b70d4d4e8528b35" kindref="member">generate_nhtimeseries_file</ref></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>module</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/hoonhout/Checkouts/XBeach/trunk/src/xbeachlibrary/wave_boundary_update.f90"/>
  </compounddef>
</doxygen>
