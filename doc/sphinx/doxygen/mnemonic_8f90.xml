<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="mnemonic_8f90" kind="file" language="Fortran">
    <compoundname>mnemonic.f90</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">!<sp/><sp/>DO<sp/>NOT<sp/>EDIT<sp/>THIS<sp/>FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/>But<sp/>edit<sp/>variable.f90<sp/>and<sp/>scripts/generate.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">!<sp/><sp/>Compiling<sp/>and<sp/>running<sp/>is<sp/>taken<sp/>care<sp/>of<sp/>by<sp/>the<sp/>Makefile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">&lt;%</highlight></codeline>
<codeline lineno="6"><highlight class="normal">numvars<sp/>=<sp/>len(<ref refid="namespacevariables" kindref="compound">variables</ref>)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">maxnamelen<sp/>=<sp/>max(len(variable[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">])<sp/>for<sp/>variable<sp/>in<sp/><ref refid="namespacevariables" kindref="compound">variables</ref>)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">def<sp/>rank(variable):</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(variable[</highlight><highlight class="stringliteral">&quot;shape&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="10"><highlight class="normal">maxrank<sp/>=<sp/>max(rank(variable)<sp/>for<sp/>variable<sp/>in<sp/><ref refid="namespacevariables" kindref="compound">variables</ref>)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/>::<sp/>numvars<sp/><sp/><sp/><sp/>=<sp/><sp/>${numvars}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/>::<sp/>maxnamelen<sp/>=<sp/><sp/><sp/>${maxnamelen}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/>::<sp/>maxrank<sp/>=<sp/><sp/><sp/><sp/>${maxrank}</highlight></codeline>
<codeline lineno="15"><highlight class="normal">%for<sp/>var<sp/>in<sp/><ref refid="namespacevariables" kindref="compound">variables</ref>:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=slen)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/>::<sp/><sp/>mnem_${var[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">].ljust(maxnamelen)}<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;${var[&apos;</highlight><highlight class="normal">name</highlight><highlight class="stringliteral">&apos;].ljust(maxnamelen)}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">%endfor</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">character(len=slen)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">dimension(numvars)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal"><sp/>::<sp/>mnemonics=<sp/>(/<sp/>&amp;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">%for<sp/>i,<sp/>var<sp/>in<sp/>enumerate(<ref refid="namespacevariables" kindref="compound">variables</ref>):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mnem_${var[</highlight><highlight class="stringliteral">&apos;name&apos;</highlight><highlight class="normal">].ljust(maxnamelen)}${</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="comment">!=<sp/>len(variables)-1<sp/>else<sp/>&apos;&apos;}<sp/>&amp;<sp/>!<sp/>${i+1}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">%endfor</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">!directions<sp/>for<sp/>vi<sp/>vim:<sp/>filetype=fortran<sp/>:<sp/>syntax=fortran</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/hoonhout/Checkouts/XBeach/trunk/src/xbeachlibrary/templates/mnemonic.f90"/>
  </compounddef>
</doxygen>
