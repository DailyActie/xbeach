<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="writelog_8f90" kind="file" language="Fortran">
    <compoundname>writelog.f90</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/>DO<sp/>NOT<sp/>EDIT<sp/>THIS<sp/>FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/>But<sp/>edit<sp/>variables.f90<sp/>and<sp/>scripts/generate.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/><sp/>Compiling<sp/>and<sp/>running<sp/>is<sp/>taken<sp/>care<sp/>of<sp/>by<sp/>the<sp/>Makefile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">&lt;%</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>this<sp/>list<sp/>is<sp/>copied<sp/>to<sp/>writeloginterface.f90</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="normal">formats<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;afafafaf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;afaiaaa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaafaf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aafaf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;afaaa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aafa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaaf&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;afafa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;afaf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;afa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;iiiii&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiaiafa&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aiaiaf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiaiaia&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiaiai&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiafaf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiafa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaaiai&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aaiai&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiai&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiaaa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaai&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aii&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aai&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaaa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aaa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ai&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aa&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;illll&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;af&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;aia&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ia&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fa&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aaia&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;aiaa&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aiaia&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">format2name<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;message_char&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;message_int&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;message_float&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;message_logical&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">format2type<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;character(*)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;integer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;real*8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;logical&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">def<sp/>format2vars(format):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;convert<sp/>a<sp/>format<sp/>code<sp/>to<sp/>a<sp/>list<sp/>of<sp/>variables&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacevariables" kindref="compound">variables</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>letter<sp/>in<sp/>format:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter[letter]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>letter<sp/>in<sp/>format:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter[letter]<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>counter[letter]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#<sp/>prepend<sp/>with<sp/>name<sp/>to<sp/>avoid<sp/>interface<sp/>colission</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="keyword">format</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>format2name[letter]<sp/>+<sp/>str(n)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>format2type[letter]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">:<sp/>name,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;letter&quot;</highlight><highlight class="normal">:<sp/>letter}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacevariables" kindref="compound">variables</ref>.append(variable)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacevariables" kindref="compound">variables</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">def<sp/>vars2write(<ref refid="namespacevariables" kindref="compound">variables</ref>):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="stringliteral">&quot;convert<sp/>variable<sp/>list<sp/>to<sp/>write<sp/>statement&quot;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>writes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>var<sp/>in<sp/><ref refid="namespacevariables" kindref="compound">variables</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>var[</highlight><highlight class="stringliteral">&quot;letter&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#<sp/>trim<sp/>the<sp/>strings</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writes.append(</highlight><highlight class="stringliteral">&quot;trim({0})&quot;</highlight><highlight class="normal">.</highlight><highlight class="keyword">format</highlight><highlight class="normal">(var[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writes.append(var[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">#<sp/>concatenate<sp/>them<sp/>all<sp/>separated<sp/>by<sp/>&quot;,<sp/>&quot;</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">.join(writes)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">%for<sp/></highlight><highlight class="keyword">format</highlight><highlight class="normal"><sp/>in<sp/>formats:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">&lt;%</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>formatting<sp/>for<sp/>variables</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="namespacevariables" kindref="compound">variables</ref><sp/>=<sp/>format2vars(format)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>concatenate<sp/>all<sp/>the<sp/>variables<sp/>by<sp/>,</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="normal">names<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">.join(var[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]<sp/>for<sp/>var<sp/>in<sp/><ref refid="namespacevariables" kindref="compound">variables</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>generate<sp/>the<sp/>write<sp/>statements</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="keyword">write</highlight><highlight class="normal"><sp/>=<sp/>vars2write(<ref refid="namespacevariables" kindref="compound">variables</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">%&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">writelog_${format}(destination,<sp/>form,<sp/>${names})</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">character(*)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>::<sp/><sp/>destination</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">character(*)</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>::<sp/><sp/>form</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">character(len=slen)</highlight><highlight class="normal"><sp/>::<sp/>display</highlight></codeline>
<codeline lineno="76"><highlight class="normal">%for<sp/>var<sp/>in<sp/><ref refid="namespacevariables" kindref="compound">variables</ref>:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>${var[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]},<sp/></highlight><highlight class="keywordtype">intent(in)</highlight><highlight class="normal"><sp/>::<sp/>${var[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">%endfor</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trim(form)==</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(display,*)${write}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">write</highlight><highlight class="normal">(display,form)${write}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordflow"><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">%if<sp/></highlight><highlight class="keyword">format</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>is<sp/>the<sp/>main<sp/>subroutine<sp/>that<sp/>actual<sp/>does<sp/>the<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/>passing<sp/>the<sp/>trimmed<sp/>version<sp/>of<sp/>display<sp/>does<sp/>not<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog_distribute(destination,<sp/>trim(display))</highlight></codeline>
<codeline lineno="88"><highlight class="normal">%else:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">!<sp/>this<sp/>function<sp/>passes<sp/>the<sp/>formatted<sp/>log<sp/>messages<sp/>to<sp/>the<sp/>main<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">call<sp/></highlight><highlight class="normal">writelog_a(destination,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>trim(display))</highlight></codeline>
<codeline lineno="91"><highlight class="normal">%endif</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine<sp/></highlight><highlight class="normal">writelog_${format}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">%endfor</highlight></codeline>
    </programlisting>
    <location file="/Users/hoonhout/Checkouts/XBeach/trunk/src/xbeachlibrary/templates/writelog.f90"/>
  </compounddef>
</doxygen>
